<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="scripts_2vendor_8js" kind="file" language="Javascript">
    <compoundname>vendor.js</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="scripts_2vendor_8js_1a64760079d968f8f82223cea9916712e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function _testCSS</definition>
        <argsstring>(a)</argsstring>
        <name>_testCSS</name>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" line="1" column="1" bodyfile="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" bodystart="1" bodyend="1"/>
      </memberdef>
      <memberdef kind="function" id="scripts_2vendor_8js_1a59efef448f28f60ef60f5b570f8e737c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function _triggerEvent</definition>
        <argsstring>(a, b)</argsstring>
        <name>_triggerEvent</name>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>b</type>
          <defname>b</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" line="1" column="1" bodyfile="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" bodystart="1" bodyend="1"/>
      </memberdef>
      <memberdef kind="function" id="scripts_2vendor_8js_1a8ad3ab5929dead8314407716995a2fba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function _extend</definition>
        <argsstring>(a)</argsstring>
        <name>_extend</name>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" line="1" column="1" bodyfile="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" bodystart="1" bodyend="1"/>
      </memberdef>
      <memberdef kind="function" id="scripts_2vendor_8js_1a2ad18549b1077b7fea6197c2b0617246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function OrderedMap</definition>
        <argsstring>()</argsstring>
        <name>OrderedMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" line="1" column="1" bodyfile="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" bodystart="1" bodyend="1"/>
      </memberdef>
      <memberdef kind="function" id="scripts_2vendor_8js_1a72681d9619365aa725888eece77eee44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function PostcardObject</definition>
        <argsstring>(a, b, c)</argsstring>
        <name>PostcardObject</name>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>b</type>
          <defname>b</defname>
        </param>
        <param>
          <type>c</type>
          <defname>c</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" line="1" column="1" bodyfile="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" bodystart="1" bodyend="1"/>
      </memberdef>
      <memberdef kind="function" id="scripts_2vendor_8js_1ad999b0321327842e6ca3425fac8f60ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function PostcardImageObject</definition>
        <argsstring>(a, b, c)</argsstring>
        <name>PostcardImageObject</name>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>b</type>
          <defname>b</defname>
        </param>
        <param>
          <type>c</type>
          <defname>c</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" line="1" column="1" bodyfile="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" bodystart="1" bodyend="1"/>
      </memberdef>
      <memberdef kind="function" id="scripts_2vendor_8js_1a5794a3c9a3c2269b531dedc8ec97757c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function PostcardTextObject</definition>
        <argsstring>(a, b, c)</argsstring>
        <name>PostcardTextObject</name>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>b</type>
          <defname>b</defname>
        </param>
        <param>
          <type>c</type>
          <defname>c</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" line="1" column="1" bodyfile="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" bodystart="1" bodyend="1"/>
      </memberdef>
      <memberdef kind="function" id="scripts_2vendor_8js_1a661cd7edb9e1dee1eb5880ffacf2d68d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function Postcard</definition>
        <argsstring>(a, b)</argsstring>
        <name>Postcard</name>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>b</type>
          <defname>b</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" line="1" column="1" bodyfile="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js" bodystart="1" bodyend="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">function</highlight><highlight class="normal"><sp/>_testCSS(a){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>in<sp/>document.documentElement.style}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>_triggerEvent(a,b){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(window.CustomEvent)var<sp/>c=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CustomEvent(b);</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{var<sp/>c=document.createEvent(</highlight><highlight class="stringliteral">&quot;CustomEvent&quot;</highlight><highlight class="normal">);c.initCustomEvent(b,!0,!0)}a.dispatchEvent(c)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>_extend(a){a=a||{};</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>b=1;b&lt;arguments.length;b++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(arguments[b])</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>c<sp/>in<sp/>arguments[b])arguments[b].hasOwnProperty(c)&amp;&amp;(a[c]=arguments[b][c]);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>OrderedMap(){this.map={},this._karray=[],this._zarray=[]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>PostcardObject(a,b,c){var<sp/>d={x:0,y:0,w:50,h:50,opacity:1,fill:</highlight><highlight class="stringliteral">&quot;steelblue&quot;</highlight><highlight class="normal">,rotation:0};this.ctx=b,this.type=a,this.opts=_extend({},d,c),this.x=parseInt(this.opts.x,10),this.y=parseInt(this.opts.y,10),this.w=parseInt(this.opts.w,10),this.h=parseInt(this.opts.h,10)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>PostcardImageObject(a,b,c){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>d(a){var<sp/>b=/(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&amp;%@!\-\/]))?/;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!a)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Error(</highlight><highlight class="stringliteral">&quot;no<sp/>URL<sp/>specified&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(-1===a.indexOf(</highlight><highlight class="stringliteral">&quot;http://&quot;</highlight><highlight class="normal">)&amp;&amp;-1===a.indexOf(</highlight><highlight class="stringliteral">&quot;https://&quot;</highlight><highlight class="normal">))h.url=a,e(a);</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{var<sp/>c=</highlight><highlight class="stringliteral">&quot;https:&quot;</highlight><highlight class="normal">===location.protocol,d=h.proxyURL+</highlight><highlight class="stringliteral">&quot;?callback=?&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!d||!b.test(d)||c&amp;&amp;0==d.indexOf(</highlight><highlight class="stringliteral">&quot;http:&quot;</highlight><highlight class="normal">))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Error(</highlight><highlight class="stringliteral">&quot;bad<sp/>or<sp/>insecure<sp/>server<sp/>url<sp/>combination.&quot;</highlight><highlight class="normal">);JSONP.get(d,{url:escape(a)},</highlight><highlight class="keyword">function</highlight><highlight class="normal">(b){h.url=a,h.cache[h.url]=b.data,e(h.cache[h.url])})}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>e(a){var<sp/>b=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Image;b.onload=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){h._canvas.width=this.width,h._canvas.height=this.height,h.imgElm=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,h._ctx.drawImage(h.imgElm,0,0,h._canvas.width,h._canvas.height),h.opts.keepOriginal&amp;&amp;(h.origImgData=h._ctx.getImageData(0,0,h._canvas.width,h._canvas.height)),h.imageloaded=!0,h.userImageLoaded.apply(h),_triggerEvent(h.ctx.canvas,</highlight><highlight class="stringliteral">&quot;forcerender&quot;</highlight><highlight class="normal">),this.onload=f},b.src=a}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>f(){_triggerEvent(h.ctx.canvas,</highlight><highlight class="stringliteral">&quot;forcerender&quot;</highlight><highlight class="normal">)}var<sp/>g={keepOriginal:!0,crop:!1,cropX:0,cropY:0,cropW:0,cropH:0};this.opts=_extend({},g,c),PostcardObject.apply(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&quot;image&quot;</highlight><highlight class="normal">,b,</highlight><highlight class="keyword">this</highlight><highlight class="normal">.opts]),this.imageloaded=!1,this.userImageLoaded=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){},this.cache={},this._canvas=document.createElement(</highlight><highlight class="stringliteral">&quot;canvas&quot;</highlight><highlight class="normal">),this._ctx=this._canvas.getContext(</highlight><highlight class="stringliteral">&quot;2d&quot;</highlight><highlight class="normal">);var<sp/>h=</highlight><highlight class="keyword">this</highlight><highlight class="normal">;a.length&amp;&amp;d(a),this.changeURL=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a===this.url?</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>this.userImageLoaded.apply(</highlight><highlight class="keyword">this</highlight><highlight class="normal">):(this.imageloaded=!1,void(a<sp/>in<sp/>this.cache?(this.url=a,e(this.cache[a])):d(a)))}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>PostcardTextObject(a,b,c){var<sp/>d={fill:</highlight><highlight class="stringliteral">&quot;#ffffff&quot;</highlight><highlight class="normal">,style:</highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">,weight:</highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">,size:</highlight><highlight class="stringliteral">&quot;16px&quot;</highlight><highlight class="normal">,family:</highlight><highlight class="stringliteral">&quot;sans-serif&quot;</highlight><highlight class="normal">,fontString:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,centered:!1};this.opts=_extend({},d,c),PostcardObject.apply(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">,b,</highlight><highlight class="keyword">this</highlight><highlight class="normal">.opts]),this.text=a;var<sp/>e=</highlight><highlight class="keyword">this</highlight><highlight class="normal">;this._canvas=document.createElement(</highlight><highlight class="stringliteral">&quot;canvas&quot;</highlight><highlight class="normal">),this._ctx=this._canvas.getContext(</highlight><highlight class="stringliteral">&quot;2d&quot;</highlight><highlight class="normal">);var<sp/>f=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){e._ctx.font=e.getFont(),e.w=e._ctx.measureText(e.text).width,e.h=parseInt(e.opts.size,10)};this.opts.fontString.length?this.setFont(this.opts.fontString):f()}function<sp/>Postcard(a,b){var<sp/>c={height:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,width:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,proxyURL:SERVER_URL+</highlight><highlight class="stringliteral">&quot;image_proxy.php&quot;</highlight><highlight class="normal">,filename:</highlight><highlight class="stringliteral">&quot;yourpostcard.png&quot;</highlight><highlight class="normal">,renderInterval:</highlight><highlight class="stringliteral">&quot;30&quot;</highlight><highlight class="normal">,allowSelections:!1,backgroundColor:</highlight><highlight class="stringliteral">&quot;#ffffff&quot;</highlight><highlight class="normal">,fontFamily:</highlight><highlight class="stringliteral">&quot;sans-serif&quot;</highlight><highlight class="normal">,fontSize:</highlight><highlight class="stringliteral">&quot;16px&quot;</highlight><highlight class="normal">,fontColor:</highlight><highlight class="stringliteral">&quot;#fff&quot;</highlight><highlight class="normal">,fontStyle:</highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">,fontWeight:</highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal">},d={isOpera:!1,isFirefox:!1,isSafari:!1,isChrome:!1,isIE:!1};this.elm=a,this.opts=_extend({},c,b),this.height=this.opts.height=</highlight><highlight class="keyword">this</highlight><highlight class="normal">.elm.height,</highlight><highlight class="keyword">this</highlight><highlight class="normal">.width=</highlight><highlight class="keyword">this</highlight><highlight class="normal">.opts.width=</highlight><highlight class="keyword">this</highlight><highlight class="normal">.elm.width,</highlight><highlight class="keyword">this</highlight><highlight class="normal">.startingZindex=1,</highlight><highlight class="keyword">this</highlight><highlight class="normal">.ctx=</highlight><highlight class="keyword">this</highlight><highlight class="normal">.elm.getContext(</highlight><highlight class="stringliteral">&quot;2d&quot;</highlight><highlight class="normal">),this.browser=d,this.browser.isOpera=!(!window.opera||!window.opera.version),this.browser.isFirefox=_testCSS(</highlight><highlight class="stringliteral">&quot;MozBoxSizing&quot;</highlight><highlight class="normal">),this.browser.isSafari=Object.prototype.toString.call(window.HTMLElement).indexOf(</highlight><highlight class="stringliteral">&quot;Constructor&quot;</highlight><highlight class="normal">)&gt;0,this.browser.isChrome=!this.browser.isSafari&amp;&amp;_testCSS(</highlight><highlight class="stringliteral">&quot;WebkitTransform&quot;</highlight><highlight class="normal">),this.browser.isIE=!1||_testCSS(</highlight><highlight class="stringliteral">&quot;msTransform&quot;</highlight><highlight class="normal">),document.defaultView&amp;&amp;document.defaultView.getComputedStyle&amp;&amp;(this.stylePaddingLeft=parseInt(document.defaultView.getComputedStyle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">.elm,null).paddingLeft,10)||0,this.stylePaddingTop=parseInt(document.defaultView.getComputedStyle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">.elm,null).paddingTop,10)||0,this.styleBorderLeft=parseInt(document.defaultView.getComputedStyle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">.elm,null).borderLeftWidth,10)||0,this.styleBorderTop=parseInt(document.defaultView.getComputedStyle(</highlight><highlight class="keyword">this</highlight><highlight class="normal">.elm,null).borderTopWidth,10)||0);var<sp/>e=document.body.parentNode;this.htmlTop=e.offsetTop,this.htmlLeft=e.offsetLeft,this.valid=!1,this.dragging=!1,this.selection=null,this.dragoffx=0,this.dragoffy=0;var<sp/>f=</highlight><highlight class="keyword">this</highlight><highlight class="normal">;PostcardImageObject.prototype.proxyURL=this.opts.proxyURL,JSONP.init({error:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){console.error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>:<sp/>&quot;</highlight><highlight class="normal">+a.url)}}),this.renderingStack=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>OrderedMap,setInterval(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){f.render()},f.opts.renderInterval),this.background=this.addObject(</highlight><highlight class="stringliteral">&quot;__background__&quot;</highlight><highlight class="normal">,0,{w:this.width,h:this.height,fill:this.opts.backgroundColor}),this.elm.addEventListener(</highlight><highlight class="stringliteral">&quot;forcerender&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){f.triggerRefresh()}),this.elm.addEventListener(</highlight><highlight class="stringliteral">&quot;selectstart&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.preventDefault(),!1},!1),this.elm.addEventListener(</highlight><highlight class="stringliteral">&quot;mousedown&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){f.dragging=!0,f.opts.allowSelections&amp;&amp;h(a)},!1),this.elm.addEventListener(</highlight><highlight class="stringliteral">&quot;mousemove&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){f.opts.allowSelections&amp;&amp;i(a)},!0),this.elm.addEventListener(</highlight><highlight class="stringliteral">&quot;mouseup&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){f.dragging=!1},!0);var<sp/>g=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){var<sp/>b,c,d=f.elm,e=0,g=0;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0!==d.offsetParent)</highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>e+=d.offsetLeft,g+=d.offsetTop;</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(d=d.offsetParent);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e+=f.stylePaddingLeft+f.styleBorderLeft+f.htmlLeft,g+=f.stylePaddingTop+f.styleBorderTop+f.htmlTop,b=a.pageX-e,c=a.pageY-g,{x:b,y:c}},h=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){var<sp/>b=g(a),c=b.x,d=b.y,e=0,h=null;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f.renderingStack.forEach(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a,b,f){f.contains(c,d)&amp;&amp;b&gt;=e&amp;&amp;(h=f)}),h?(f.dragoffx=b.x-h.x,f.dragoffy=b.y-h.y,f.selection=h,void(f.valid=!1)):</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(f.selection&amp;&amp;(f.selection=null,f.valid=!1))},i=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f.dragging){var<sp/>b=g(a);f.selection.x=b.x-f.dragoffx,f.selection.y=b.y-f.dragoffy,f.valid=!1}};this.onMouseDown=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){this.userMouseDown=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(b){var<sp/>c=g(b);a(c.x,c.y)},this.elm.addEventListener(</highlight><highlight class="stringliteral">&quot;mousedown&quot;</highlight><highlight class="normal">,this.userMouseDown,!1)},this.onMouseMove=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){this.userMouseMove=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(b){var<sp/>c=g(b);a(c.x,c.y)},this.elm.addEventListener(</highlight><highlight class="stringliteral">&quot;mousemove&quot;</highlight><highlight class="normal">,this.userMouseMove,!0)},this.onMouseUp=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){this.userMouseUp=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(b){var<sp/>c=g(b);a(c.x,c.y)},this.elm.addEventListener(</highlight><highlight class="stringliteral">&quot;mouseup&quot;</highlight><highlight class="normal">,this.userMouseUp,!0)},this.clearMouseEvents=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){this.userMouseDown&amp;&amp;this.elm.removeEventListener(</highlight><highlight class="stringliteral">&quot;mousedown&quot;</highlight><highlight class="normal">,this.userMouseDown,!1),this.userMouseMove&amp;&amp;this.elm.removeEventListener(</highlight><highlight class="stringliteral">&quot;mousemove&quot;</highlight><highlight class="normal">,this.userMouseMove,!0),this.userMouseUp&amp;&amp;this.elm.removeEventListener(</highlight><highlight class="stringliteral">&quot;mouseup&quot;</highlight><highlight class="normal">,this.userMouseUp,!0)}}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(global,factory){</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">==typeof<sp/>module&amp;&amp;</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">==typeof<sp/>module.exports?module.exports=global.document?factory(global,!0):function(w){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!w.document)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Error(</highlight><highlight class="stringliteral">&quot;jQuery<sp/>requires<sp/>a<sp/>window<sp/>with<sp/>a<sp/>document&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>factory(w)}:factory(global)}(</highlight><highlight class="stringliteral">&quot;undefined&quot;</highlight><highlight class="normal">!=typeof<sp/>window?window:</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(window,noGlobal){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>isArraylike(obj){var<sp/>length=</highlight><highlight class="stringliteral">&quot;length&quot;</highlight><highlight class="normal">in<sp/>obj&amp;&amp;obj.length,type=jQuery.type(obj);</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">===type||jQuery.isWindow(obj)?!1:1===obj.nodeType&amp;&amp;length?!0:</highlight><highlight class="stringliteral">&quot;array&quot;</highlight><highlight class="normal">===type||0===length||</highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal">==typeof<sp/>length&amp;&amp;length&gt;0&amp;&amp;length-1<sp/>in<sp/>obj}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>winnow(elements,qualifier,not){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(jQuery.isFunction(qualifier))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jQuery.grep(elements,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem,i){return!!qualifier.call(elem,i,elem)!==not});</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(qualifier.nodeType)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jQuery.grep(elements,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem===qualifier!==not});</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">==typeof<sp/>qualifier){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(risSimple.test(qualifier))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jQuery.filter(qualifier,elements,not);qualifier=jQuery.filter(qualifier,elements)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jQuery.grep(elements,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indexOf.call(qualifier,elem)&gt;=0!==not})}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>sibling(cur,dir){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;(cur=cur[dir])&amp;&amp;1!==cur.nodeType;);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cur}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createOptions(options){var<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">=optionsCache[options]={};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jQuery.each(options.match(rnotwhite)||[],</highlight><highlight class="keyword">function</highlight><highlight class="normal">(_,flag){</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[flag]=!0}),</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>completed(){document.removeEventListener(</highlight><highlight class="stringliteral">&quot;DOMContentLoaded&quot;</highlight><highlight class="normal">,completed,!1),window.removeEventListener(</highlight><highlight class="stringliteral">&quot;load&quot;</highlight><highlight class="normal">,completed,!1),jQuery.ready()}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>Data(){Object.defineProperty(this.cache={},0,{</highlight><highlight class="keyword">get</highlight><highlight class="normal">:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{}}}),this.expando=jQuery.expando+Data.uid++}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>dataAttr(elem,key,data){var<sp/>name;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0===data&amp;&amp;1===elem.nodeType)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name=</highlight><highlight class="stringliteral">&quot;data-&quot;</highlight><highlight class="normal">+key.replace(rmultiDash,</highlight><highlight class="stringliteral">&quot;-$1&quot;</highlight><highlight class="normal">).toLowerCase(),data=elem.getAttribute(name),</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">==typeof<sp/>data){</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{data=</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">===data?!0:</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">===data?!1:</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">===data?null:+data+</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">===data?+data:rbrace.test(data)?jQuery.parseJSON(data):data}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){}data_user.set(elem,key,data)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>data=</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>returnTrue(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!0}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>returnFalse(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!1}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>safeActiveElement(){</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>document.activeElement}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(err){}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>manipulationTarget(elem,content){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jQuery.nodeName(elem,</highlight><highlight class="stringliteral">&quot;table&quot;</highlight><highlight class="normal">)&amp;&amp;jQuery.nodeName(11!==content.nodeType?content:content.firstChild,</highlight><highlight class="stringliteral">&quot;tr&quot;</highlight><highlight class="normal">)?elem.getElementsByTagName(</highlight><highlight class="stringliteral">&quot;tbody&quot;</highlight><highlight class="normal">)[0]||elem.appendChild(elem.ownerDocument.createElement(</highlight><highlight class="stringliteral">&quot;tbody&quot;</highlight><highlight class="normal">)):elem}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>disableScript(elem){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem.type=(null!==elem.getAttribute(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">))+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+elem.type,elem}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>restoreScript(elem){var<sp/>match=rscriptTypeMasked.exec(elem.type);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>match?elem.type=match[1]:elem.removeAttribute(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">),elem}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>setGlobalEval(elems,refElements){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0,l=elems.length;l&gt;i;i++)data_priv.set(elems[i],</highlight><highlight class="stringliteral">&quot;globalEval&quot;</highlight><highlight class="normal">,!refElements||data_priv.get(refElements[i],</highlight><highlight class="stringliteral">&quot;globalEval&quot;</highlight><highlight class="normal">))}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>cloneCopyEvent(src,dest){var<sp/>i,l,type,pdataOld,pdataCur,udataOld,udataCur,events;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(1===dest.nodeType){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data_priv.hasData(src)&amp;&amp;(pdataOld=data_priv.access(src),pdataCur=data_priv.set(dest,pdataOld),events=pdataOld.events)){</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pdataCur.handle,pdataCur.events={};</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(type<sp/>in<sp/>events)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,l=events[type].length;l&gt;i;i++)jQuery.event.add(dest,type,events[type][i])}data_user.hasData(src)&amp;&amp;(udataOld=data_user.access(src),udataCur=jQuery.extend({},udataOld),data_user.set(dest,udataCur))}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getAll(context,tag){var<sp/>ret=context.getElementsByTagName?context.getElementsByTagName(tag||</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">):context.querySelectorAll?context.querySelectorAll(tag||</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">):[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0===tag||tag&amp;&amp;jQuery.nodeName(context,tag)?jQuery.merge([context],ret):ret}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>fixInput(src,dest){var<sp/>nodeName=dest.nodeName.toLowerCase();</highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">===nodeName&amp;&amp;rcheckableType.test(src.type)?dest.checked=src.checked:(</highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">===nodeName||</highlight><highlight class="stringliteral">&quot;textarea&quot;</highlight><highlight class="normal">===nodeName)&amp;&amp;(dest.defaultValue=src.defaultValue)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>actualDisplay(name,doc){var<sp/>style,elem=jQuery(doc.createElement(name)).appendTo(doc.body),display=window.getDefaultComputedStyle&amp;&amp;(style=window.getDefaultComputedStyle(elem[0]))?style.display:jQuery.css(elem[0],</highlight><highlight class="stringliteral">&quot;display&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem.detach(),display}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>defaultDisplay(nodeName){var<sp/>doc=document,display=elemdisplay[nodeName];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>display||(display=actualDisplay(nodeName,doc),</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">!==display&amp;&amp;display||(iframe=(iframe||jQuery(</highlight><highlight class="stringliteral">&quot;&lt;iframe<sp/>frameborder=&apos;0&apos;<sp/>width=&apos;0&apos;<sp/>height=&apos;0&apos;/&gt;&quot;</highlight><highlight class="normal">)).appendTo(doc.documentElement),doc=iframe[0].contentDocument,doc.write(),doc.close(),display=actualDisplay(nodeName,doc),iframe.detach()),elemdisplay[nodeName]=display),display}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>curCSS(elem,name,computed){var<sp/>width,minWidth,maxWidth,ret,style=elem.style;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>computed=computed||getStyles(elem),computed&amp;&amp;(ret=computed.getPropertyValue(name)||computed[name]),computed&amp;&amp;(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">!==ret||jQuery.contains(elem.ownerDocument,elem)||(ret=jQuery.style(elem,name)),rnumnonpx.test(ret)&amp;&amp;rmargin.test(name)&amp;&amp;(width=style.width,minWidth=style.minWidth,maxWidth=style.maxWidth,style.minWidth=style.maxWidth=style.width=ret,ret=computed.width,style.width=width,style.minWidth=minWidth,style.maxWidth=maxWidth)),</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0!==ret?ret+</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:ret}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>addGetHookIf(conditionFn,hookFn){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{</highlight><highlight class="keyword">get</highlight><highlight class="normal">:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conditionFn()?</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>this.</highlight><highlight class="keyword">get</highlight><highlight class="normal">:(this.</highlight><highlight class="keyword">get</highlight><highlight class="normal">=hookFn).apply(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,arguments)}}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>vendorPropName(style,name){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name<sp/>in<sp/>style)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>capName=name[0].toUpperCase()+name.slice(1),origName=name,i=cssPrefixes.length;i--;)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name=cssPrefixes[i]+capName,name<sp/>in<sp/>style)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>origName}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>setPositiveNumber(elem,value,subtract){var<sp/>matches=rnumsplit.exec(value);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matches?Math.max(0,matches[1]-(subtract||0))+(matches[2]||</highlight><highlight class="stringliteral">&quot;px&quot;</highlight><highlight class="normal">):value}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>augmentWidthOrHeight(elem,name,extra,isBorderBox,styles){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=extra===(isBorderBox?</highlight><highlight class="stringliteral">&quot;border&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;content&quot;</highlight><highlight class="normal">)?4:</highlight><highlight class="stringliteral">&quot;width&quot;</highlight><highlight class="normal">===name?1:0,val=0;4&gt;i;i+=2)</highlight><highlight class="stringliteral">&quot;margin&quot;</highlight><highlight class="normal">===extra&amp;&amp;(val+=jQuery.css(elem,extra+cssExpand[i],!0,styles)),isBorderBox?(</highlight><highlight class="stringliteral">&quot;content&quot;</highlight><highlight class="normal">===extra&amp;&amp;(val-=jQuery.css(elem,</highlight><highlight class="stringliteral">&quot;padding&quot;</highlight><highlight class="normal">+cssExpand[i],!0,styles)),</highlight><highlight class="stringliteral">&quot;margin&quot;</highlight><highlight class="normal">!==extra&amp;&amp;(val-=jQuery.css(elem,</highlight><highlight class="stringliteral">&quot;border&quot;</highlight><highlight class="normal">+cssExpand[i]+</highlight><highlight class="stringliteral">&quot;Width&quot;</highlight><highlight class="normal">,!0,styles))):(val+=jQuery.css(elem,</highlight><highlight class="stringliteral">&quot;padding&quot;</highlight><highlight class="normal">+cssExpand[i],!0,styles),</highlight><highlight class="stringliteral">&quot;padding&quot;</highlight><highlight class="normal">!==extra&amp;&amp;(val+=jQuery.css(elem,</highlight><highlight class="stringliteral">&quot;border&quot;</highlight><highlight class="normal">+cssExpand[i]+</highlight><highlight class="stringliteral">&quot;Width&quot;</highlight><highlight class="normal">,!0,styles)));</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getWidthOrHeight(elem,name,extra){var<sp/>valueIsBorderBox=!0,val=</highlight><highlight class="stringliteral">&quot;width&quot;</highlight><highlight class="normal">===name?elem.offsetWidth:elem.offsetHeight,styles=getStyles(elem),isBorderBox=</highlight><highlight class="stringliteral">&quot;border-box&quot;</highlight><highlight class="normal">===jQuery.css(elem,</highlight><highlight class="stringliteral">&quot;boxSizing&quot;</highlight><highlight class="normal">,!1,styles);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0&gt;=val||null==val){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val=curCSS(elem,name,styles),(0&gt;val||null==val)&amp;&amp;(val=elem.style[name]),rnumnonpx.test(val))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;valueIsBorderBox=isBorderBox&amp;&amp;(support.boxSizingReliable()||val===elem.style[name]),val=parseFloat(val)||0}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val+augmentWidthOrHeight(elem,name,extra||(isBorderBox?</highlight><highlight class="stringliteral">&quot;border&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;content&quot;</highlight><highlight class="normal">),valueIsBorderBox,styles)+</highlight><highlight class="stringliteral">&quot;px&quot;</highlight><highlight class="normal">}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>showHide(elements,show){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>display,elem,hidden,values=[],index=0,length=elements.length;length&gt;index;index++)elem=elements[index],elem.style&amp;&amp;(values[index]=data_priv.get(elem,</highlight><highlight class="stringliteral">&quot;olddisplay&quot;</highlight><highlight class="normal">),display=elem.style.display,show?(values[index]||</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">!==display||(elem.style.display=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">===elem.style.display&amp;&amp;isHidden(elem)&amp;&amp;(values[index]=data_priv.access(elem,</highlight><highlight class="stringliteral">&quot;olddisplay&quot;</highlight><highlight class="normal">,defaultDisplay(elem.nodeName)))):(hidden=isHidden(elem),</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">===display&amp;&amp;hidden||data_priv.set(elem,</highlight><highlight class="stringliteral">&quot;olddisplay&quot;</highlight><highlight class="normal">,hidden?display:jQuery.css(elem,</highlight><highlight class="stringliteral">&quot;display&quot;</highlight><highlight class="normal">))));</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(index=0;length&gt;index;index++)elem=elements[index],elem.style&amp;&amp;(show&amp;&amp;</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">!==elem.style.display&amp;&amp;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">!==elem.style.display||(elem.style.display=show?values[index]||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">));</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>Tween(elem,options,prop,end,easing){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Tween.prototype.init(elem,options,prop,end,easing)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createFxNow(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setTimeout(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){fxNow=</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0}),fxNow=jQuery.now()}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>genFx(type,includeWidth){var<sp/>which,i=0,attrs={height:type};</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(includeWidth=includeWidth?1:0;4&gt;i;i+=2-includeWidth)which=cssExpand[i],attrs[</highlight><highlight class="stringliteral">&quot;margin&quot;</highlight><highlight class="normal">+which]=attrs[</highlight><highlight class="stringliteral">&quot;padding&quot;</highlight><highlight class="normal">+which]=type;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>includeWidth&amp;&amp;(attrs.opacity=attrs.width=type),attrs}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createTween(value,prop,animation){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>tween,collection=(tweeners[prop]||[]).concat(tweeners[</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">]),index=0,length=collection.length;length&gt;index;index++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tween=collection[index].call(animation,prop,value))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tween}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>defaultPrefilter(elem,props,opts){var<sp/>prop,value,toggle,tween,hooks,oldfire,display,checkDisplay,anim=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,orig={},style=elem.style,hidden=elem.nodeType&amp;&amp;isHidden(elem),dataShow=data_priv.get(elem,</highlight><highlight class="stringliteral">&quot;fxshow&quot;</highlight><highlight class="normal">);opts.queue||(hooks=jQuery._queueHooks(elem,</highlight><highlight class="stringliteral">&quot;fx&quot;</highlight><highlight class="normal">),null==hooks.unqueued&amp;&amp;(hooks.unqueued=0,oldfire=hooks.empty.fire,hooks.empty.fire=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){hooks.unqueued||oldfire()}),hooks.unqueued++,anim.always(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){anim.always(function(){hooks.unqueued--,jQuery.queue(elem,</highlight><highlight class="stringliteral">&quot;fx&quot;</highlight><highlight class="normal">).length||hooks.empty.fire()})})),1===elem.nodeType&amp;&amp;(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">in<sp/>props||</highlight><highlight class="stringliteral">&quot;width&quot;</highlight><highlight class="normal">in<sp/>props)&amp;&amp;(opts.overflow=[style.overflow,style.overflowX,style.overflowY],display=jQuery.css(elem,</highlight><highlight class="stringliteral">&quot;display&quot;</highlight><highlight class="normal">),checkDisplay=</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">===display?data_priv.get(elem,</highlight><highlight class="stringliteral">&quot;olddisplay&quot;</highlight><highlight class="normal">)||defaultDisplay(elem.nodeName):display,</highlight><highlight class="stringliteral">&quot;inline&quot;</highlight><highlight class="normal">===checkDisplay&amp;&amp;</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">===jQuery.css(elem,</highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">)&amp;&amp;(style.display=</highlight><highlight class="stringliteral">&quot;inline-block&quot;</highlight><highlight class="normal">)),opts.overflow&amp;&amp;(style.overflow=</highlight><highlight class="stringliteral">&quot;hidden&quot;</highlight><highlight class="normal">,anim.always(function(){style.overflow=opts.overflow[0],style.overflowX=opts.overflow[1],style.overflowY=opts.overflow[2]}));</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(prop<sp/>in<sp/>props)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value=props[prop],rfxtypes.exec(value)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>props[prop],toggle=toggle||</highlight><highlight class="stringliteral">&quot;toggle&quot;</highlight><highlight class="normal">===value,value===(hidden?</highlight><highlight class="stringliteral">&quot;hide&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;show&quot;</highlight><highlight class="normal">)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;show&quot;</highlight><highlight class="normal">!==value||!dataShow||</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0===dataShow[prop])</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;hidden=!0}orig[prop]=dataShow&amp;&amp;dataShow[prop]||jQuery.style(elem,prop)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>display=</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(jQuery.isEmptyObject(orig))</highlight><highlight class="stringliteral">&quot;inline&quot;</highlight><highlight class="normal">===(</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">===display?defaultDisplay(elem.nodeName):display)&amp;&amp;(style.display=display);</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{dataShow?</highlight><highlight class="stringliteral">&quot;hidden&quot;</highlight><highlight class="normal">in<sp/>dataShow&amp;&amp;(hidden=dataShow.hidden):dataShow=data_priv.access(elem,</highlight><highlight class="stringliteral">&quot;fxshow&quot;</highlight><highlight class="normal">,{}),toggle&amp;&amp;(dataShow.hidden=!hidden),hidden?jQuery(elem).show():anim.done(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){jQuery(elem).hide()}),anim.done(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>prop;data_priv.remove(elem,</highlight><highlight class="stringliteral">&quot;fxshow&quot;</highlight><highlight class="normal">);for(prop<sp/>in<sp/>orig)jQuery.style(elem,prop,orig[prop])});</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(prop<sp/>in<sp/>orig)tween=createTween(hidden?dataShow[prop]:0,prop,anim),prop<sp/>in<sp/>dataShow||(dataShow[prop]=tween.start,hidden&amp;&amp;(tween.end=tween.start,tween.start=</highlight><highlight class="stringliteral">&quot;width&quot;</highlight><highlight class="normal">===prop||</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">===prop?1:0))}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>propFilter(props,specialEasing){var<sp/>index,name,easing,value,hooks;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(index<sp/>in<sp/>props)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name=jQuery.camelCase(index),easing=specialEasing[name],value=props[index],jQuery.isArray(value)&amp;&amp;(easing=value[1],value=props[index]=value[0]),index!==name&amp;&amp;(props[name]=value,</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>props[index]),hooks=jQuery.cssHooks[name],hooks&amp;&amp;</highlight><highlight class="stringliteral">&quot;expand&quot;</highlight><highlight class="normal">in<sp/>hooks){value=hooks.expand(value),</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>props[name];</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(index<sp/>in<sp/>value)index<sp/>in<sp/>props||(props[index]=value[index],specialEasing[index]=easing)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>specialEasing[name]=easing}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>Animation(elem,properties,options){var<sp/>result,stopped,index=0,length=animationPrefilters.length,deferred=jQuery.Deferred().always(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tick.elem}),tick=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stopped)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!1;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>currentTime=fxNow||createFxNow(),remaining=Math.max(0,animation.startTime+animation.duration-currentTime),temp=remaining/animation.duration||0,percent=1-temp,index=0,length=animation.tweens.length;length&gt;index;index++)animation.tweens[index].run(percent);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deferred.notifyWith(elem,[animation,percent,remaining]),1&gt;percent&amp;&amp;length?remaining:(deferred.resolveWith(elem,[animation]),!1)},animation=deferred.promise({elem:elem,props:jQuery.extend({},properties),opts:jQuery.extend(!0,{specialEasing:{}},options),originalProperties:properties,originalOptions:options,startTime:fxNow||createFxNow(),duration:options.duration,tweens:[],createTween:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(prop,end){var<sp/>tween=jQuery.Tween(elem,animation.opts,prop,end,animation.opts.specialEasing[prop]||animation.opts.easing);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>animation.tweens.push(tween),tween},stop:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(gotoEnd){var<sp/>index=0,length=gotoEnd?animation.tweens.length:0;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stopped)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(stopped=!0;length&gt;index;index++)animation.tweens[index].run(1);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gotoEnd?deferred.resolveWith(elem,[animation,gotoEnd]):deferred.rejectWith(elem,[animation,gotoEnd]),</highlight><highlight class="keyword">this</highlight><highlight class="normal">}}),props=animation.props;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(propFilter(props,animation.opts.specialEasing);length&gt;index;index++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result=animationPrefilters[index].call(animation,elem,props,animation.opts))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jQuery.map(props,createTween,animation),jQuery.isFunction(animation.opts.start)&amp;&amp;animation.opts.start.call(elem,animation),jQuery.fx.timer(jQuery.extend(tick,{elem:elem,anim:animation,queue:animation.opts.queue})),animation.progress(animation.opts.progress).done(animation.opts.done,animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>addToPrefiltersOrTransports(structure){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(dataTypeExpression,func){</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">!=typeof<sp/>dataTypeExpression&amp;&amp;(func=dataTypeExpression,dataTypeExpression=</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">);var<sp/>dataType,i=0,dataTypes=dataTypeExpression.toLowerCase().match(rnotwhite)||[];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(jQuery.isFunction(func))</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;dataType=dataTypes[i++];)</highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">===dataType[0]?(dataType=dataType.slice(1)||</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,(structure[dataType]=structure[dataType]||[]).unshift(func)):(structure[dataType]=structure[dataType]||[]).push(func)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>inspectPrefiltersOrTransports(structure,options,originalOptions,jqXHR){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>inspect(dataType){var<sp/>selected;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inspected[dataType]=!0,jQuery.each(structure[dataType]||[],</highlight><highlight class="keyword">function</highlight><highlight class="normal">(_,prefilterOrFactory){var<sp/>dataTypeOrTransport=prefilterOrFactory(options,originalOptions,jqXHR);</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">!=typeof<sp/>dataTypeOrTransport||seekingTransport||inspected[dataTypeOrTransport]?seekingTransport?!(selected=dataTypeOrTransport):</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0:(options.dataTypes.unshift(dataTypeOrTransport),inspect(dataTypeOrTransport),!1)}),selected}var<sp/>inspected={},seekingTransport=structure===transports;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inspect(options.dataTypes[0])||!inspected[</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">]&amp;&amp;inspect(</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ajaxExtend(target,src){var<sp/>key,deep,flatOptions=jQuery.ajaxSettings.flatOptions||{};</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(key<sp/>in<sp/>src)</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0!==src[key]&amp;&amp;((flatOptions[key]?target:deep||(deep={}))[key]=src[key]);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deep&amp;&amp;jQuery.extend(!0,target,deep),target}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ajaxHandleResponses(s,jqXHR,responses){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>ct,type,finalDataType,firstDataType,contents=s.contents,dataTypes=s.dataTypes;</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">===dataTypes[0];)dataTypes.shift(),</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0===ct&amp;&amp;(ct=s.mimeType||jqXHR.getResponseHeader(</highlight><highlight class="stringliteral">&quot;Content-Type&quot;</highlight><highlight class="normal">));</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ct)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(type<sp/>in<sp/>contents)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(contents[type]&amp;&amp;contents[type].test(ct)){dataTypes.unshift(type);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataTypes[0]in<sp/>responses)finalDataType=dataTypes[0];</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(type<sp/>in<sp/>responses){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!dataTypes[0]||s.converters[type+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+dataTypes[0]]){finalDataType=type;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">}firstDataType||(firstDataType=type)}finalDataType=finalDataType||firstDataType}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finalDataType?(finalDataType!==dataTypes[0]&amp;&amp;dataTypes.unshift(finalDataType),responses[finalDataType]):</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ajaxConvert(s,response,jqXHR,isSuccess){var<sp/>conv2,current,conv,tmp,prev,converters={},dataTypes=s.dataTypes.slice();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataTypes[1])</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(conv<sp/>in<sp/>s.converters)converters[conv.toLowerCase()]=s.converters[conv];</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(current=dataTypes.shift();current;)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s.responseFields[current]&amp;&amp;(jqXHR[s.responseFields[current]]=response),!prev&amp;&amp;isSuccess&amp;&amp;s.dataFilter&amp;&amp;(response=s.dataFilter(response,s.dataType)),prev=current,current=dataTypes.shift())</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">===current)current=prev;</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">!==prev&amp;&amp;prev!==current){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conv=converters[prev+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+current]||converters[</highlight><highlight class="stringliteral">&quot;*<sp/>&quot;</highlight><highlight class="normal">+current],!conv)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(conv2<sp/>in<sp/>converters)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp=conv2.split(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">),tmp[1]===current&amp;&amp;(conv=converters[prev+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+tmp[0]]||converters[</highlight><highlight class="stringliteral">&quot;*<sp/>&quot;</highlight><highlight class="normal">+tmp[0]])){conv===!0?conv=converters[conv2]:converters[conv2]!==!0&amp;&amp;(current=tmp[0],dataTypes.unshift(tmp[1]));</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conv!==!0)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conv&amp;&amp;s[</highlight><highlight class="stringliteral">&quot;throws&quot;</highlight><highlight class="normal">])response=conv(response);</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{response=conv(response)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{state:</highlight><highlight class="stringliteral">&quot;parsererror&quot;</highlight><highlight class="normal">,error:conv?e:</highlight><highlight class="stringliteral">&quot;No<sp/>conversion<sp/>from<sp/>&quot;</highlight><highlight class="normal">+prev+</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">+current}}}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{state:</highlight><highlight class="stringliteral">&quot;success&quot;</highlight><highlight class="normal">,data:response}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>buildParams(prefix,obj,traditional,add){var<sp/>name;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(jQuery.isArray(obj))jQuery.each(obj,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(i,v){traditional||rbracket.test(prefix)?add(prefix,v):buildParams(prefix+</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">+(</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">==typeof<sp/>v?i:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">,v,traditional,add)});</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(traditional||</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">!==jQuery.type(obj))add(prefix,obj);</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(name<sp/>in<sp/>obj)buildParams(prefix+</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">,obj[name],traditional,add)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getWindow(elem){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jQuery.isWindow(elem)?elem:9===elem.nodeType&amp;&amp;elem.defaultView}var<sp/>arr=[],slice=arr.slice,concat=arr.concat,push=arr.push,indexOf=arr.indexOf,class2type={},toString=class2type.toString,hasOwn=class2type.hasOwnProperty,support={},document=window.document,version=</highlight><highlight class="stringliteral">&quot;2.1.4&quot;</highlight><highlight class="normal">,jQuery=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(selector,context){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>jQuery.fn.init(selector,context)},rtrim=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,rmsPrefix=/^-ms-/,rdashAlpha=/-([\da-z])/gi,fcamelCase=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(all,letter){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>letter.toUpperCase()};jQuery.fn=jQuery.prototype={jquery:version,constructor:jQuery,selector:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,length:0,toArray:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>slice.call(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)},</highlight><highlight class="keyword">get</highlight><highlight class="normal">:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(num){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null!=num?0&gt;num?</highlight><highlight class="keyword">this</highlight><highlight class="normal">[num+this.length]:</highlight><highlight class="keyword">this</highlight><highlight class="normal">[num]:slice.call(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)},pushStack:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elems){var<sp/>ret=jQuery.merge(this.constructor(),elems);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret.prevObject=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,ret.context=this.context,ret},each:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(callback,args){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jQuery.each(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,callback,args)},map:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(callback){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.pushStack(jQuery.map(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem,i){return<sp/>callback.call(elem,i,elem)}))},slice:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.pushStack(slice.apply(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,arguments))},first:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.eq(0)},last:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.eq(-1)},eq:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(i){var<sp/>len=this.length,j=+i+(0&gt;i?len:0);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.pushStack(j&gt;=0&amp;&amp;len&gt;j?[</highlight><highlight class="keyword">this</highlight><highlight class="normal">[j]]:[])},end:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.prevObject||this.constructor(null)},push:push,sort:arr.sort,splice:arr.splice},jQuery.extend=jQuery.fn.extend=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>options,name,src,copy,copyIsArray,clone,target=arguments[0]||{},i=1,length=arguments.length,deep=!1;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;boolean&quot;</highlight><highlight class="normal">==typeof<sp/>target&amp;&amp;(deep=target,target=arguments[i]||{},i++),</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">==typeof<sp/>target||jQuery.isFunction(target)||(target={}),i===length&amp;&amp;(target=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i--);length&gt;i;i++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(null!=(options=arguments[i]))</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(name<sp/>in<sp/>options)src=target[name],copy=options[name],target!==copy&amp;&amp;(deep&amp;&amp;copy&amp;&amp;(jQuery.isPlainObject(copy)||(copyIsArray=jQuery.isArray(copy)))?(copyIsArray?(copyIsArray=!1,clone=src&amp;&amp;jQuery.isArray(src)?src:[]):clone=src&amp;&amp;jQuery.isPlainObject(src)?src:{},target[name]=jQuery.extend(deep,clone,copy)):</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0!==copy&amp;&amp;(target[name]=copy));</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>target},jQuery.extend({expando:</highlight><highlight class="stringliteral">&quot;jQuery&quot;</highlight><highlight class="normal">+(version+Math.random()).replace(/\D/g,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),isReady:!0,error:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(msg){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Error(msg)},noop:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){},isFunction:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(obj){</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">===jQuery.type(obj)},isArray:Array.isArray,isWindow:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(obj){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null!=obj&amp;&amp;obj===obj.window},isNumeric:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(obj){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!jQuery.isArray(obj)&amp;&amp;obj-parseFloat(obj)+1&gt;=0},isPlainObject:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(obj){</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">!==jQuery.type(obj)||obj.nodeType||jQuery.isWindow(obj)?!1:obj.constructor&amp;&amp;!hasOwn.call(obj.constructor.prototype,</highlight><highlight class="stringliteral">&quot;isPrototypeOf&quot;</highlight><highlight class="normal">)?!1:!0},isEmptyObject:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(obj){var<sp/>name;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(name<sp/>in<sp/>obj)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!1;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!0},type:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(obj){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null==obj?obj+</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">==typeof<sp/>obj||</highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">==typeof<sp/>obj?class2type[toString.call(obj)]||</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">:typeof<sp/>obj},globalEval:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(code){var<sp/>script,indirect=eval;code=jQuery.trim(code),code&amp;&amp;(1===code.indexOf(</highlight><highlight class="stringliteral">&quot;use<sp/>strict&quot;</highlight><highlight class="normal">)?(script=document.createElement(</highlight><highlight class="stringliteral">&quot;script&quot;</highlight><highlight class="normal">),script.text=code,document.head.appendChild(script).parentNode.removeChild(script)):indirect(code))},camelCase:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.replace(rmsPrefix,</highlight><highlight class="stringliteral">&quot;ms-&quot;</highlight><highlight class="normal">).replace(rdashAlpha,fcamelCase)},nodeName:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem,name){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem.nodeName&amp;&amp;elem.nodeName.toLowerCase()===name.toLowerCase()},each:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(obj,callback,args){var<sp/>value,i=0,length=obj.length,isArray=isArraylike(obj);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(args){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isArray)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;length&gt;i&amp;&amp;(value=callback.apply(obj[i],args),value!==!1);i++);</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>in<sp/>obj)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value=callback.apply(obj[i],args),value===!1)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isArray)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;length&gt;i&amp;&amp;(value=callback.call(obj[i],i,obj[i]),value!==!1);i++);</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>in<sp/>obj)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value=callback.call(obj[i],i,obj[i]),value===!1)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj},trim:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(text){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null==text?</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:(text+</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).replace(rtrim,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)},makeArray:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(arr,results){var<sp/>ret=results||[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null!=arr&amp;&amp;(isArraylike(Object(arr))?jQuery.merge(ret,</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">==typeof<sp/>arr?[arr]:arr):push.call(ret,arr)),ret},inArray:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem,arr,i){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null==arr?-1:indexOf.call(arr,elem,i)},merge:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(first,second){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>len=+second.length,j=0,i=first.length;len&gt;j;j++)first[i++]=second[j];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first.length=i,first},grep:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elems,callback,invert){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>callbackInverse,matches=[],i=0,length=elems.length,callbackExpect=!invert;length&gt;i;i++)callbackInverse=!callback(elems[i],i),callbackInverse!==callbackExpect&amp;&amp;matches.push(elems[i]);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matches},map:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elems,callback,arg){var<sp/>value,i=0,length=elems.length,isArray=isArraylike(elems),ret=[];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isArray)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;length&gt;i;i++)value=callback(elems[i],i,arg),null!=value&amp;&amp;ret.push(value);</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>in<sp/>elems)value=callback(elems[i],i,arg),null!=value&amp;&amp;ret.push(value);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>concat.apply([],ret)},guid:1,proxy:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn,context){var<sp/>tmp,args,proxy;</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">==typeof<sp/>context&amp;&amp;(tmp=fn[context],context=fn,fn=tmp),jQuery.isFunction(fn)?(args=slice.call(arguments,2),proxy=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fn.apply(context||</highlight><highlight class="keyword">this</highlight><highlight class="normal">,args.concat(slice.call(arguments)))},proxy.guid=fn.guid=fn.guid||jQuery.guid++,proxy):</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0},now:Date.now,support:support}),jQuery.each(</highlight><highlight class="stringliteral">&quot;Boolean<sp/>Number<sp/>String<sp/>Function<sp/>Array<sp/>Date<sp/>RegExp<sp/>Object<sp/>Error&quot;</highlight><highlight class="normal">.split(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(i,name){class2type[</highlight><highlight class="stringliteral">&quot;[object<sp/>&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">]=name.toLowerCase()});var<sp/>Sizzle=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(window){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>Sizzle(selector,context,results,seed){var<sp/>match,elem,m,nodeType,i,groups,old,nid,newContext,newSelector;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((context?context.ownerDocument||context:preferredDoc)!==document&amp;&amp;setDocument(context),context=context||document,results=results||[],nodeType=context.nodeType,</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">!=typeof<sp/>selector||!selector||1!==nodeType&amp;&amp;9!==nodeType&amp;&amp;11!==nodeType)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!seed&amp;&amp;documentIsHTML){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(11!==nodeType&amp;&amp;(match=rquickExpr.exec(selector)))</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m=match[1]){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(9===nodeType){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elem=context.getElementById(m),!elem||!elem.parentNode)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elem.id===m)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results.push(elem),results}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(context.ownerDocument&amp;&amp;(elem=context.ownerDocument.getElementById(m))&amp;&amp;contains(context,elem)&amp;&amp;elem.id===m)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results.push(elem),results}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(match[2])</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>push.apply(results,context.getElementsByTagName(selector)),results;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((m=match[3])&amp;&amp;support.getElementsByClassName)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>push.apply(results,context.getElementsByClassName(m)),results}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(support.qsa&amp;&amp;(!rbuggyQSA||!rbuggyQSA.test(selector))){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nid=old=expando,newContext=context,newSelector=1!==nodeType&amp;&amp;selector,1===nodeType&amp;&amp;</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">!==context.nodeName.toLowerCase()){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(groups=tokenize(selector),(old=context.getAttribute(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">))?nid=old.replace(rescape,</highlight><highlight class="stringliteral">&quot;\\$&amp;&quot;</highlight><highlight class="normal">):context.setAttribute(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,nid),nid=</highlight><highlight class="stringliteral">&quot;[id=&apos;&quot;</highlight><highlight class="normal">+nid+</highlight><highlight class="stringliteral">&quot;&apos;]<sp/>&quot;</highlight><highlight class="normal">,i=groups.length;i--;)groups[i]=nid+toSelector(groups[i]);newContext=rsibling.test(selector)&amp;&amp;testContext(context.parentNode)||context,newSelector=groups.join(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newSelector)</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>push.apply(results,newContext.querySelectorAll(newSelector)),results}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(qsaError){}</highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">{old||context.removeAttribute(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">)}}}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>select(selector.replace(rtrim,</highlight><highlight class="stringliteral">&quot;$1&quot;</highlight><highlight class="normal">),context,results,seed)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createCache(){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>cache(key,value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>keys.push(key+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)&gt;Expr.cacheLength&amp;&amp;</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cache[keys.shift()],cache[key+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">]=value}var<sp/>keys=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cache}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>markFunction(fn){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fn[expando]=!0,fn}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>assert(fn){var<sp/>div=document.createElement(</highlight><highlight class="stringliteral">&quot;div&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!!fn(div)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!1}</highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">{div.parentNode&amp;&amp;div.parentNode.removeChild(div),div=null}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>addHandle(attrs,handler){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>arr=attrs.split(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">),i=attrs.length;i--;)Expr.attrHandle[arr[i]]=handler}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>siblingCheck(a,b){var<sp/>cur=b&amp;&amp;a,diff=cur&amp;&amp;1===a.nodeType&amp;&amp;1===b.nodeType&amp;&amp;(~b.sourceIndex||MAX_NEGATIVE)-(~a.sourceIndex||MAX_NEGATIVE);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(diff)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>diff;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cur)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;cur=cur.nextSibling;)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cur===b)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">-1;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a?1:-1}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createInputPseudo(type){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem){var<sp/>name=elem.nodeName.toLowerCase();</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">===name&amp;&amp;elem.type===type}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createButtonPseudo(type){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem){var<sp/>name=elem.nodeName.toLowerCase();</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">===name||</highlight><highlight class="stringliteral">&quot;button&quot;</highlight><highlight class="normal">===name)&amp;&amp;elem.type===type}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createPositionalPseudo(fn){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>markFunction(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(argument){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argument=+argument,markFunction(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(seed,matches){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>j,matchIndexes=fn([],seed.length,argument),i=matchIndexes.length;i--;)seed[j=matchIndexes[i]]&amp;&amp;(seed[j]=!(matches[j]=seed[j]))})})}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>testContext(context){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context&amp;&amp;</highlight><highlight class="stringliteral">&quot;undefined&quot;</highlight><highlight class="normal">!=typeof<sp/>context.getElementsByTagName&amp;&amp;context}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>setFilters(){}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>toSelector(tokens){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0,len=tokens.length,selector=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;len&gt;i;i++)selector+=tokens[i].value;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>selector}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>addCombinator(matcher,combinator,base){var<sp/>dir=combinator.dir,checkNonElements=base&amp;&amp;</highlight><highlight class="stringliteral">&quot;parentNode&quot;</highlight><highlight class="normal">===dir,doneName=done++;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>combinator.first?</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem,context,xml){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;elem=elem[dir];)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(1===elem.nodeType||checkNonElements)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matcher(elem,context,xml)}:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem,context,xml){var<sp/>oldCache,outerCache,newCache=[dirruns,doneName];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xml){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;elem=elem[dir];)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((1===elem.nodeType||checkNonElements)&amp;&amp;matcher(elem,context,xml))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!0}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;elem=elem[dir];)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(1===elem.nodeType||checkNonElements){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(outerCache=elem[expando]||(elem[expando]={}),(oldCache=outerCache[dir])&amp;&amp;oldCache[0]===dirruns&amp;&amp;oldCache[1]===doneName)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newCache[2]=oldCache[2];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(outerCache[dir]=newCache,newCache[2]=matcher(elem,context,xml))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!0}}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>elementMatcher(matchers){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matchers.length&gt;1?</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem,context,xml){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=matchers.length;i--;)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!matchers[i](elem,context,xml))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!1;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!0}:matchers[0]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>multipleContexts(selector,contexts,results){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0,len=contexts.length;len&gt;i;i++)Sizzle(selector,contexts[i],results);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>condense(unmatched,map,filter,context,xml){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>elem,newUnmatched=[],i=0,len=unmatched.length,mapped=null!=map;len&gt;i;i++)(elem=unmatched[i])&amp;&amp;(!filter||filter(elem,context,xml))&amp;&amp;(newUnmatched.push(elem),mapped&amp;&amp;map.push(i));</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newUnmatched}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>setMatcher(preFilter,selector,matcher,postFilter,postFinder,postSelector){</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>postFilter&amp;&amp;!postFilter[expando]&amp;&amp;(postFilter=setMatcher(postFilter)),postFinder&amp;&amp;!postFinder[expando]&amp;&amp;(postFinder=setMatcher(postFinder,postSelector)),markFunction(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(seed,results,context,xml){var<sp/>temp,i,elem,preMap=[],postMap=[],preexisting=results.length,elems=seed||multipleContexts(selector||</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,context.nodeType?[context]:context,[]),matcherIn=!preFilter||!seed&amp;&amp;selector?elems:condense(elems,preMap,preFilter,context,xml),matcherOut=matcher?postFinder||(seed?preFilter:preexisting||postFilter)?[]:results:matcherIn;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matcher&amp;&amp;matcher(matcherIn,matcherOut,context,xml),postFilter)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(temp=condense(matcherOut,postMap),postFilter(temp,[],context,xml),i=temp.length;i--;)(elem=temp[i])&amp;&amp;(matcherOut[postMap[i]]=!(matcherIn[postMap[i]]=elem));</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seed){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(postFinder||preFilter){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(postFinder){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(temp=[],i=matcherOut.length;i--;)(elem=matcherOut[i])&amp;&amp;temp.push(matcherIn[i]=elem);postFinder(null,matcherOut=[],temp,xml)}</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=matcherOut.length;i--;)(elem=matcherOut[i])&amp;&amp;(temp=postFinder?indexOf(seed,elem):preMap[i])&gt;-1&amp;&amp;(seed[temp]=!(results[temp]=elem))}}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>matcherOut=condense(matcherOut===results?matcherOut.splice(preexisting,matcherOut.length):matcherOut),postFinder?postFinder(null,results,matcherOut,xml):push.apply(results,matcherOut)})}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>matcherFromTokens(tokens){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>checkContext,matcher,j,len=tokens.length,leadingRelative=Expr.relative[tokens[0].type],implicitRelative=leadingRelative||Expr.relative[</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">],i=leadingRelative?1:0,matchContext=addCombinator(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem===checkContext},implicitRelative,!0),matchAnyContext=addCombinator(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indexOf(checkContext,elem)&gt;-1},implicitRelative,!0),matchers=[</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elem,context,xml){var<sp/>ret=!leadingRelative&amp;&amp;(xml||context!==outermostContext)||((checkContext=context).nodeType?matchContext(elem,context,xml):matchAnyContext(elem,context,xml));</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>checkContext=null,ret}];len&gt;i;i++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matcher=Expr.relative[tokens[i].type])matchers=[addCombinator(elementMatcher(matchers),matcher)];</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matcher=Expr.filter[tokens[i].type].apply(null,tokens[i].matches),matcher[expando]){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=++i;len&gt;j&amp;&amp;!Expr.relative[tokens[j].type];j++);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setMatcher(i&gt;1&amp;&amp;elementMatcher(matchers),i&gt;1&amp;&amp;toSelector(tokens.slice(0,i-1).concat({value:</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">===tokens[i-2].type?</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">})).replace(rtrim,</highlight><highlight class="stringliteral">&quot;$1&quot;</highlight><highlight class="normal">),matcher,j&gt;i&amp;&amp;matcherFromTokens(tokens.slice(i,j)),len&gt;j&amp;&amp;matcherFromTokens(tokens=tokens.slice(j)),len&gt;j&amp;&amp;toSelector(tokens))}matchers.push(matcher)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elementMatcher(matchers)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>matcherFromGroupMatchers(elementMatchers,setMatchers){var<sp/>bySet=setMatchers.length&gt;0,byElement=elementMatchers.length&gt;0,superMatcher=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(seed,context,xml,results,outermost){var<sp/>elem,j,matcher,matchedCount=0,i=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,unmatched=seed&amp;&amp;[],setMatched=[],contextBackup=outermostContext,elems=seed||byElement&amp;&amp;Expr.find.TAG(</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,outermost),dirrunsUnique=dirruns+=null==contextBackup?1:Math.random()||.1,len=elems.length;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(outermost&amp;&amp;(outermostContext=context!==document&amp;&amp;context);i!==len&amp;&amp;null!=(elem=elems[i]);i++){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(byElement&amp;&amp;elem){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;matcher=elementMatchers[j++];)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matcher(elem,context,xml)){results.push(elem);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">}outermost&amp;&amp;(dirruns=dirrunsUnique)}bySet&amp;&amp;((elem=!matcher&amp;&amp;elem)&amp;&amp;matchedCount--,seed&amp;&amp;unmatched.push(elem))}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matchedCount+=i,bySet&amp;&amp;i!==matchedCount){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;matcher=setMatchers[j++];)matcher(unmatched,setMatched,context,xml);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seed){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matchedCount&gt;0)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;i--;)unmatched[i]||setMatched[i]||(setMatched[i]=pop.call(results));setMatched=condense(setMatched)}push.apply(results,setMatched),outermost&amp;&amp;!seed&amp;&amp;setMatched.length&gt;0&amp;&amp;matchedCount+setMatchers.length&gt;1&amp;&amp;Sizzle.uniqueSort(results)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outermost&amp;&amp;(dirruns=dirrunsUnique,outermostContext=contextBackup),unmatched};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bySet?markFunction(superMatcher):superMatcher}var<sp/>i,support,Expr,getText,isXML,tokenize,compile,select,outermostContext,sortInput,hasDuplicate,setDocument,document,docElem,documentIsHTML,rbuggyQSA,rbuggyMatches,matches,contains,expando=</highlight><highlight class="stringliteral">&quot;sizzle&quot;</highlight><highlight class="normal">+1*new<sp/>Date,preferredDoc=window.document,dirruns=0,done=0,classCache=createCache(),tokenCache=createCache(),compilerCache=createCache(),sortOrder=function(a,b){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a===b&amp;&amp;(hasDuplicate=!0),0},MAX_NEGATIVE=1&lt;&lt;31,hasOwn={}.hasOwnProperty,arr=[],pop=arr.pop,push_native=arr.push,push=arr.push,slice=arr.slice,indexOf=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(list,elem){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0,len=list.length;len&gt;i;i++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(list[i]===elem)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">-1},booleans=</highlight><highlight class="stringliteral">&quot;checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped&quot;</highlight><highlight class="normal">,whitespace=</highlight><highlight class="stringliteral">&quot;[\\x20\\t\\r\\n\\f]&quot;</highlight><highlight class="normal">,characterEncoding=</highlight><highlight class="stringliteral">&quot;(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+&quot;</highlight><highlight class="normal">,identifier=characterEncoding.replace(</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;w#&quot;</highlight><highlight class="normal">),attributes=</highlight><highlight class="stringliteral">&quot;\\[&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*(&quot;</highlight><highlight class="normal">+characterEncoding+</highlight><highlight class="stringliteral">&quot;)(?:&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*([*^$|!~]?=)&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*(?:&apos;((?:\\\\.|[^\\\\&apos;])*)&apos;|\&quot;((?:\\\\.|[^\\\\\&quot;])*)\&quot;|(&quot;</highlight><highlight class="normal">+identifier+</highlight><highlight class="stringliteral">&quot;))|)&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*\\]&quot;</highlight><highlight class="normal">,pseudos=</highlight><highlight class="stringliteral">&quot;:(&quot;</highlight><highlight class="normal">+characterEncoding+</highlight><highlight class="stringliteral">&quot;)(?:\\(((&apos;((?:\\\\.|[^\\\\&apos;])*)&apos;|\&quot;((?:\\\\.|[^\\\\\&quot;])*)\&quot;)|((?:\\\\.|[^\\\\()[\\]]|&quot;</highlight><highlight class="normal">+attributes+</highlight><highlight class="stringliteral">&quot;)*)|.*)\\)|)&quot;</highlight><highlight class="normal">,rwhitespace=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(whitespace+</highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">),rtrim=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;+|((?:^|[^\\\\])(?:\\\\.)*)&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;+$&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">),rcomma=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*,&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">),rcombinators=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*([&gt;+~]|&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">),rattributeQuotes=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*([^\\]&apos;\&quot;]*?)&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*\\]&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">),rpseudo=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(pseudos),ridentifier=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^&quot;</highlight><highlight class="normal">+identifier+</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">),matchExpr={ID:</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^#(&quot;</highlight><highlight class="normal">+characterEncoding+</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">),CLASS:</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^\\.(&quot;</highlight><highlight class="normal">+characterEncoding+</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">),TAG:</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^(&quot;</highlight><highlight class="normal">+characterEncoding.replace(</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;w*&quot;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">),ATTR:</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^&quot;</highlight><highlight class="normal">+attributes),PSEUDO:</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^&quot;</highlight><highlight class="normal">+pseudos),CHILD:</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*(even|odd|(([+-]|)(\\d*)n|)&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*(?:([+-]|)&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*(\\d+)|))&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*\\)|)&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">),</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">:</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^(?:&quot;</highlight><highlight class="normal">+booleans+</highlight><highlight class="stringliteral">&quot;)$&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">),needsContext:</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*[&gt;+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*((?:-\\d)?\\d*)&quot;</highlight><highlight class="normal">+whitespace+</highlight><highlight class="stringliteral">&quot;*\\)|)(?=[^-]|$)&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)},rinputs=/^(?:input|select|textarea|button)$/i,rheader=/^h\d$/i,rnative=/^[^{]+\{\s*\[native<sp/>\w/,rquickExpr=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,rsibling=/[+~]/,rescape=/</highlight><highlight class="stringliteral">&apos;|\\/g,runescape=new<sp/>RegExp(&quot;\\\\([\\da-f]{1,6}&quot;+whitespace+&quot;?|(&quot;+whitespace+&quot;)|.)&quot;,&quot;ig&quot;),funescape=function(_,escaped,escapedWhitespace){var<sp/>high=&quot;0x&quot;+escaped-65536;return<sp/>high!==high||escapedWhitespace?escaped:0&gt;high?String.fromCharCode(high+65536):String.fromCharCode(high&gt;&gt;10|55296,1023&amp;high|56320)},unloadHandler=function(){setDocument()};try{push.apply(arr=slice.call(preferredDoc.childNodes),preferredDoc.childNodes),arr[preferredDoc.childNodes.length].nodeType}catch(e){push={apply:arr.length?function(target,els){push_native.apply(target,slice.call(els))}:function(target,els){for(var<sp/>j=target.length,i=0;target[j++]=els[i++];);target.length=j-1}}}support=Sizzle.support={},isXML=Sizzle.isXML=function(elem){var<sp/>documentElement=elem&amp;&amp;(elem.ownerDocument||elem).documentElement;return<sp/>documentElement?&quot;HTML&quot;!==documentElement.nodeName:!1},setDocument=Sizzle.setDocument=function(node){var<sp/>hasCompare,parent,doc=node?node.ownerDocument||node:preferredDoc;return<sp/>doc!==document&amp;&amp;9===doc.nodeType&amp;&amp;doc.documentElement?(document=doc,docElem=doc.documentElement,parent=doc.defaultView,parent&amp;&amp;parent!==parent.top&amp;&amp;(parent.addEventListener?parent.addEventListener(&quot;unload&quot;,unloadHandler,!1):parent.attachEvent&amp;&amp;parent.attachEvent(&quot;onunload&quot;,unloadHandler)),documentIsHTML=!isXML(doc),support.attributes=assert(function(div){return<sp/>div.className=&quot;i&quot;,!div.getAttribute(&quot;className&quot;)}),support.getElementsByTagName=assert(function(div){return<sp/>div.appendChild(doc.createComment(&quot;&quot;)),!div.getElementsByTagName(&quot;*&quot;).length}),support.getElementsByClassName=rnative.test(doc.getElementsByClassName),support.getById=assert(function(div){return<sp/>docElem.appendChild(div).id=expando,!doc.getElementsByName||!doc.getElementsByName(expando).length}),support.getById?(Expr.find.ID=function(id,context){if(&quot;undefined&quot;!=typeof<sp/>context.getElementById&amp;&amp;documentIsHTML){var<sp/>m=context.getElementById(id);return<sp/>m&amp;&amp;m.parentNode?[m]:[]}},Expr.filter.ID=function(id){var<sp/>attrId=id.replace(runescape,funescape);return<sp/>function(elem){return<sp/>elem.getAttribute(&quot;id&quot;)===attrId}}):(delete<sp/>Expr.find.ID,Expr.filter.ID=function(id){var<sp/>attrId=id.replace(runescape,funescape);return<sp/>function(elem){var<sp/>node=&quot;undefined&quot;!=typeof<sp/>elem.getAttributeNode&amp;&amp;elem.getAttributeNode(&quot;id&quot;);return<sp/>node&amp;&amp;node.value===attrId}}),Expr.find.TAG=support.getElementsByTagName?function(tag,context){return&quot;undefined&quot;!=typeof<sp/>context.getElementsByTagName?context.getElementsByTagName(tag):support.qsa?context.querySelectorAll(tag):void<sp/>0}:function(tag,context){var<sp/>elem,tmp=[],i=0,results=context.getElementsByTagName(tag);if(&quot;*&quot;===tag){for(;elem=results[i++];)1===elem.nodeType&amp;&amp;tmp.push(elem);return<sp/>tmp}return<sp/>results},Expr.find.CLASS=support.getElementsByClassName&amp;&amp;function(className,context){return<sp/>documentIsHTML?context.getElementsByClassName(className):void<sp/>0},rbuggyMatches=[],rbuggyQSA=[],(support.qsa=rnative.test(doc.querySelectorAll))&amp;&amp;(assert(function(div){docElem.appendChild(div).innerHTML=&quot;&lt;a<sp/>id=&apos;</highlight><highlight class="stringliteral">&quot;+expando+&quot;</highlight><highlight class="stringliteral">&apos;&gt;&lt;/a&gt;&lt;select<sp/>id=&apos;</highlight><highlight class="stringliteral">&quot;+expando+&quot;</highlight><highlight class="normal">-\f]</highlight><highlight class="stringliteral">&apos;<sp/>msallowcapture=&apos;</highlight><highlight class="stringliteral">&apos;&gt;&lt;option<sp/>selected=&apos;</highlight><highlight class="stringliteral">&apos;&gt;&lt;/option&gt;&lt;/select&gt;&quot;,div.querySelectorAll(&quot;[msallowcapture^=&apos;</highlight><highlight class="stringliteral">&apos;]&quot;).length&amp;&amp;rbuggyQSA.push(&quot;[*^$]=&quot;+whitespace+&quot;*(?:&apos;</highlight><highlight class="stringliteral">&apos;|\&quot;\&quot;)&quot;),div.querySelectorAll(&quot;[selected]&quot;).length||rbuggyQSA.push(&quot;\\[&quot;+whitespace+&quot;*(?:value|&quot;+booleans+&quot;)&quot;),div.querySelectorAll(&quot;[id~=&quot;+expando+&quot;-]&quot;).length||rbuggyQSA.push(&quot;~=&quot;),div.querySelectorAll(&quot;:checked&quot;).length||rbuggyQSA.push(&quot;:checked&quot;),div.querySelectorAll(&quot;a#&quot;+expando+&quot;+*&quot;).length||rbuggyQSA.push(&quot;.#.+[+~]&quot;)}),assert(function(div){var<sp/>input=doc.createElement(&quot;input&quot;);input.setAttribute(&quot;type&quot;,&quot;hidden&quot;),div.appendChild(input).setAttribute(&quot;name&quot;,&quot;D&quot;),div.querySelectorAll(&quot;[name=d]&quot;).length&amp;&amp;rbuggyQSA.push(&quot;name&quot;+whitespace+&quot;*[*^$|!~]?=&quot;),div.querySelectorAll(&quot;:enabled&quot;).length||rbuggyQSA.push(&quot;:enabled&quot;,&quot;:disabled&quot;),div.querySelectorAll(&quot;*,:x&quot;),rbuggyQSA.push(&quot;,.*:&quot;)})),(support.matchesSelector=rnative.test(matches=docElem.matches||docElem.webkitMatchesSelector||docElem.mozMatchesSelector||docElem.oMatchesSelector||docElem.msMatchesSelector))&amp;&amp;assert(function(div){support.disconnectedMatch=matches.call(div,&quot;div&quot;),matches.call(div,&quot;[s!=&apos;</highlight><highlight class="stringliteral">&apos;]:x&quot;),rbuggyMatches.push(&quot;!=&quot;,pseudos)}),rbuggyQSA=rbuggyQSA.length&amp;&amp;new<sp/>RegExp(rbuggyQSA.join(&quot;|&quot;)),rbuggyMatches=rbuggyMatches.length&amp;&amp;new<sp/>RegExp(rbuggyMatches.join(&quot;|&quot;)),hasCompare=rnative.test(docElem.compareDocumentPosition),contains=hasCompare||rnative.test(docElem.contains)?function(a,b){var<sp/>adown=9===a.nodeType?a.documentElement:a,bup=b&amp;&amp;b.parentNode;return<sp/>a===bup||!(!bup||1!==bup.nodeType||!(adown.contains?adown.contains(bup):a.compareDocumentPosition&amp;&amp;16&amp;a.compareDocumentPosition(bup)))}:function(a,b){if(b)for(;b=b.parentNode;)if(b===a)return!0;return!1},sortOrder=hasCompare?function(a,b){if(a===b)return<sp/>hasDuplicate=!0,0;var<sp/>compare=!a.compareDocumentPosition-!b.compareDocumentPosition;return<sp/>compare?compare:(compare=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&amp;compare||!support.sortDetached&amp;&amp;b.compareDocumentPosition(a)===compare?a===doc||a.ownerDocument===preferredDoc&amp;&amp;contains(preferredDoc,a)?-1:b===doc||b.ownerDocument===preferredDoc&amp;&amp;contains(preferredDoc,b)?1:sortInput?indexOf(sortInput,a)-indexOf(sortInput,b):0:4&amp;compare?-1:1)}:function(a,b){if(a===b)return<sp/>hasDuplicate=!0,0;var<sp/>cur,i=0,aup=a.parentNode,bup=b.parentNode,ap=[a],bp=[b];if(!aup||!bup)return<sp/>a===doc?-1:b===doc?1:aup?-1:bup?1:sortInput?indexOf(sortInput,a)-indexOf(sortInput,b):0;if(aup===bup)return<sp/>siblingCheck(a,b);for(cur=a;cur=cur.parentNode;)ap.unshift(cur);for(cur=b;cur=cur.parentNode;)bp.unshift(cur);for(;ap[i]===bp[i];)i++;return<sp/>i?siblingCheck(ap[i],bp[i]):ap[i]===preferredDoc?-1:bp[i]===preferredDoc?1:0},doc):document},Sizzle.matches=function(expr,elements){return<sp/>Sizzle(expr,null,null,elements)},Sizzle.matchesSelector=function(elem,expr){if((elem.ownerDocument||elem)!==document&amp;&amp;setDocument(elem),expr=expr.replace(rattributeQuotes,&quot;=&apos;</highlight><highlight class="normal">$1</highlight><highlight class="stringliteral">&apos;]&quot;),!(!support.matchesSelector||!documentIsHTML||rbuggyMatches&amp;&amp;rbuggyMatches.test(expr)||rbuggyQSA&amp;&amp;rbuggyQSA.test(expr)))try{var<sp/>ret=matches.call(elem,expr);if(ret||support.disconnectedMatch||elem.document&amp;&amp;11!==elem.document.nodeType)return<sp/>ret}catch(e){}return<sp/>Sizzle(expr,document,null,[elem]).length&gt;0},Sizzle.contains=function(context,elem){return(context.ownerDocument||context)!==document&amp;&amp;setDocument(context),contains(context,elem)},Sizzle.attr=function(elem,name){(elem.ownerDocument||elem)!==document&amp;&amp;setDocument(elem);var<sp/>fn=Expr.attrHandle[name.toLowerCase()],val=fn&amp;&amp;hasOwn.call(Expr.attrHandle,name.toLowerCase())?fn(elem,name,!documentIsHTML):void<sp/>0;return<sp/>void<sp/>0!==val?val:support.attributes||!documentIsHTML?elem.getAttribute(name):(val=elem.getAttributeNode(name))&amp;&amp;val.specified?val.value:null},Sizzle.error=function(msg){throw<sp/>new<sp/>Error(&quot;Syntax<sp/>error,<sp/>unrecognized<sp/>expression:<sp/>&quot;+msg)},Sizzle.uniqueSort=function(results){var<sp/>elem,duplicates=[],j=0,i=0;if(hasDuplicate=!support.detectDuplicates,sortInput=!support.sortStable&amp;&amp;results.slice(0),results.sort(sortOrder),hasDuplicate){for(;elem=results[i++];)elem===results[i]&amp;&amp;(j=duplicates.push(i));for(;j--;)results.splice(duplicates[j],1)}return<sp/>sortInput=null,results},getText=Sizzle.getText=function(elem){var<sp/>node,ret=&quot;&quot;,i=0,nodeType=elem.nodeType;if(nodeType){if(1===nodeType||9===nodeType||11===nodeType){if(&quot;string&quot;==typeof<sp/>elem.textContent)return<sp/>elem.textContent;for(elem=elem.firstChild;elem;elem=elem.nextSibling)ret+=getText(elem)}else<sp/>if(3===nodeType||4===nodeType)return<sp/>elem.nodeValue}else<sp/>for(;node=elem[i++];)ret+=getText(node);return<sp/>ret},Expr=Sizzle.selectors={cacheLength:50,createPseudo:markFunction,match:matchExpr,attrHandle:{},find:{},relative:{&quot;&gt;&quot;:{dir:&quot;parentNode&quot;,first:!0},&quot;<sp/>&quot;:{dir:&quot;parentNode&quot;},&quot;+&quot;:{dir:&quot;previousSibling&quot;,first:!0},&quot;~&quot;:{dir:&quot;previousSibling&quot;}},preFilter:{ATTR:function(match){return<sp/>match[1]=match[1].replace(runescape,funescape),match[3]=(match[3]||match[4]||match[5]||&quot;&quot;).replace(runescape,funescape),&quot;~=&quot;===match[2]&amp;&amp;(match[3]=&quot;<sp/>&quot;+match[3]+&quot;<sp/>&quot;),match.slice(0,4)},CHILD:function(match){return<sp/>match[1]=match[1].toLowerCase(),&quot;nth&quot;===match[1].slice(0,3)?(match[3]||Sizzle.error(match[0]),match[4]=+(match[4]?match[5]+(match[6]||1):2*(&quot;even&quot;===match[3]||&quot;odd&quot;===match[3])),match[5]=+(match[7]+match[8]||&quot;odd&quot;===match[3])):match[3]&amp;&amp;Sizzle.error(match[0]),match},PSEUDO:function(match){var<sp/>excess,unquoted=!match[6]&amp;&amp;match[2];return<sp/>matchExpr.CHILD.test(match[0])?null:(match[3]?match[2]=match[4]||match[5]||&quot;&quot;:unquoted&amp;&amp;rpseudo.test(unquoted)&amp;&amp;(excess=tokenize(unquoted,!0))&amp;&amp;(excess=unquoted.indexOf(&quot;)&quot;,unquoted.length-excess)-unquoted.length)&amp;&amp;(match[0]=match[0].slice(0,excess),match[2]=unquoted.slice(0,excess)),match.slice(0,3))}},filter:{TAG:function(nodeNameSelector){var<sp/>nodeName=nodeNameSelector.replace(runescape,funescape).toLowerCase();return&quot;*&quot;===nodeNameSelector?function(){return!0}:function(elem){return<sp/>elem.nodeName&amp;&amp;elem.nodeName.toLowerCase()===nodeName}},CLASS:function(className){var<sp/>pattern=classCache[className+&quot;<sp/>&quot;];return<sp/>pattern||(pattern=new<sp/>RegExp(&quot;(^|&quot;+whitespace+&quot;)&quot;+className+&quot;(&quot;+whitespace+&quot;|$)&quot;))&amp;&amp;classCache(className,function(elem){return<sp/>pattern.test(&quot;string&quot;==typeof<sp/>elem.className&amp;&amp;elem.className||&quot;undefined&quot;!=typeof<sp/>elem.getAttribute&amp;&amp;elem.getAttribute(&quot;class&quot;)||&quot;&quot;)})},ATTR:function(name,operator,check){return<sp/>function(elem){var<sp/>result=Sizzle.attr(elem,name);return<sp/>null==result?&quot;!=&quot;===operator:operator?(result+=&quot;&quot;,&quot;=&quot;===operator?result===check:&quot;!=&quot;===operator?result!==check:&quot;^=&quot;===operator?check&amp;&amp;0===result.indexOf(check):&quot;*=&quot;===operator?check&amp;&amp;result.indexOf(check)&gt;-1:&quot;$=&quot;===operator?check&amp;&amp;result.slice(-check.length)===check:&quot;~=&quot;===operator?(&quot;<sp/>&quot;+result.replace(rwhitespace,&quot;<sp/>&quot;)+&quot;<sp/>&quot;).indexOf(check)&gt;-1:&quot;|=&quot;===operator?result===check||result.slice(0,check.length+1)===check+&quot;-&quot;:!1):!0}},CHILD:function(type,what,argument,first,last){var<sp/>simple=&quot;nth&quot;!==type.slice(0,3),forward=&quot;last&quot;!==type.slice(-4),ofType=&quot;of-type&quot;===what;return<sp/>1===first&amp;&amp;0===last?function(elem){return!!elem.parentNode}:function(elem,context,xml){var<sp/>cache,outerCache,node,diff,nodeIndex,start,dir=simple!==forward?&quot;nextSibling&quot;:&quot;previousSibling&quot;,parent=elem.parentNode,name=ofType&amp;&amp;elem.nodeName.toLowerCase(),useCache=!xml&amp;&amp;!ofType;if(parent){if(simple){for(;dir;){for(node=elem;node=node[dir];)if(ofType?node.nodeName.toLowerCase()===name:1===node.nodeType)return!1;start=dir=&quot;only&quot;===type&amp;&amp;!start&amp;&amp;&quot;nextSibling&quot;}return!0}if(start=[forward?parent.firstChild:parent.lastChild],forward&amp;&amp;useCache){for(outerCache=parent[expando]||(parent[expando]={}),cache=outerCache[type]||[],nodeIndex=cache[0]===dirruns&amp;&amp;cache[1],diff=cache[0]===dirruns&amp;&amp;cache[2],node=nodeIndex&amp;&amp;parent.childNodes[nodeIndex];node=++nodeIndex&amp;&amp;node&amp;&amp;node[dir]||(diff=nodeIndex=0)||start.pop();)if(1===node.nodeType&amp;&amp;++diff&amp;&amp;node===elem){outerCache[type]=[dirruns,nodeIndex,diff];break}}else<sp/>if(useCache&amp;&amp;(cache=(elem[expando]||(elem[expando]={}))[type])&amp;&amp;cache[0]===dirruns)diff=cache[1];else<sp/>for(;(node=++nodeIndex&amp;&amp;node&amp;&amp;node[dir]||(diff=nodeIndex=0)||start.pop())&amp;&amp;((ofType?node.nodeName.toLowerCase()!==name:1!==node.nodeType)||!++diff||(useCache&amp;&amp;((node[expando]||(node[expando]={}))[type]=[dirruns,diff]),node!==elem)););return<sp/>diff-=last,diff===first||diff%first===0&amp;&amp;diff/first&gt;=0}}},PSEUDO:function(pseudo,argument){var<sp/>args,fn=Expr.pseudos[pseudo]||Expr.setFilters[pseudo.toLowerCase()]||Sizzle.error(&quot;unsupported<sp/>pseudo:<sp/>&quot;+pseudo);return<sp/>fn[expando]?fn(argument):fn.length&gt;1?(args=[pseudo,pseudo,&quot;&quot;,argument],Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())?markFunction(function(seed,matches){for(var<sp/>idx,matched=fn(seed,argument),i=matched.length;i--;)idx=indexOf(seed,matched[i]),seed[idx]=!(matches[idx]=matched[i])}):function(elem){return<sp/>fn(elem,0,args)}):fn}},pseudos:{not:markFunction(function(selector){var<sp/>input=[],results=[],matcher=compile(selector.replace(rtrim,&quot;$1&quot;));return<sp/>matcher[expando]?markFunction(function(seed,matches,context,xml){for(var<sp/>elem,unmatched=matcher(seed,null,xml,[]),i=seed.length;i--;)(elem=unmatched[i])&amp;&amp;(seed[i]=!(matches[i]=elem))}):function(elem,context,xml){return<sp/>input[0]=elem,matcher(input,null,xml,results),input[0]=null,!results.pop()}}),has:markFunction(function(selector){return<sp/>function(elem){return<sp/>Sizzle(selector,elem).length&gt;0}}),contains:markFunction(function(text){return<sp/>text=text.replace(runescape,funescape),function(elem){return(elem.textContent||elem.innerText||getText(elem)).indexOf(text)&gt;-1}}),lang:markFunction(function(lang){return<sp/>ridentifier.test(lang||&quot;&quot;)||Sizzle.error(&quot;unsupported<sp/>lang:<sp/>&quot;+lang),lang=lang.replace(runescape,funescape).toLowerCase(),function(elem){var<sp/>elemLang;do<sp/>if(elemLang=documentIsHTML?elem.lang:elem.getAttribute(&quot;xml:lang&quot;)||elem.getAttribute(&quot;lang&quot;))return<sp/>elemLang=elemLang.toLowerCase(),elemLang===lang||0===elemLang.indexOf(lang+&quot;-&quot;);while((elem=elem.parentNode)&amp;&amp;1===elem.nodeType);return!1}}),target:function(elem){var<sp/>hash=window.location&amp;&amp;window.location.hash;return<sp/>hash&amp;&amp;hash.slice(1)===elem.id},root:function(elem){return<sp/>elem===docElem},focus:function(elem){return<sp/>elem===document.activeElement&amp;&amp;(!document.hasFocus||document.hasFocus())&amp;&amp;!!(elem.type||elem.href||~elem.tabIndex)},enabled:function(elem){return<sp/>elem.disabled===!1},disabled:function(elem){return<sp/>elem.disabled===!0},checked:function(elem){var<sp/>nodeName=elem.nodeName.toLowerCase();return&quot;input&quot;===nodeName&amp;&amp;!!elem.checked||&quot;option&quot;===nodeName&amp;&amp;!!elem.selected},selected:function(elem){return<sp/>elem.parentNode&amp;&amp;elem.parentNode.selectedIndex,elem.selected===!0},empty:function(elem){for(elem=elem.firstChild;elem;elem=elem.nextSibling)if(elem.nodeType&lt;6)return!1;return!0},parent:function(elem){return!Expr.pseudos.empty(elem)},header:function(elem){return<sp/>rheader.test(elem.nodeName)},input:function(elem){return<sp/>rinputs.test(elem.nodeName)},button:function(elem){var<sp/>name=elem.nodeName.toLowerCase();return&quot;input&quot;===name&amp;&amp;&quot;button&quot;===elem.type||&quot;button&quot;===name},text:function(elem){var<sp/>attr;return&quot;input&quot;===elem.nodeName.toLowerCase()&amp;&amp;&quot;text&quot;===elem.type&amp;&amp;(null==(attr=elem.getAttribute(&quot;type&quot;))||&quot;text&quot;===attr.toLowerCase())},first:createPositionalPseudo(function(){return[0]}),last:createPositionalPseudo(function(matchIndexes,length){return[length-1]}),eq:createPositionalPseudo(function(matchIndexes,length,argument){return[0&gt;argument?argument+length:argument]}),even:createPositionalPseudo(function(matchIndexes,length){for(var<sp/>i=0;length&gt;i;i+=2)matchIndexes.push(i);return<sp/>matchIndexes}),odd:createPositionalPseudo(function(matchIndexes,length){for(var<sp/>i=1;length&gt;i;i+=2)matchIndexes.push(i);return<sp/>matchIndexes}),lt:createPositionalPseudo(function(matchIndexes,length,argument){for(var<sp/>i=0&gt;argument?argument+length:argument;--i&gt;=0;)matchIndexes.push(i);return<sp/>matchIndexes}),gt:createPositionalPseudo(function(matchIndexes,length,argument){for(var<sp/>i=0&gt;argument?argument+length:argument;++i&lt;length;)matchIndexes.push(i);return<sp/>matchIndexes})}},Expr.pseudos.nth=Expr.pseudos.eq;for(i<sp/>in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})Expr.pseudos[i]=createInputPseudo(i);for(i<sp/>in{submit:!0,reset:!0})Expr.pseudos[i]=createButtonPseudo(i);return<sp/>setFilters.prototype=Expr.filters=Expr.pseudos,Expr.setFilters=new<sp/>setFilters,tokenize=Sizzle.tokenize=function(selector,parseOnly){var<sp/>matched,match,tokens,type,soFar,groups,preFilters,cached=tokenCache[selector+&quot;<sp/>&quot;];if(cached)return<sp/>parseOnly?0:cached.slice(0);for(soFar=selector,groups=[],preFilters=Expr.preFilter;soFar;){(!matched||(match=rcomma.exec(soFar)))&amp;&amp;(match&amp;&amp;(soFar=soFar.slice(match[0].length)||soFar),groups.push(tokens=[])),matched=!1,(match=rcombinators.exec(soFar))&amp;&amp;(matched=match.shift(),tokens.push({value:matched,type:match[0].replace(rtrim,&quot;<sp/>&quot;)}),soFar=soFar.slice(matched.length));for(type<sp/>in<sp/>Expr.filter)!(match=matchExpr[type].exec(soFar))||preFilters[type]&amp;&amp;!(match=preFilters[type](match))||(matched=match.shift(),tokens.push({value:matched,type:type,matches:match}),soFar=soFar.slice(matched.length));if(!matched)break}return<sp/>parseOnly?soFar.length:soFar?Sizzle.error(selector):tokenCache(selector,groups).slice(0)},compile=Sizzle.compile=function(selector,match){var<sp/>i,setMatchers=[],elementMatchers=[],cached=compilerCache[selector+&quot;<sp/>&quot;];if(!cached){for(match||(match=tokenize(selector)),i=match.length;i--;)cached=matcherFromTokens(match[i]),cached[expando]?setMatchers.push(cached):elementMatchers.push(cached);cached=compilerCache(selector,matcherFromGroupMatchers(elementMatchers,setMatchers)),cached.selector=selector}return<sp/>cached},select=Sizzle.select=function(selector,context,results,seed){var<sp/>i,tokens,token,type,find,compiled=&quot;function&quot;==typeof<sp/>selector&amp;&amp;selector,match=!seed&amp;&amp;tokenize(selector=compiled.selector||selector);if(results=results||[],1===match.length){if(tokens=match[0]=match[0].slice(0),tokens.length&gt;2&amp;&amp;&quot;ID&quot;===(token=tokens[0]).type&amp;&amp;support.getById&amp;&amp;9===context.nodeType&amp;&amp;documentIsHTML&amp;&amp;Expr.relative[tokens[1].type]){if(context=(Expr.find.ID(token.matches[0].replace(runescape,funescape),context)||[])[0],!context)return<sp/>results;compiled&amp;&amp;(context=context.parentNode),selector=selector.slice(tokens.shift().value.length)}for(i=matchExpr.needsContext.test(selector)?0:tokens.length;i--&amp;&amp;(token=tokens[i],!Expr.relative[type=token.type]);)if((find=Expr.find[type])&amp;&amp;(seed=find(token.matches[0].replace(runescape,funescape),rsibling.test(tokens[0].type)&amp;&amp;testContext(context.parentNode)||context))){if(tokens.splice(i,1),selector=seed.length&amp;&amp;toSelector(tokens),!selector)return<sp/>push.apply(results,seed),results;break}}return(compiled||compile(selector,match))(seed,context,!documentIsHTML,results,rsibling.test(selector)&amp;&amp;testContext(context.parentNode)||context),results},support.sortStable=expando.split(&quot;&quot;).sort(sortOrder).join(&quot;&quot;)===expando,support.detectDuplicates=!!hasDuplicate,setDocument(),support.sortDetached=assert(function(div1){return<sp/>1&amp;div1.compareDocumentPosition(document.createElement(&quot;div&quot;))}),assert(function(div){return<sp/>div.innerHTML=&quot;&lt;a<sp/>href=&apos;</highlight><highlight class="normal">#</highlight><highlight class="stringliteral">&apos;&gt;&lt;/a&gt;&quot;,&quot;#&quot;===div.firstChild.getAttribute(&quot;href&quot;)})||addHandle(&quot;type|href|height|width&quot;,function(elem,name,isXML){return<sp/>isXML?void<sp/>0:elem.getAttribute(name,&quot;type&quot;===name.toLowerCase()?1:2)}),support.attributes&amp;&amp;assert(function(div){return<sp/>div.innerHTML=&quot;&lt;input/&gt;&quot;,div.firstChild.setAttribute(&quot;value&quot;,&quot;&quot;),&quot;&quot;===div.firstChild.getAttribute(&quot;value&quot;)})||addHandle(&quot;value&quot;,function(elem,name,isXML){return<sp/>isXML||&quot;input&quot;!==elem.nodeName.toLowerCase()?void<sp/>0:elem.defaultValue}),assert(function(div){return<sp/>null==div.getAttribute(&quot;disabled&quot;)})||addHandle(booleans,function(elem,name,isXML){var<sp/>val;return<sp/>isXML?void<sp/>0:elem[name]===!0?name.toLowerCase():(val=elem.getAttributeNode(name))&amp;&amp;val.specified?val.value:null}),Sizzle}(window);jQuery.find=Sizzle,jQuery.expr=Sizzle.selectors,jQuery.expr[&quot;:&quot;]=jQuery.expr.pseudos,jQuery.unique=Sizzle.uniqueSort,jQuery.text=Sizzle.getText,jQuery.isXMLDoc=Sizzle.isXML,jQuery.contains=Sizzle.contains;var<sp/>rneedsContext=jQuery.expr.match.needsContext,rsingleTag=/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/,risSimple=/^.[^:#\[\.,]*$/;jQuery.filter=function(expr,elems,not){var<sp/>elem=elems[0];return<sp/>not&amp;&amp;(expr=&quot;:not(&quot;+expr+&quot;)&quot;),1===elems.length&amp;&amp;1===elem.nodeType?jQuery.find.matchesSelector(elem,expr)?[elem]:[]:jQuery.find.matches(expr,jQuery.grep(elems,function(elem){return<sp/>1===elem.nodeType}))},jQuery.fn.extend({find:function(selector){var<sp/>i,len=this.length,ret=[],self=this;if(&quot;string&quot;!=typeof<sp/>selector)return<sp/>this.pushStack(jQuery(selector).filter(function(){for(i=0;len&gt;i;i++)if(jQuery.contains(self[i],this))return!0}));for(i=0;len&gt;i;i++)jQuery.find(selector,self[i],ret);return<sp/>ret=this.pushStack(len&gt;1?jQuery.unique(ret):ret),ret.selector=this.selector?this.selector+&quot;<sp/>&quot;+selector:selector,ret},filter:function(selector){return<sp/>this.pushStack(winnow(this,selector||[],!1))},not:function(selector){return<sp/>this.pushStack(winnow(this,selector||[],!0))},is:function(selector){return!!winnow(this,&quot;string&quot;==typeof<sp/>selector&amp;&amp;rneedsContext.test(selector)?jQuery(selector):selector||[],!1).length}});var<sp/>rootjQuery,rquickExpr=/^(?:\s*(&lt;[\w\W]+&gt;)[^&gt;]*|#([\w-]*))$/,init=jQuery.fn.init=function(selector,context){var<sp/>match,elem;if(!selector)return<sp/>this;if(&quot;string&quot;==typeof<sp/>selector){if(match=&quot;&lt;&quot;===selector[0]&amp;&amp;&quot;&gt;&quot;===selector[selector.length-1]&amp;&amp;selector.length&gt;=3?[null,selector,null]:rquickExpr.exec(selector),!match||!match[1]&amp;&amp;context)return!context||context.jquery?(context||rootjQuery).find(selector):this.constructor(context).find(selector);if(match[1]){if(context=context<sp/>instanceof<sp/>jQuery?context[0]:context,jQuery.merge(this,jQuery.parseHTML(match[1],context&amp;&amp;context.nodeType?context.ownerDocument||context:document,!0)),rsingleTag.test(match[1])&amp;&amp;jQuery.isPlainObject(context))for(match<sp/>in<sp/>context)jQuery.isFunction(this[match])?this[match](context[match]):this.attr(match,context[match]);return<sp/>this}return<sp/>elem=document.getElementById(match[2]),elem&amp;&amp;elem.parentNode&amp;&amp;(this.length=1,this[0]=elem),this.context=document,this.selector=selector,this}return<sp/>selector.nodeType?(this.context=this[0]=selector,this.length=1,this):jQuery.isFunction(selector)?&quot;undefined&quot;!=typeof<sp/>rootjQuery.ready?rootjQuery.ready(selector):selector(jQuery):(void<sp/>0!==selector.selector&amp;&amp;(this.selector=selector.selector,this.context=selector.context),jQuery.makeArray(selector,this))};init.prototype=jQuery.fn,rootjQuery=jQuery(document);var<sp/>rparentsprev=/^(?:parents|prev(?:Until|All))/,guaranteedUnique={children:!0,contents:!0,next:!0,prev:!0};jQuery.extend({dir:function(elem,dir,until){for(var<sp/>matched=[],truncate=void<sp/>0!==until;(elem=elem[dir])&amp;&amp;9!==elem.nodeType;)if(1===elem.nodeType){if(truncate&amp;&amp;jQuery(elem).is(until))break;matched.push(elem)}return<sp/>matched},sibling:function(n,elem){for(var<sp/>matched=[];n;n=n.nextSibling)1===n.nodeType&amp;&amp;n!==elem&amp;&amp;matched.push(n);return<sp/>matched}}),jQuery.fn.extend({has:function(target){var<sp/>targets=jQuery(target,this),l=targets.length;return<sp/>this.filter(function(){for(var<sp/>i=0;l&gt;i;i++)if(jQuery.contains(this,targets[i]))return!0})},closest:function(selectors,context){for(var<sp/>cur,i=0,l=this.length,matched=[],pos=rneedsContext.test(selectors)||&quot;string&quot;!=typeof<sp/>selectors?jQuery(selectors,context||this.context):0;l&gt;i;i++)for(cur=this[i];cur&amp;&amp;cur!==context;cur=cur.parentNode)if(cur.nodeType&lt;11&amp;&amp;(pos?pos.index(cur)&gt;-1:1===cur.nodeType&amp;&amp;jQuery.find.matchesSelector(cur,selectors))){matched.push(cur);break}return<sp/>this.pushStack(matched.length&gt;1?jQuery.unique(matched):matched)},index:function(elem){return<sp/>elem?&quot;string&quot;==typeof<sp/>elem?indexOf.call(jQuery(elem),this[0]):indexOf.call(this,elem.jquery?elem[0]:elem):this[0]&amp;&amp;this[0].parentNode?this.first().prevAll().length:-1},add:function(selector,context){return<sp/>this.pushStack(jQuery.unique(jQuery.merge(this.get(),jQuery(selector,context))))},addBack:function(selector){return<sp/>this.add(null==selector?this.prevObject:this.prevObject.filter(selector))}}),jQuery.each({parent:function(elem){var<sp/>parent=elem.parentNode;return<sp/>parent&amp;&amp;11!==parent.nodeType?parent:null},parents:function(elem){return<sp/>jQuery.dir(elem,&quot;parentNode&quot;)},parentsUntil:function(elem,i,until){return<sp/>jQuery.dir(elem,&quot;parentNode&quot;,until)},next:function(elem){return<sp/>sibling(elem,&quot;nextSibling&quot;)},prev:function(elem){return<sp/>sibling(elem,&quot;previousSibling&quot;)},nextAll:function(elem){return<sp/>jQuery.dir(elem,&quot;nextSibling&quot;)},prevAll:function(elem){return<sp/>jQuery.dir(elem,&quot;previousSibling&quot;)},nextUntil:function(elem,i,until){return<sp/>jQuery.dir(elem,&quot;nextSibling&quot;,until)},prevUntil:function(elem,i,until){return<sp/>jQuery.dir(elem,&quot;previousSibling&quot;,until)},siblings:function(elem){return<sp/>jQuery.sibling((elem.parentNode||{}).firstChild,elem)},children:function(elem){return<sp/>jQuery.sibling(elem.firstChild)},contents:function(elem){return<sp/>elem.contentDocument||jQuery.merge([],elem.childNodes)}},function(name,fn){jQuery.fn[name]=function(until,selector){var<sp/>matched=jQuery.map(this,fn,until);return&quot;Until&quot;!==name.slice(-5)&amp;&amp;(selector=until),selector&amp;&amp;&quot;string&quot;==typeof<sp/>selector&amp;&amp;(matched=jQuery.filter(selector,matched)),this.length&gt;1&amp;&amp;(guaranteedUnique[name]||jQuery.unique(matched),rparentsprev.test(name)&amp;&amp;matched.reverse()),this.pushStack(matched)}});var<sp/>rnotwhite=/\S+/g,optionsCache={};jQuery.Callbacks=function(options){options=&quot;string&quot;==typeof<sp/>options?optionsCache[options]||createOptions(options):jQuery.extend({},options);var<sp/>memory,fired,firing,firingStart,firingLength,firingIndex,list=[],stack=!options.once&amp;&amp;[],fire=function(data){for(memory=options.memory&amp;&amp;data,fired=!0,firingIndex=firingStart||0,firingStart=0,firingLength=list.length,firing=!0;list&amp;&amp;firingLength&gt;firingIndex;firingIndex++)if(list[firingIndex].apply(data[0],data[1])===!1&amp;&amp;options.stopOnFalse){memory=!1;break}firing=!1,list&amp;&amp;(stack?stack.length&amp;&amp;fire(stack.shift()):memory?list=[]:self.disable())},self={add:function(){if(list){var<sp/>start=list.length;!function<sp/>add(args){jQuery.each(args,function(_,arg){var<sp/>type=jQuery.type(arg);&quot;function&quot;===type?options.unique&amp;&amp;self.has(arg)||list.push(arg):arg&amp;&amp;arg.length&amp;&amp;&quot;string&quot;!==type&amp;&amp;add(arg)})}(arguments),firing?firingLength=list.length:memory&amp;&amp;(firingStart=start,fire(memory))}return<sp/>this},remove:function(){return<sp/>list&amp;&amp;jQuery.each(arguments,function(_,arg){for(var<sp/>index;(index=jQuery.inArray(arg,list,index))&gt;-1;)list.splice(index,1),firing&amp;&amp;(firingLength&gt;=index&amp;&amp;firingLength--,firingIndex&gt;=index&amp;&amp;firingIndex--)}),this},has:function(fn){return<sp/>fn?jQuery.inArray(fn,list)&gt;-1:!(!list||!list.length)},empty:function(){return<sp/>list=[],firingLength=0,this},disable:function(){return<sp/>list=stack=memory=void<sp/>0,this},disabled:function(){return!list},lock:function(){return<sp/>stack=void<sp/>0,memory||self.disable(),this},locked:function(){return!stack},fireWith:function(context,args){return!list||fired&amp;&amp;!stack||(args=args||[],args=[context,args.slice?args.slice():args],firing?stack.push(args):fire(args)),this},fire:function(){return<sp/>self.fireWith(this,arguments),this},fired:function(){return!!fired}};return<sp/>self},jQuery.extend({Deferred:function(func){var<sp/>tuples=[[&quot;resolve&quot;,&quot;done&quot;,jQuery.Callbacks(&quot;once<sp/>memory&quot;),&quot;resolved&quot;],[&quot;reject&quot;,&quot;fail&quot;,jQuery.Callbacks(&quot;once<sp/>memory&quot;),&quot;rejected&quot;],[&quot;notify&quot;,&quot;progress&quot;,jQuery.Callbacks(&quot;memory&quot;)]],state=&quot;pending&quot;,promise={</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">state:function(){return<sp/>state},always:function(){return<sp/>deferred.done(arguments).fail(arguments),this},then:function(){var<sp/>fns=arguments;return<sp/>jQuery.Deferred(function(newDefer){jQuery.each(tuples,function(i,tuple){var<sp/>fn=jQuery.isFunction(fns[i])&amp;&amp;fns[i];deferred[tuple[1]](function(){var<sp/>returned=fn&amp;&amp;fn.apply(this,arguments);returned&amp;&amp;jQuery.isFunction(returned.promise)?returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify):newDefer[tuple[0]+&quot;With&quot;](this===promise?newDefer.promise():this,fn?[returned]:arguments)})}),fns=null}).promise()},promise:function(obj){return<sp/>null!=obj?jQuery.extend(obj,promise):promise}},deferred={};return<sp/>promise.pipe=promise.then,jQuery.each(tuples,function(i,tuple){var<sp/>list=tuple[2],stateString=tuple[3];promise[tuple[1]]=list.add,stateString&amp;&amp;list.add(function(){state=stateString},tuples[1^i][2].disable,tuples[2][2].lock),deferred[tuple[0]]=function(){return<sp/>deferred[tuple[0]+&quot;With&quot;](this===deferred?promise:this,arguments),this},deferred[tuple[0]+&quot;With&quot;]=list.fireWith}),promise.promise(deferred),func&amp;&amp;func.call(deferred,deferred),deferred},when:function(subordinate){var<sp/>progressValues,progressContexts,resolveContexts,i=0,resolveValues=slice.call(arguments),length=resolveValues.length,remaining=1!==length||subordinate&amp;&amp;jQuery.isFunction(subordinate.promise)?length:0,deferred=1===remaining?subordinate:jQuery.Deferred(),updateFunc=function(i,contexts,values){return<sp/>function(value){contexts[i]=this,values[i]=arguments.length&gt;1?slice.call(arguments):value,values===progressValues?deferred.notifyWith(contexts,values):--remaining||deferred.resolveWith(contexts,values)}};if(length&gt;1)for(progressValues=new<sp/>Array(length),progressContexts=new<sp/>Array(length),resolveContexts=new<sp/>Array(length);length&gt;i;i++)resolveValues[i]&amp;&amp;jQuery.isFunction(resolveValues[i].promise)?resolveValues[i].promise().done(updateFunc(i,resolveContexts,resolveValues)).fail(deferred.reject).progress(updateFunc(i,progressContexts,progressValues)):--remaining;return<sp/>remaining||deferred.resolveWith(resolveContexts,resolveValues),deferred.promise()}});var<sp/>readyList;jQuery.fn.ready=function(fn){return<sp/>jQuery.ready.promise().done(fn),this},jQuery.extend({isReady:!1,readyWait:1,holdReady:function(hold){hold?jQuery.readyWait++:jQuery.ready(!0)},ready:function(wait){(wait===!0?--jQuery.readyWait:jQuery.isReady)||(jQuery.isReady=!0,wait!==!0&amp;&amp;--jQuery.readyWait&gt;0||(readyList.resolveWith(document,[jQuery]),jQuery.fn.triggerHandler&amp;&amp;(jQuery(document).triggerHandler(&quot;ready&quot;),jQuery(document).off(&quot;ready&quot;))))}}),jQuery.ready.promise=function(obj){return<sp/>readyList||(readyList=jQuery.Deferred(),&quot;complete&quot;===document.readyState?setTimeout(jQuery.ready):(document.addEventListener(&quot;DOMContentLoaded&quot;,completed,!1),window.addEventListener(&quot;load&quot;,completed,!1))),readyList.promise(obj)},jQuery.ready.promise();var<sp/>access=jQuery.access=function(elems,fn,key,value,chainable,emptyGet,raw){var<sp/>i=0,len=elems.length,bulk=null==key;if(&quot;object&quot;===jQuery.type(key)){chainable=!0;for(i<sp/>in<sp/>key)jQuery.access(elems,fn,i,key[i],!0,emptyGet,raw)}else<sp/>if(void<sp/>0!==value&amp;&amp;(chainable=!0,jQuery.isFunction(value)||(raw=!0),bulk&amp;&amp;(raw?(fn.call(elems,value),fn=null):(bulk=fn,fn=function(elem,key,value){return<sp/>bulk.call(jQuery(elem),value)})),fn))for(;len&gt;i;i++)fn(elems[i],key,raw?value:value.call(elems[i],i,fn(elems[i],key)));return<sp/>chainable?elems:bulk?fn.call(elems):len?fn(elems[0],key):emptyGet};jQuery.acceptData=function(owner){return<sp/>1===owner.nodeType||9===owner.nodeType||!+owner.nodeType},Data.uid=1,Data.accepts=jQuery.acceptData,Data.prototype={key:function(owner){if(!Data.accepts(owner))return<sp/>0;var<sp/>descriptor={},unlock=owner[this.expando];if(!unlock){unlock=Data.uid++;try{descriptor[this.expando]={value:unlock},Object.defineProperties(owner,descriptor)}catch(e){descriptor[this.expando]=unlock,jQuery.extend(owner,descriptor)}}return<sp/>this.cache[unlock]||(this.cache[unlock]={}),unlock},set:function(owner,data,value){var<sp/>prop,unlock=this.key(owner),cache=this.cache[unlock];if(&quot;string&quot;==typeof<sp/>data)cache[data]=value;else<sp/>if(jQuery.isEmptyObject(cache))jQuery.extend(this.cache[unlock],data);else<sp/>for(prop<sp/>in<sp/>data)cache[prop]=data[prop];return<sp/>cache},get:function(owner,key){var<sp/>cache=this.cache[this.key(owner)];return<sp/>void<sp/>0===key?cache:cache[key]},access:function(owner,key,value){var<sp/>stored;return<sp/>void<sp/>0===key||key&amp;&amp;&quot;string&quot;==typeof<sp/>key&amp;&amp;void<sp/>0===value?(stored=this.get(owner,key),void<sp/>0!==stored?stored:this.get(owner,jQuery.camelCase(key))):(this.set(owner,key,value),void<sp/>0!==value?value:key)},remove:function(owner,key){var<sp/>i,name,camel,unlock=this.key(owner),cache=this.cache[unlock];if(void<sp/>0===key)this.cache[unlock]={};else{jQuery.isArray(key)?name=key.concat(key.map(jQuery.camelCase)):(camel=jQuery.camelCase(key),key<sp/>in<sp/>cache?name=[key,camel]:(name=camel,name=name<sp/>in<sp/>cache?[name]:name.match(rnotwhite)||[])),i=name.length;for(;i--;)delete<sp/>cache[name[i]]}},hasData:function(owner){return!jQuery.isEmptyObject(this.cache[owner[this.expando]]||{})},discard:function(owner){owner[this.expando]&amp;&amp;delete<sp/>this.cache[owner[this.expando]]}};var<sp/>data_priv=new<sp/>Data,data_user=new<sp/>Data,rbrace=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,rmultiDash=/([A-Z])/g;jQuery.extend({hasData:function(elem){return<sp/>data_user.hasData(elem)||data_priv.hasData(elem)},data:function(elem,name,data){return<sp/>data_user.access(elem,name,data)},removeData:function(elem,name){data_user.remove(elem,name)},_data:function(elem,name,data){return<sp/>data_priv.access(elem,name,data)},_removeData:function(elem,name){data_priv.remove(elem,name)}}),jQuery.fn.extend({data:function(key,value){var<sp/>i,name,data,elem=this[0],attrs=elem&amp;&amp;elem.attributes;if(void<sp/>0===key){if(this.length&amp;&amp;(data=data_user.get(elem),1===elem.nodeType&amp;&amp;!data_priv.get(elem,&quot;hasDataAttrs&quot;))){for(i=attrs.length;i--;)attrs[i]&amp;&amp;(name=attrs[i].name,0===name.indexOf(&quot;data-&quot;)&amp;&amp;(name=jQuery.camelCase(name.slice(5)),dataAttr(elem,name,data[name])));data_priv.set(elem,&quot;hasDataAttrs&quot;,!0)}return<sp/>data}return&quot;object&quot;==typeof<sp/>key?this.each(function(){data_user.set(this,key)}):access(this,function(value){var<sp/>data,camelKey=jQuery.camelCase(key);if(elem&amp;&amp;void<sp/>0===value){if(data=data_user.get(elem,key),void<sp/>0!==data)return<sp/>data;if(data=data_user.get(elem,camelKey),void<sp/>0!==data)return<sp/>data;if(data=dataAttr(elem,camelKey,void<sp/>0),void<sp/>0!==data)return<sp/>data}else<sp/>this.each(function(){var<sp/>data=data_user.get(this,camelKey);data_user.set(this,camelKey,value),-1!==key.indexOf(&quot;-&quot;)&amp;&amp;void<sp/>0!==data&amp;&amp;data_user.set(this,key,value)})},null,value,arguments.length&gt;1,null,!0)},removeData:function(key){return<sp/>this.each(function(){data_user.remove(this,key)})}}),jQuery.extend({queue:function(elem,type,data){var<sp/>queue;return<sp/>elem?(type=(type||&quot;fx&quot;)+&quot;queue&quot;,queue=data_priv.get(elem,type),data&amp;&amp;(!queue||jQuery.isArray(data)?queue=data_priv.access(elem,type,jQuery.makeArray(data)):queue.push(data)),queue||[]):void<sp/>0},dequeue:function(elem,type){type=type||&quot;fx&quot;;var<sp/>queue=jQuery.queue(elem,type),startLength=queue.length,fn=queue.shift(),hooks=jQuery._queueHooks(elem,type),next=function(){jQuery.dequeue(elem,type)};&quot;inprogress&quot;===fn&amp;&amp;(fn=queue.shift(),startLength--),fn&amp;&amp;(&quot;fx&quot;===type&amp;&amp;queue.unshift(&quot;inprogress&quot;),delete<sp/>hooks.stop,fn.call(elem,next,hooks)),!startLength&amp;&amp;hooks&amp;&amp;hooks.empty.fire()},_queueHooks:function(elem,type){var<sp/>key=type+&quot;queueHooks&quot;;return<sp/>data_priv.get(elem,key)||data_priv.access(elem,key,{empty:jQuery.Callbacks(&quot;once<sp/>memory&quot;).add(function(){data_priv.remove(elem,[type+&quot;queue&quot;,key])})})}}),jQuery.fn.extend({queue:function(type,data){var<sp/>setter=2;return&quot;string&quot;!=typeof<sp/>type&amp;&amp;(data=type,type=&quot;fx&quot;,setter--),arguments.length&lt;setter?jQuery.queue(this[0],type):void<sp/>0===data?this:this.each(function(){var<sp/>queue=jQuery.queue(this,type,data);jQuery._queueHooks(this,type),&quot;fx&quot;===type&amp;&amp;&quot;inprogress&quot;!==queue[0]&amp;&amp;jQuery.dequeue(this,type)})},dequeue:function(type){return<sp/>this.each(function(){jQuery.dequeue(this,type)})},clearQueue:function(type){return<sp/>this.queue(type||&quot;fx&quot;,[])},promise:function(type,obj){var<sp/>tmp,count=1,defer=jQuery.Deferred(),elements=this,i=this.length,resolve=function(){--count||defer.resolveWith(elements,[elements])};for(&quot;string&quot;!=typeof<sp/>type&amp;&amp;(obj=type,type=void<sp/>0),type=type||&quot;fx&quot;;i--;)tmp=data_priv.get(elements[i],type+&quot;queueHooks&quot;),tmp&amp;&amp;tmp.empty&amp;&amp;(count++,tmp.empty.add(resolve));return<sp/>resolve(),defer.promise(obj)}});var<sp/>pnum=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,cssExpand=[&quot;Top&quot;,&quot;Right&quot;,&quot;Bottom&quot;,&quot;Left&quot;],isHidden=function(elem,el){return<sp/>elem=el||elem,&quot;none&quot;===jQuery.css(elem,&quot;display&quot;)||!jQuery.contains(elem.ownerDocument,elem)},rcheckableType=/^(?:checkbox|radio)$/i;!function(){var<sp/>fragment=document.createDocumentFragment(),div=fragment.appendChild(document.createElement(&quot;div&quot;)),input=document.createElement(&quot;input&quot;);input.setAttribute(&quot;type&quot;,&quot;radio&quot;),input.setAttribute(&quot;checked&quot;,&quot;checked&quot;),input.setAttribute(&quot;name&quot;,&quot;t&quot;),div.appendChild(input),support.checkClone=div.cloneNode(!0).cloneNode(!0).lastChild.checked,div.innerHTML=&quot;&lt;textarea&gt;x&lt;/textarea&gt;&quot;,support.noCloneChecked=!!div.cloneNode(!0).lastChild.defaultValue}();var<sp/>strundefined=&quot;undefined&quot;;support.focusinBubbles=&quot;onfocusin&quot;in<sp/>window;var<sp/>rkeyEvent=/^key/,rmouseEvent=/^(?:mouse|pointer|contextmenu)|click/,rfocusMorph=/^(?:focusinfocus|focusoutblur)$/,rtypenamespace=/^([^.]*)(?:\.(.+)|)$/;jQuery.event={global:{},add:function(elem,types,handler,data,selector){var<sp/>handleObjIn,eventHandle,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=data_priv.get(elem);if(elemData)for(handler.handler&amp;&amp;(handleObjIn=handler,handler=handleObjIn.handler,selector=handleObjIn.selector),handler.guid||(handler.guid=jQuery.guid++),(events=elemData.events)||(events=elemData.events={}),(eventHandle=elemData.handle)||(eventHandle=elemData.handle=function(e){return<sp/>typeof<sp/>jQuery!==strundefined&amp;&amp;jQuery.event.triggered!==e.type?jQuery.event.dispatch.apply(elem,arguments):void<sp/>0}),types=(types||&quot;&quot;).match(rnotwhite)||[&quot;&quot;],t=types.length;t--;)tmp=rtypenamespace.exec(types[t])||[],type=origType=tmp[1],namespaces=(tmp[2]||&quot;&quot;).split(&quot;.&quot;).sort(),type&amp;&amp;(special=jQuery.event.special[type]||{},type=(selector?special.delegateType:special.bindType)||type,special=jQuery.event.special[type]||{},handleObj=jQuery.extend({type:type,origType:origType,data:data,handler:handler,guid:handler.guid,selector:selector,needsContext:selector&amp;&amp;jQuery.expr.match.needsContext.test(selector),namespace:namespaces.join(&quot;.&quot;)},handleObjIn),(handlers=events[type])||(handlers=events[type]=[],handlers.delegateCount=0,special.setup&amp;&amp;special.setup.call(elem,data,namespaces,eventHandle)!==!1||elem.addEventListener&amp;&amp;elem.addEventListener(type,eventHandle,!1)),special.add&amp;&amp;(special.add.call(elem,handleObj),handleObj.handler.guid||(handleObj.handler.guid=handler.guid)),selector?handlers.splice(handlers.delegateCount++,0,handleObj):handlers.push(handleObj),jQuery.event.global[type]=!0)},remove:function(elem,types,handler,selector,mappedTypes){var<sp/>j,origCount,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=data_priv.hasData(elem)&amp;&amp;data_priv.get(elem);if(elemData&amp;&amp;(events=elemData.events)){for(types=(types||&quot;&quot;).match(rnotwhite)||[&quot;&quot;],t=types.length;t--;)if(tmp=rtypenamespace.exec(types[t])||[],type=origType=tmp[1],namespaces=(tmp[2]||&quot;&quot;).split(&quot;.&quot;).sort(),type){for(special=jQuery.event.special[type]||{},type=(selector?special.delegateType:special.bindType)||type,handlers=events[type]||[],tmp=tmp[2]&amp;&amp;new<sp/>RegExp(&quot;(^|\\.)&quot;+namespaces.join(&quot;\\.(?:.*\\.|)&quot;)+&quot;(\\.|$)&quot;),origCount=j=handlers.length;j--;)handleObj=handlers[j],!mappedTypes&amp;&amp;origType!==handleObj.origType||handler&amp;&amp;handler.guid!==handleObj.guid||tmp&amp;&amp;!tmp.test(handleObj.namespace)||selector&amp;&amp;selector!==handleObj.selector&amp;&amp;(&quot;**&quot;!==selector||!handleObj.selector)||(handlers.splice(j,1),handleObj.selector&amp;&amp;handlers.delegateCount--,special.remove&amp;&amp;special.remove.call(elem,handleObj));origCount&amp;&amp;!handlers.length&amp;&amp;(special.teardown&amp;&amp;special.teardown.call(elem,namespaces,elemData.handle)!==!1||jQuery.removeEvent(elem,type,elemData.handle),delete<sp/>events[type])}else<sp/>for(type<sp/>in<sp/>events)jQuery.event.remove(elem,type+types[t],handler,selector,!0);jQuery.isEmptyObject(events)&amp;&amp;(delete<sp/>elemData.handle,data_priv.remove(elem,&quot;events&quot;))}},trigger:function(event,data,elem,onlyHandlers){var<sp/>i,cur,tmp,bubbleType,ontype,handle,special,eventPath=[elem||document],type=hasOwn.call(event,&quot;type&quot;)?event.type:event,namespaces=hasOwn.call(event,&quot;namespace&quot;)?event.namespace.split(&quot;.&quot;):[];if(cur=tmp=elem=elem||document,3!==elem.nodeType&amp;&amp;8!==elem.nodeType&amp;&amp;!rfocusMorph.test(type+jQuery.event.triggered)&amp;&amp;(type.indexOf(&quot;.&quot;)&gt;=0&amp;&amp;(namespaces=type.split(&quot;.&quot;),type=namespaces.shift(),namespaces.sort()),ontype=type.indexOf(&quot;:&quot;)&lt;0&amp;&amp;&quot;on&quot;+type,event=event[jQuery.expando]?event:new<sp/>jQuery.Event(type,&quot;object&quot;==typeof<sp/>event&amp;&amp;event),event.isTrigger=onlyHandlers?2:3,event.namespace=namespaces.join(&quot;.&quot;),event.namespace_re=event.namespace?new<sp/>RegExp(&quot;(^|\\.)&quot;+namespaces.join(&quot;\\.(?:.*\\.|)&quot;)+&quot;(\\.|$)&quot;):null,event.result=void<sp/>0,event.target||(event.target=elem),data=null==data?[event]:jQuery.makeArray(data,[event]),special=jQuery.event.special[type]||{},onlyHandlers||!special.trigger||special.trigger.apply(elem,data)!==!1)){if(!onlyHandlers&amp;&amp;!special.noBubble&amp;&amp;!jQuery.isWindow(elem)){for(bubbleType=special.delegateType||type,rfocusMorph.test(bubbleType+type)||(cur=cur.parentNode);cur;cur=cur.parentNode)eventPath.push(cur),tmp=cur;tmp===(elem.ownerDocument||document)&amp;&amp;eventPath.push(tmp.defaultView||tmp.parentWindow||window)}for(i=0;(cur=eventPath[i++])&amp;&amp;!event.isPropagationStopped();)event.type=i&gt;1?bubbleType:special.bindType||type,handle=(data_priv.get(cur,&quot;events&quot;)||{})[event.type]&amp;&amp;data_priv.get(cur,&quot;handle&quot;),handle&amp;&amp;handle.apply(cur,data),handle=ontype&amp;&amp;cur[ontype],handle&amp;&amp;handle.apply&amp;&amp;jQuery.acceptData(cur)&amp;&amp;(event.result=handle.apply(cur,data),event.result===!1&amp;&amp;event.preventDefault());return<sp/>event.type=type,onlyHandlers||event.isDefaultPrevented()||special._default&amp;&amp;special._default.apply(eventPath.pop(),data)!==!1||!jQuery.acceptData(elem)||ontype&amp;&amp;jQuery.isFunction(elem[type])&amp;&amp;!jQuery.isWindow(elem)&amp;&amp;(tmp=elem[ontype],tmp&amp;&amp;(elem[ontype]=null),jQuery.event.triggered=type,elem[type](),jQuery.event.triggered=void<sp/>0,tmp&amp;&amp;(elem[ontype]=tmp)),event.result}},dispatch:function(event){event=jQuery.event.fix(event);var<sp/>i,j,ret,matched,handleObj,handlerQueue=[],args=slice.call(arguments),handlers=(data_priv.get(this,&quot;events&quot;)||{})[event.type]||[],special=jQuery.event.special[event.type]||{};if(args[0]=event,event.delegateTarget=this,!special.preDispatch||special.preDispatch.call(this,event)!==!1){for(handlerQueue=jQuery.event.handlers.call(this,event,handlers),i=0;(matched=handlerQueue[i++])&amp;&amp;!event.isPropagationStopped();)for(event.currentTarget=matched.elem,j=0;(handleObj=matched.handlers[j++])&amp;&amp;!event.isImmediatePropagationStopped();)(!event.namespace_re||event.namespace_re.test(handleObj.namespace))&amp;&amp;(event.handleObj=handleObj,event.data=handleObj.data,ret=((jQuery.event.special[handleObj.origType]||{}).handle||handleObj.handler).apply(matched.elem,args),void<sp/>0!==ret&amp;&amp;(event.result=ret)===!1&amp;&amp;(event.preventDefault(),event.stopPropagation()));return<sp/>special.postDispatch&amp;&amp;special.postDispatch.call(this,event),event.result}},handlers:function(event,handlers){var<sp/>i,matches,sel,handleObj,handlerQueue=[],delegateCount=handlers.delegateCount,cur=event.target;if(delegateCount&amp;&amp;cur.nodeType&amp;&amp;(!event.button||&quot;click&quot;!==event.type))for(;cur!==this;cur=cur.parentNode||this)if(cur.disabled!==!0||&quot;click&quot;!==event.type){for(matches=[],i=0;delegateCount&gt;i;i++)handleObj=handlers[i],sel=handleObj.selector+&quot;<sp/>&quot;,void<sp/>0===matches[sel]&amp;&amp;(matches[sel]=handleObj.needsContext?jQuery(sel,this).index(cur)&gt;=0:jQuery.find(sel,this,null,[cur]).length),matches[sel]&amp;&amp;matches.push(handleObj);matches.length&amp;&amp;handlerQueue.push({elem:cur,handlers:matches})}return<sp/>delegateCount&lt;handlers.length&amp;&amp;handlerQueue.push({elem:this,handlers:handlers.slice(delegateCount)}),handlerQueue},props:&quot;altKey<sp/>bubbles<sp/>cancelable<sp/>ctrlKey<sp/>currentTarget<sp/>eventPhase<sp/>metaKey<sp/>relatedTarget<sp/>shiftKey<sp/>target<sp/>timeStamp<sp/>view<sp/>which&quot;.split(&quot;<sp/>&quot;),fixHooks:{},keyHooks:{props:&quot;char<sp/>charCode<sp/>key<sp/>keyCode&quot;.split(&quot;<sp/>&quot;),filter:function(event,original){return<sp/>null==event.which&amp;&amp;(event.which=null!=original.charCode?original.charCode:original.keyCode),event}},mouseHooks:{props:&quot;button<sp/>buttons<sp/>clientX<sp/>clientY<sp/>offsetX<sp/>offsetY<sp/>pageX<sp/>pageY<sp/>screenX<sp/>screenY<sp/>toElement&quot;.split(&quot;<sp/>&quot;),filter:function(event,original){var<sp/>eventDoc,doc,body,button=original.button;return<sp/>null==event.pageX&amp;&amp;null!=original.clientX&amp;&amp;(eventDoc=event.target.ownerDocument||document,doc=eventDoc.documentElement,body=eventDoc.body,event.pageX=original.clientX+(doc&amp;&amp;doc.scrollLeft||body&amp;&amp;body.scrollLeft||0)-(doc&amp;&amp;doc.clientLeft||body&amp;&amp;body.clientLeft||0),event.pageY=original.clientY+(doc&amp;&amp;doc.scrollTop||body&amp;&amp;body.scrollTop||0)-(doc&amp;&amp;doc.clientTop||body&amp;&amp;body.clientTop||0)),event.which||void<sp/>0===button||(event.which=1&amp;button?1:2&amp;button?3:4&amp;button?2:0),event}},fix:function(event){if(event[jQuery.expando])return<sp/>event;var<sp/>i,prop,copy,type=event.type,originalEvent=event,fixHook=this.fixHooks[type];for(fixHook||(this.fixHooks[type]=fixHook=rmouseEvent.test(type)?this.mouseHooks:rkeyEvent.test(type)?this.keyHooks:{}),copy=fixHook.props?this.props.concat(fixHook.props):this.props,event=new<sp/>jQuery.Event(originalEvent),i=copy.length;i--;)prop=copy[i],event[prop]=originalEvent[prop];return<sp/>event.target||(event.target=document),3===event.target.nodeType&amp;&amp;(event.target=event.target.parentNode),fixHook.filter?fixHook.filter(event,originalEvent):event},special:{load:{noBubble:!0},focus:{trigger:function(){return<sp/>this!==safeActiveElement()&amp;&amp;this.focus?(this.focus(),!1):void<sp/>0},delegateType:&quot;focusin&quot;},blur:{trigger:function(){return<sp/>this===safeActiveElement()&amp;&amp;this.blur?(this.blur(),!1):void<sp/>0},delegateType:&quot;focusout&quot;},click:{trigger:function(){return&quot;checkbox&quot;===this.type&amp;&amp;this.click&amp;&amp;jQuery.nodeName(this,&quot;input&quot;)?(this.click(),!1):void<sp/>0},_default:function(event){return<sp/>jQuery.nodeName(event.target,&quot;a&quot;)}},beforeunload:{postDispatch:function(event){void<sp/>0!==event.result&amp;&amp;event.originalEvent&amp;&amp;(event.originalEvent.returnValue=event.result)}}},simulate:function(type,elem,event,bubble){var<sp/>e=jQuery.extend(new<sp/>jQuery.Event,event,{type:type,isSimulated:!0,originalEvent:{}});bubble?jQuery.event.trigger(e,null,elem):jQuery.event.dispatch.call(elem,e),e.isDefaultPrevented()&amp;&amp;event.preventDefault()}},jQuery.removeEvent=function(elem,type,handle){elem.removeEventListener&amp;&amp;elem.removeEventListener(type,handle,!1)},jQuery.Event=function(src,props){return<sp/>this<sp/>instanceof<sp/>jQuery.Event?(src&amp;&amp;src.type?(this.originalEvent=src,this.type=src.type,this.isDefaultPrevented=src.defaultPrevented||void<sp/>0===src.defaultPrevented&amp;&amp;src.returnValue===!1?returnTrue:returnFalse):this.type=src,props&amp;&amp;jQuery.extend(this,props),this.timeStamp=src&amp;&amp;src.timeStamp||jQuery.now(),void(this[jQuery.expando]=!0)):new<sp/>jQuery.Event(src,props)},jQuery.Event.prototype={isDefaultPrevented:returnFalse,isPropagationStopped:returnFalse,isImmediatePropagationStopped:returnFalse,preventDefault:function(){var<sp/>e=this.originalEvent;this.isDefaultPrevented=returnTrue,e&amp;&amp;e.preventDefault&amp;&amp;e.preventDefault()},stopPropagation:function(){var<sp/>e=this.originalEvent;this.isPropagationStopped=returnTrue,e&amp;&amp;e.stopPropagation&amp;&amp;e.stopPropagation()},stopImmediatePropagation:function(){var<sp/>e=this.originalEvent;this.isImmediatePropagationStopped=returnTrue,e&amp;&amp;e.stopImmediatePropagation&amp;&amp;e.stopImmediatePropagation(),this.stopPropagation()}},jQuery.each({mouseenter:&quot;mouseover&quot;,mouseleave:&quot;mouseout&quot;,pointerenter:&quot;pointerover&quot;,pointerleave:&quot;pointerout&quot;},function(orig,fix){jQuery.event.special[orig]={delegateType:fix,bindType:fix,handle:function(event){var<sp/>ret,target=this,related=event.relatedTarget,handleObj=event.handleObj;return(!related||related!==target&amp;&amp;!jQuery.contains(target,related))&amp;&amp;(event.type=handleObj.origType,ret=handleObj.handler.apply(this,arguments),event.type=fix),ret}}}),support.focusinBubbles||jQuery.each({focus:&quot;focusin&quot;,blur:&quot;focusout&quot;},function(orig,fix){var<sp/>handler=function(event){jQuery.event.simulate(fix,event.target,jQuery.event.fix(event),!0)};jQuery.event.special[fix]={setup:function(){var<sp/>doc=this.ownerDocument||this,attaches=data_priv.access(doc,fix);attaches||doc.addEventListener(orig,handler,!0),data_priv.access(doc,fix,(attaches||0)+1)},teardown:function(){var<sp/>doc=this.ownerDocument||this,attaches=data_priv.access(doc,fix)-1;attaches?data_priv.access(doc,fix,attaches):(doc.removeEventListener(orig,handler,!0),data_priv.remove(doc,fix))}}}),jQuery.fn.extend({on:function(types,selector,data,fn,one){var<sp/>origFn,type;if(&quot;object&quot;==typeof<sp/>types){&quot;string&quot;!=typeof<sp/>selector&amp;&amp;(data=data||selector,selector=void<sp/>0);for(type<sp/>in<sp/>types)this.on(type,selector,data,types[type],one);return<sp/>this}if(null==data&amp;&amp;null==fn?(fn=selector,data=selector=void<sp/>0):null==fn&amp;&amp;(&quot;string&quot;==typeof<sp/>selector?(fn=data,data=void<sp/>0):(fn=data,data=selector,selector=void<sp/>0)),fn===!1)fn=returnFalse;else<sp/>if(!fn)return<sp/>this;return<sp/>1===one&amp;&amp;(origFn=fn,fn=function(event){return<sp/>jQuery().off(event),origFn.apply(this,arguments)},fn.guid=origFn.guid||(origFn.guid=jQuery.guid++)),this.each(function(){jQuery.event.add(this,types,fn,data,selector)})},one:function(types,selector,data,fn){return<sp/>this.on(types,selector,data,fn,1)},off:function(types,selector,fn){var<sp/>handleObj,type;if(types&amp;&amp;types.preventDefault&amp;&amp;types.handleObj)return<sp/>handleObj=types.handleObj,jQuery(types.delegateTarget).off(handleObj.namespace?handleObj.origType+&quot;.&quot;+handleObj.namespace:handleObj.origType,handleObj.selector,handleObj.handler),this;if(&quot;object&quot;==typeof<sp/>types){for(type<sp/>in<sp/>types)this.off(type,selector,types[type]);return<sp/>this}return(selector===!1||&quot;function&quot;==typeof<sp/>selector)&amp;&amp;(fn=selector,selector=void<sp/>0),fn===!1&amp;&amp;(fn=returnFalse),this.each(function(){jQuery.event.remove(this,types,fn,selector)})},trigger:function(type,data){return<sp/>this.each(function(){jQuery.event.trigger(type,data,this)})},triggerHandler:function(type,data){var<sp/>elem=this[0];return<sp/>elem?jQuery.event.trigger(type,data,elem,!0):void<sp/>0}});var<sp/>rxhtmlTag=/&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^&gt;]*)\/&gt;/gi,rtagName=/&lt;([\w:]+)/,rhtml=/&lt;|&amp;#?\w+;/,rnoInnerhtml=/&lt;(?:script|style|link)/i,rchecked=/checked\s*(?:[^=]|=\s*.checked.)/i,rscriptType=/^$|\/(?:java|ecma)script/i,rscriptTypeMasked=/^true\/(.*)/,rcleanScript=/^\s*&lt;!(?:\[CDATA\[|--)|(?:\]\]|--)&gt;\s*$/g,wrapMap={option:[1,&quot;&lt;select<sp/>multiple=&apos;</highlight><highlight class="normal">multiple</highlight><highlight class="stringliteral">&apos;&gt;&quot;,&quot;&lt;/select&gt;&quot;],thead:[1,&quot;&lt;table&gt;&quot;,&quot;&lt;/table&gt;&quot;],col:[2,&quot;&lt;table&gt;&lt;colgroup&gt;&quot;,&quot;&lt;/colgroup&gt;&lt;/table&gt;&quot;],tr:[2,&quot;&lt;table&gt;&lt;tbody&gt;&quot;,&quot;&lt;/tbody&gt;&lt;/table&gt;&quot;],td:[3,&quot;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&quot;,&quot;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&quot;],_default:[0,&quot;&quot;,&quot;&quot;]};wrapMap.optgroup=wrapMap.option,wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead,wrapMap.th=wrapMap.td,jQuery.extend({clone:function(elem,dataAndEvents,deepDataAndEvents){var<sp/>i,l,srcElements,destElements,clone=elem.cloneNode(!0),inPage=jQuery.contains(elem.ownerDocument,elem);if(!(support.noCloneChecked||1!==elem.nodeType&amp;&amp;11!==elem.nodeType||jQuery.isXMLDoc(elem)))for(destElements=getAll(clone),srcElements=getAll(elem),i=0,l=srcElements.length;l&gt;i;i++)fixInput(srcElements[i],destElements[i]);if(dataAndEvents)if(deepDataAndEvents)for(srcElements=srcElements||getAll(elem),destElements=destElements||getAll(clone),i=0,l=srcElements.length;l&gt;i;i++)cloneCopyEvent(srcElements[i],destElements[i]);else<sp/>cloneCopyEvent(elem,clone);return<sp/>destElements=getAll(clone,&quot;script&quot;),destElements.length&gt;0&amp;&amp;setGlobalEval(destElements,!inPage&amp;&amp;getAll(elem,&quot;script&quot;)),clone},buildFragment:function(elems,context,scripts,selection){for(var<sp/>elem,tmp,tag,wrap,contains,j,fragment=context.createDocumentFragment(),nodes=[],i=0,l=elems.length;l&gt;i;i++)if(elem=elems[i],elem||0===elem)if(&quot;object&quot;===jQuery.type(elem))jQuery.merge(nodes,elem.nodeType?[elem]:elem);else<sp/>if(rhtml.test(elem)){for(tmp=tmp||fragment.appendChild(context.createElement(&quot;div&quot;)),tag=(rtagName.exec(elem)||[&quot;&quot;,&quot;&quot;])[1].toLowerCase(),wrap=wrapMap[tag]||wrapMap._default,tmp.innerHTML=wrap[1]+elem.replace(rxhtmlTag,&quot;&lt;$1&gt;&lt;/$2&gt;&quot;)+wrap[2],j=wrap[0];j--;)tmp=tmp.lastChild;jQuery.merge(nodes,tmp.childNodes),tmp=fragment.firstChild,tmp.textContent=&quot;&quot;}else<sp/>nodes.push(context.createTextNode(elem));for(fragment.textContent=&quot;&quot;,i=0;elem=nodes[i++];)if((!selection||-1===jQuery.inArray(elem,selection))&amp;&amp;(contains=jQuery.contains(elem.ownerDocument,elem),tmp=getAll(fragment.appendChild(elem),&quot;script&quot;),contains&amp;&amp;setGlobalEval(tmp),scripts))for(j=0;elem=tmp[j++];)rscriptType.test(elem.type||&quot;&quot;)&amp;&amp;scripts.push(elem);return<sp/>fragment},cleanData:function(elems){for(var<sp/>data,elem,type,key,special=jQuery.event.special,i=0;void<sp/>0!==(elem=elems[i]);i++){if(jQuery.acceptData(elem)&amp;&amp;(key=elem[data_priv.expando],key&amp;&amp;(data=data_priv.cache[key]))){if(data.events)for(type<sp/>in<sp/>data.events)special[type]?jQuery.event.remove(elem,type):jQuery.removeEvent(elem,type,data.handle);data_priv.cache[key]&amp;&amp;delete<sp/>data_priv.cache[key]}delete<sp/>data_user.cache[elem[data_user.expando]]}}}),jQuery.fn.extend({text:function(value){return<sp/>access(this,function(value){return<sp/>void<sp/>0===value?jQuery.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&amp;&amp;(this.textContent=value)})},null,value,arguments.length)},append:function(){return<sp/>this.domManip(arguments,function(elem){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var<sp/>target=manipulationTarget(this,elem);target.appendChild(elem)}})},prepend:function(){return<sp/>this.domManip(arguments,function(elem){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var<sp/>target=manipulationTarget(this,elem);target.insertBefore(elem,target.firstChild)}})},before:function(){return<sp/>this.domManip(arguments,function(elem){this.parentNode&amp;&amp;this.parentNode.insertBefore(elem,this)})},after:function(){return<sp/>this.domManip(arguments,function(elem){this.parentNode&amp;&amp;this.parentNode.insertBefore(elem,this.nextSibling)})},remove:function(selector,keepData){for(var<sp/>elem,elems=selector?jQuery.filter(selector,this):this,i=0;null!=(elem=elems[i]);i++)keepData||1!==elem.nodeType||jQuery.cleanData(getAll(elem)),elem.parentNode&amp;&amp;(keepData&amp;&amp;jQuery.contains(elem.ownerDocument,elem)&amp;&amp;setGlobalEval(getAll(elem,&quot;script&quot;)),elem.parentNode.removeChild(elem));return<sp/>this},empty:function(){for(var<sp/>elem,i=0;null!=(elem=this[i]);i++)1===elem.nodeType&amp;&amp;(jQuery.cleanData(getAll(elem,!1)),elem.textContent=&quot;&quot;);return<sp/>this},clone:function(dataAndEvents,deepDataAndEvents){return<sp/>dataAndEvents=null==dataAndEvents?!1:dataAndEvents,deepDataAndEvents=null==deepDataAndEvents?dataAndEvents:deepDataAndEvents,this.map(function(){return<sp/>jQuery.clone(this,dataAndEvents,deepDataAndEvents)})},html:function(value){return<sp/>access(this,function(value){var<sp/>elem=this[0]||{},i=0,l=this.length;if(void<sp/>0===value&amp;&amp;1===elem.nodeType)return<sp/>elem.innerHTML;if(&quot;string&quot;==typeof<sp/>value&amp;&amp;!rnoInnerhtml.test(value)&amp;&amp;!wrapMap[(rtagName.exec(value)||[&quot;&quot;,&quot;&quot;])[1].toLowerCase()]){value=value.replace(rxhtmlTag,&quot;&lt;$1&gt;&lt;/$2&gt;&quot;);try{for(;l&gt;i;i++)elem=this[i]||{},1===elem.nodeType&amp;&amp;(jQuery.cleanData(getAll(elem,!1)),elem.innerHTML=value);elem=0}catch(e){}}elem&amp;&amp;this.empty().append(value)},null,value,arguments.length)},replaceWith:function(){var<sp/>arg=arguments[0];return<sp/>this.domManip(arguments,function(elem){arg=this.parentNode,jQuery.cleanData(getAll(this)),arg&amp;&amp;arg.replaceChild(elem,this)}),arg&amp;&amp;(arg.length||arg.nodeType)?this:this.remove()},detach:function(selector){return<sp/>this.remove(selector,!0)},domManip:function(args,callback){args=concat.apply([],args);var<sp/>fragment,first,scripts,hasScripts,node,doc,i=0,l=this.length,set=this,iNoClone=l-1,value=args[0],isFunction=jQuery.isFunction(value);if(isFunction||l&gt;1&amp;&amp;&quot;string&quot;==typeof<sp/>value&amp;&amp;!support.checkClone&amp;&amp;rchecked.test(value))return<sp/>this.each(function(index){var<sp/>self=set.eq(index);isFunction&amp;&amp;(args[0]=value.call(this,index,self.html())),self.domManip(args,callback)});if(l&amp;&amp;(fragment=jQuery.buildFragment(args,this[0].ownerDocument,!1,this),first=fragment.firstChild,1===fragment.childNodes.length&amp;&amp;(fragment=first),first)){for(scripts=jQuery.map(getAll(fragment,&quot;script&quot;),disableScript),hasScripts=scripts.length;l&gt;i;i++)node=fragment,i!==iNoClone&amp;&amp;(node=jQuery.clone(node,!0,!0),hasScripts&amp;&amp;jQuery.merge(scripts,getAll(node,&quot;script&quot;))),callback.call(this[i],node,i);if(hasScripts)for(doc=scripts[scripts.length-1].ownerDocument,jQuery.map(scripts,restoreScript),i=0;hasScripts&gt;i;i++)node=scripts[i],rscriptType.test(node.type||&quot;&quot;)&amp;&amp;!data_priv.access(node,&quot;globalEval&quot;)&amp;&amp;jQuery.contains(doc,node)&amp;&amp;(node.src?jQuery._evalUrl&amp;&amp;jQuery._evalUrl(node.src):jQuery.globalEval(node.textContent.replace(rcleanScript,&quot;&quot;)))}return<sp/>this}}),jQuery.each({appendTo:&quot;append&quot;,prependTo:&quot;prepend&quot;,insertBefore:&quot;before&quot;,insertAfter:&quot;after&quot;,replaceAll:&quot;replaceWith&quot;},function(name,original){jQuery.fn[name]=function(selector){for(var<sp/>elems,ret=[],insert=jQuery(selector),last=insert.length-1,i=0;last&gt;=i;i++)elems=i===last?this:this.clone(!0),jQuery(insert[i])[original](elems),push.apply(ret,elems.get());return<sp/>this.pushStack(ret)}});var<sp/>iframe,elemdisplay={},rmargin=/^margin/,rnumnonpx=new<sp/>RegExp(&quot;^(&quot;+pnum+&quot;)(?!px)[a-z%]+$&quot;,&quot;i&quot;),getStyles=function(elem){return<sp/>elem.ownerDocument.defaultView.opener?elem.ownerDocument.defaultView.getComputedStyle(elem,null):window.getComputedStyle(elem,null)};!function(){function<sp/>computePixelPositionAndBoxSizingReliable(){div.style.cssText=&quot;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute&quot;,div.innerHTML=&quot;&quot;,docElem.appendChild(container);var<sp/>divStyle=window.getComputedStyle(div,null);pixelPositionVal=&quot;1%&quot;!==divStyle.top,boxSizingReliableVal=&quot;4px&quot;===divStyle.width,docElem.removeChild(container)}var<sp/>pixelPositionVal,boxSizingReliableVal,docElem=document.documentElement,container=document.createElement(&quot;div&quot;),div=document.createElement(&quot;div&quot;);div.style&amp;&amp;(div.style.backgroundClip=&quot;content-box&quot;,div.cloneNode(!0).style.backgroundClip=&quot;&quot;,support.clearCloneStyle=&quot;content-box&quot;===div.style.backgroundClip,container.style.cssText=&quot;border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute&quot;,container.appendChild(div),window.getComputedStyle&amp;&amp;jQuery.extend(support,{pixelPosition:function(){return<sp/>computePixelPositionAndBoxSizingReliable(),pixelPositionVal},boxSizingReliable:function(){return<sp/>null==boxSizingReliableVal&amp;&amp;computePixelPositionAndBoxSizingReliable(),boxSizingReliableVal},reliableMarginRight:function(){var<sp/>ret,marginDiv=div.appendChild(document.createElement(&quot;div&quot;));return<sp/>marginDiv.style.cssText=div.style.cssText=&quot;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0&quot;,marginDiv.style.marginRight=marginDiv.style.width=&quot;0&quot;,div.style.width=&quot;1px&quot;,docElem.appendChild(container),ret=!parseFloat(window.getComputedStyle(marginDiv,null).marginRight),docElem.removeChild(container),div.removeChild(marginDiv),ret}}))}(),jQuery.swap=function(elem,options,callback,args){var<sp/>ret,name,old={};for(name<sp/>in<sp/>options)old[name]=elem.style[name],elem.style[name]=options[name];ret=callback.apply(elem,args||[]);for(name<sp/>in<sp/>options)elem.style[name]=old[name];return<sp/>ret};var<sp/>rdisplayswap=/^(none|table(?!-c[ea]).+)/,rnumsplit=new<sp/>RegExp(&quot;^(&quot;+pnum+&quot;)(.*)$&quot;,&quot;i&quot;),rrelNum=new<sp/>RegExp(&quot;^([+-])=(&quot;+pnum+&quot;)&quot;,&quot;i&quot;),cssShow={position:&quot;absolute&quot;,visibility:&quot;hidden&quot;,display:&quot;block&quot;},cssNormalTransform={letterSpacing:&quot;0&quot;,fontWeight:&quot;400&quot;},cssPrefixes=[&quot;Webkit&quot;,&quot;O&quot;,&quot;Moz&quot;,&quot;ms&quot;];jQuery.extend({cssHooks:{opacity:{get:function(elem,computed){if(computed){var<sp/>ret=curCSS(elem,&quot;opacity&quot;);return&quot;&quot;===ret?&quot;1&quot;:ret}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{&quot;float&quot;:&quot;cssFloat&quot;},style:function(elem,name,value,extra){if(elem&amp;&amp;3!==elem.nodeType&amp;&amp;8!==elem.nodeType&amp;&amp;elem.style){var<sp/>ret,type,hooks,origName=jQuery.camelCase(name),style=elem.style;</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">return<sp/>name=jQuery.cssProps[origName]||(jQuery.cssProps[origName]=vendorPropName(style,origName)),hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName],void<sp/>0===value?hooks&amp;&amp;&quot;get&quot;in<sp/>hooks&amp;&amp;void<sp/>0!==(ret=hooks.get(elem,!1,extra))?ret:style[name]:(type=typeof<sp/>value,&quot;string&quot;===type&amp;&amp;(ret=rrelNum.exec(value))&amp;&amp;(value=(ret[1]+1)*ret[2]+parseFloat(jQuery.css(elem,name)),type=&quot;number&quot;),null!=value&amp;&amp;value===value&amp;&amp;(&quot;number&quot;!==type||jQuery.cssNumber[origName]||(value+=&quot;px&quot;),support.clearCloneStyle||&quot;&quot;!==value||0!==name.indexOf(&quot;background&quot;)||(style[name]=&quot;inherit&quot;),hooks&amp;&amp;&quot;set&quot;in<sp/>hooks&amp;&amp;void<sp/>0===(value=hooks.set(elem,value,extra))||(style[name]=value)),void<sp/>0)}},css:function(elem,name,extra,styles){var<sp/>val,num,hooks,origName=jQuery.camelCase(name);return<sp/>name=jQuery.cssProps[origName]||(jQuery.cssProps[origName]=vendorPropName(elem.style,origName)),hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName],hooks&amp;&amp;&quot;get&quot;in<sp/>hooks&amp;&amp;(val=hooks.get(elem,!0,extra)),void<sp/>0===val&amp;&amp;(val=curCSS(elem,name,styles)),&quot;normal&quot;===val&amp;&amp;name<sp/>in<sp/>cssNormalTransform&amp;&amp;(val=cssNormalTransform[name]),&quot;&quot;===extra||extra?(num=parseFloat(val),extra===!0||jQuery.isNumeric(num)?num||0:val):val}}),jQuery.each([&quot;height&quot;,&quot;width&quot;],function(i,name){jQuery.cssHooks[name]={get:function(elem,computed,extra){return<sp/>computed?rdisplayswap.test(jQuery.css(elem,&quot;display&quot;))&amp;&amp;0===elem.offsetWidth?jQuery.swap(elem,cssShow,function(){return<sp/>getWidthOrHeight(elem,name,extra)}):getWidthOrHeight(elem,name,extra):void<sp/>0},set:function(elem,value,extra){var<sp/>styles=extra&amp;&amp;getStyles(elem);return<sp/>setPositiveNumber(elem,value,extra?augmentWidthOrHeight(elem,name,extra,&quot;border-box&quot;===jQuery.css(elem,&quot;boxSizing&quot;,!1,styles),styles):0)}}}),jQuery.cssHooks.marginRight=addGetHookIf(support.reliableMarginRight,function(elem,computed){return<sp/>computed?jQuery.swap(elem,{display:&quot;inline-block&quot;},curCSS,[elem,&quot;marginRight&quot;]):void<sp/>0}),jQuery.each({margin:&quot;&quot;,padding:&quot;&quot;,border:&quot;Width&quot;},function(prefix,suffix){jQuery.cssHooks[prefix+suffix]={expand:function(value){for(var<sp/>i=0,expanded={},parts=&quot;string&quot;==typeof<sp/>value?value.split(&quot;<sp/>&quot;):[value];4&gt;i;i++)expanded[prefix+cssExpand[i]+suffix]=parts[i]||parts[i-2]||parts[0];return<sp/>expanded}},rmargin.test(prefix)||(jQuery.cssHooks[prefix+suffix].set=setPositiveNumber)}),jQuery.fn.extend({css:function(name,value){return<sp/>access(this,function(elem,name,value){var<sp/>styles,len,map={},i=0;if(jQuery.isArray(name)){for(styles=getStyles(elem),len=name.length;len&gt;i;i++)map[name[i]]=jQuery.css(elem,name[i],!1,styles);return<sp/>map}return<sp/>void<sp/>0!==value?jQuery.style(elem,name,value):jQuery.css(elem,name)},name,value,arguments.length&gt;1)},show:function(){return<sp/>showHide(this,!0)},hide:function(){return<sp/>showHide(this)},toggle:function(state){return&quot;boolean&quot;==typeof<sp/>state?state?this.show():this.hide():this.each(function(){isHidden(this)?jQuery(this).show():jQuery(this).hide()})}}),jQuery.Tween=Tween,Tween.prototype={constructor:Tween,init:function(elem,options,prop,end,easing,unit){this.elem=elem,this.prop=prop,this.easing=easing||&quot;swing&quot;,this.options=options,this.start=this.now=this.cur(),this.end=end,this.unit=unit||(jQuery.cssNumber[prop]?&quot;&quot;:&quot;px&quot;)},cur:function(){var<sp/>hooks=Tween.propHooks[this.prop];return<sp/>hooks&amp;&amp;hooks.get?hooks.get(this):Tween.propHooks._default.get(this)},run:function(percent){var<sp/>eased,hooks=Tween.propHooks[this.prop];return<sp/>this.options.duration?this.pos=eased=jQuery.easing[this.easing](percent,this.options.duration*percent,0,1,this.options.duration):this.pos=eased=percent,this.now=(this.end-this.start)*eased+this.start,this.options.step&amp;&amp;this.options.step.call(this.elem,this.now,this),hooks&amp;&amp;hooks.set?hooks.set(this):Tween.propHooks._default.set(this),this}},Tween.prototype.init.prototype=Tween.prototype,Tween.propHooks={_default:{get:function(tween){var<sp/>result;return<sp/>null==tween.elem[tween.prop]||tween.elem.style&amp;&amp;null!=tween.elem.style[tween.prop]?(result=jQuery.css(tween.elem,tween.prop,&quot;&quot;),result&amp;&amp;&quot;auto&quot;!==result?result:0):tween.elem[tween.prop]},set:function(tween){jQuery.fx.step[tween.prop]?jQuery.fx.step[tween.prop](tween):tween.elem.style&amp;&amp;(null!=tween.elem.style[jQuery.cssProps[tween.prop]]||jQuery.cssHooks[tween.prop])?jQuery.style(tween.elem,tween.prop,tween.now+tween.unit):tween.elem[tween.prop]=tween.now}}},Tween.propHooks.scrollTop=Tween.propHooks.scrollLeft={set:function(tween){tween.elem.nodeType&amp;&amp;tween.elem.parentNode&amp;&amp;(tween.elem[tween.prop]=tween.now)}},jQuery.easing={linear:function(p){return<sp/>p},swing:function(p){return.5-Math.cos(p*Math.PI)/2}},jQuery.fx=Tween.prototype.init,jQuery.fx.step={};var<sp/>fxNow,timerId,rfxtypes=/^(?:toggle|show|hide)$/,rfxnum=new<sp/>RegExp(&quot;^(?:([+-])=|)(&quot;+pnum+&quot;)([a-z%]*)$&quot;,&quot;i&quot;),rrun=/queueHooks$/,animationPrefilters=[defaultPrefilter],tweeners={&quot;*&quot;:[function(prop,value){var<sp/>tween=this.createTween(prop,value),target=tween.cur(),parts=rfxnum.exec(value),unit=parts&amp;&amp;parts[3]||(jQuery.cssNumber[prop]?&quot;&quot;:&quot;px&quot;),start=(jQuery.cssNumber[prop]||&quot;px&quot;!==unit&amp;&amp;+target)&amp;&amp;rfxnum.exec(jQuery.css(tween.elem,prop)),scale=1,maxIterations=20;if(start&amp;&amp;start[3]!==unit){unit=unit||start[3],parts=parts||[],start=+target||1;do<sp/>scale=scale||&quot;.5&quot;,start/=scale,jQuery.style(tween.elem,prop,start+unit);while(scale!==(scale=tween.cur()/target)&amp;&amp;1!==scale&amp;&amp;--maxIterations)}return<sp/>parts&amp;&amp;(start=tween.start=+start||+target||0,tween.unit=unit,tween.end=parts[1]?start+(parts[1]+1)*parts[2]:+parts[2]),tween}]};jQuery.Animation=jQuery.extend(Animation,{tweener:function(props,callback){jQuery.isFunction(props)?(callback=props,props=[&quot;*&quot;]):props=props.split(&quot;<sp/>&quot;);for(var<sp/>prop,index=0,length=props.length;length&gt;index;index++)prop=props[index],tweeners[prop]=tweeners[prop]||[],tweeners[prop].unshift(callback)},prefilter:function(callback,prepend){prepend?animationPrefilters.unshift(callback):animationPrefilters.push(callback)}}),jQuery.speed=function(speed,easing,fn){var<sp/>opt=speed&amp;&amp;&quot;object&quot;==typeof<sp/>speed?jQuery.extend({},speed):{complete:fn||!fn&amp;&amp;easing||jQuery.isFunction(speed)&amp;&amp;speed,duration:speed,easing:fn&amp;&amp;easing||easing&amp;&amp;!jQuery.isFunction(easing)&amp;&amp;easing};return<sp/>opt.duration=jQuery.fx.off?0:&quot;number&quot;==typeof<sp/>opt.duration?opt.duration:opt.duration<sp/>in<sp/>jQuery.fx.speeds?jQuery.fx.speeds[opt.duration]:jQuery.fx.speeds._default,(null==opt.queue||opt.queue===!0)&amp;&amp;(opt.queue=&quot;fx&quot;),opt.old=opt.complete,opt.complete=function(){jQuery.isFunction(opt.old)&amp;&amp;opt.old.call(this),opt.queue&amp;&amp;jQuery.dequeue(this,opt.queue)},opt},jQuery.fn.extend({fadeTo:function(speed,to,easing,callback){return<sp/>this.filter(isHidden).css(&quot;opacity&quot;,0).show().end().animate({opacity:to},speed,easing,callback)},animate:function(prop,speed,easing,callback){var<sp/>empty=jQuery.isEmptyObject(prop),optall=jQuery.speed(speed,easing,callback),doAnimation=function(){var<sp/>anim=Animation(this,jQuery.extend({},prop),optall);(empty||data_priv.get(this,&quot;finish&quot;))&amp;&amp;anim.stop(!0)};return<sp/>doAnimation.finish=doAnimation,empty||optall.queue===!1?this.each(doAnimation):this.queue(optall.queue,doAnimation)},stop:function(type,clearQueue,gotoEnd){var<sp/>stopQueue=function(hooks){var<sp/>stop=hooks.stop;delete<sp/>hooks.stop,stop(gotoEnd)};return&quot;string&quot;!=typeof<sp/>type&amp;&amp;(gotoEnd=clearQueue,clearQueue=type,type=void<sp/>0),clearQueue&amp;&amp;type!==!1&amp;&amp;this.queue(type||&quot;fx&quot;,[]),this.each(function(){var<sp/>dequeue=!0,index=null!=type&amp;&amp;type+&quot;queueHooks&quot;,timers=jQuery.timers,data=data_priv.get(this);if(index)data[index]&amp;&amp;data[index].stop&amp;&amp;stopQueue(data[index]);else<sp/>for(index<sp/>in<sp/>data)data[index]&amp;&amp;data[index].stop&amp;&amp;rrun.test(index)&amp;&amp;stopQueue(data[index]);for(index=timers.length;index--;)timers[index].elem!==this||null!=type&amp;&amp;timers[index].queue!==type||(timers[index].anim.stop(gotoEnd),dequeue=!1,timers.splice(index,1));(dequeue||!gotoEnd)&amp;&amp;jQuery.dequeue(this,type)})},finish:function(type){return<sp/>type!==!1&amp;&amp;(type=type||&quot;fx&quot;),this.each(function(){var<sp/>index,data=data_priv.get(this),queue=data[type+&quot;queue&quot;],hooks=data[type+&quot;queueHooks&quot;],timers=jQuery.timers,length=queue?queue.length:0;for(data.finish=!0,jQuery.queue(this,type,[]),hooks&amp;&amp;hooks.stop&amp;&amp;hooks.stop.call(this,!0),index=timers.length;index--;)timers[index].elem===this&amp;&amp;timers[index].queue===type&amp;&amp;(timers[index].anim.stop(!0),timers.splice(index,1));for(index=0;length&gt;index;index++)queue[index]&amp;&amp;queue[index].finish&amp;&amp;queue[index].finish.call(this);delete<sp/>data.finish})}}),jQuery.each([&quot;toggle&quot;,&quot;show&quot;,&quot;hide&quot;],function(i,name){var<sp/>cssFn=jQuery.fn[name];jQuery.fn[name]=function(speed,easing,callback){return<sp/>null==speed||&quot;boolean&quot;==typeof<sp/>speed?cssFn.apply(this,arguments):this.animate(genFx(name,!0),speed,easing,callback)}}),jQuery.each({slideDown:genFx(&quot;show&quot;),slideUp:genFx(&quot;hide&quot;),slideToggle:genFx(&quot;toggle&quot;),fadeIn:{opacity:&quot;show&quot;},fadeOut:{opacity:&quot;hide&quot;},fadeToggle:{opacity:&quot;toggle&quot;}},function(name,props){jQuery.fn[name]=function(speed,easing,callback){return<sp/>this.animate(props,speed,easing,callback)}}),jQuery.timers=[],jQuery.fx.tick=function(){var<sp/>timer,i=0,timers=jQuery.timers;for(fxNow=jQuery.now();i&lt;timers.length;i++)timer=timers[i],timer()||timers[i]!==timer||timers.splice(i--,1);timers.length||jQuery.fx.stop(),fxNow=void<sp/>0},jQuery.fx.timer=function(timer){jQuery.timers.push(timer),timer()?jQuery.fx.start():jQuery.timers.pop()},jQuery.fx.interval=13,jQuery.fx.start=function(){timerId||(timerId=setInterval(jQuery.fx.tick,jQuery.fx.interval))},jQuery.fx.stop=function(){clearInterval(timerId),timerId=null},jQuery.fx.speeds={slow:600,fast:200,_default:400},jQuery.fn.delay=function(time,type){return<sp/>time=jQuery.fx?jQuery.fx.speeds[time]||time:time,type=type||&quot;fx&quot;,this.queue(type,function(next,hooks){var<sp/>timeout=setTimeout(next,time);hooks.stop=function(){clearTimeout(timeout)}})},function(){var<sp/>input=document.createElement(&quot;input&quot;),select=document.createElement(&quot;select&quot;),opt=select.appendChild(document.createElement(&quot;option&quot;));input.type=&quot;checkbox&quot;,support.checkOn=&quot;&quot;!==input.value,support.optSelected=opt.selected,select.disabled=!0,support.optDisabled=!opt.disabled,input=document.createElement(&quot;input&quot;),input.value=&quot;t&quot;,input.type=&quot;radio&quot;,support.radioValue=&quot;t&quot;===input.value}();var<sp/>nodeHook,boolHook,attrHandle=jQuery.expr.attrHandle;jQuery.fn.extend({attr:function(name,value){return<sp/>access(this,jQuery.attr,name,value,arguments.length&gt;1)},removeAttr:function(name){return<sp/>this.each(function(){jQuery.removeAttr(this,name)})}}),jQuery.extend({attr:function(elem,name,value){var<sp/>hooks,ret,nType=elem.nodeType;if(elem&amp;&amp;3!==nType&amp;&amp;8!==nType&amp;&amp;2!==nType)return<sp/>typeof<sp/>elem.getAttribute===strundefined?jQuery.prop(elem,name,value):(1===nType&amp;&amp;jQuery.isXMLDoc(elem)||(name=name.toLowerCase(),hooks=jQuery.attrHooks[name]||(jQuery.expr.match.bool.test(name)?boolHook:nodeHook)),void<sp/>0===value?hooks&amp;&amp;&quot;get&quot;in<sp/>hooks&amp;&amp;null!==(ret=hooks.get(elem,name))?ret:(ret=jQuery.find.attr(elem,name),null==ret?void<sp/>0:ret):null!==value?hooks&amp;&amp;&quot;set&quot;in<sp/>hooks&amp;&amp;void<sp/>0!==(ret=hooks.set(elem,value,name))?ret:(elem.setAttribute(name,value+&quot;&quot;),value):void<sp/>jQuery.removeAttr(elem,name))},removeAttr:function(elem,value){var<sp/>name,propName,i=0,attrNames=value&amp;&amp;value.match(rnotwhite);if(attrNames&amp;&amp;1===elem.nodeType)for(;name=attrNames[i++];)propName=jQuery.propFix[name]||name,jQuery.expr.match.bool.test(name)&amp;&amp;(elem[propName]=!1),elem.removeAttribute(name)},attrHooks:{type:{set:function(elem,value){if(!support.radioValue&amp;&amp;&quot;radio&quot;===value&amp;&amp;jQuery.nodeName(elem,&quot;input&quot;)){var<sp/>val=elem.value;return<sp/>elem.setAttribute(&quot;type&quot;,value),val&amp;&amp;(elem.value=val),value}}}}}),boolHook={set:function(elem,value,name){return<sp/>value===!1?jQuery.removeAttr(elem,name):elem.setAttribute(name,name),name}},jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g),function(i,name){var<sp/>getter=attrHandle[name]||jQuery.find.attr;attrHandle[name]=function(elem,name,isXML){var<sp/>ret,handle;return<sp/>isXML||(handle=attrHandle[name],attrHandle[name]=ret,ret=null!=getter(elem,name,isXML)?name.toLowerCase():null,attrHandle[name]=handle),ret}});var<sp/>rfocusable=/^(?:input|select|textarea|button)$/i;jQuery.fn.extend({prop:function(name,value){return<sp/>access(this,jQuery.prop,name,value,arguments.length&gt;1)},removeProp:function(name){return<sp/>this.each(function(){delete<sp/>this[jQuery.propFix[name]||name]})}}),jQuery.extend({propFix:{&quot;for&quot;:&quot;htmlFor&quot;,&quot;class&quot;:&quot;className&quot;},prop:function(elem,name,value){var<sp/>ret,hooks,notxml,nType=elem.nodeType;if(elem&amp;&amp;3!==nType&amp;&amp;8!==nType&amp;&amp;2!==nType)return<sp/>notxml=1!==nType||!jQuery.isXMLDoc(elem),notxml&amp;&amp;(name=jQuery.propFix[name]||name,hooks=jQuery.propHooks[name]),void<sp/>0!==value?hooks&amp;&amp;&quot;set&quot;in<sp/>hooks&amp;&amp;void<sp/>0!==(ret=hooks.set(elem,value,name))?ret:elem[name]=value:hooks&amp;&amp;&quot;get&quot;in<sp/>hooks&amp;&amp;null!==(ret=hooks.get(elem,name))?ret:elem[name]},propHooks:{tabIndex:{get:function(elem){return<sp/>elem.hasAttribute(&quot;tabindex&quot;)||rfocusable.test(elem.nodeName)||elem.href?elem.tabIndex:-1}}}}),support.optSelected||(jQuery.propHooks.selected={get:function(elem){var<sp/>parent=elem.parentNode;return<sp/>parent&amp;&amp;parent.parentNode&amp;&amp;parent.parentNode.selectedIndex,null}}),jQuery.each([&quot;tabIndex&quot;,&quot;readOnly&quot;,&quot;maxLength&quot;,&quot;cellSpacing&quot;,&quot;cellPadding&quot;,&quot;rowSpan&quot;,&quot;colSpan&quot;,&quot;useMap&quot;,&quot;frameBorder&quot;,&quot;contentEditable&quot;],function(){jQuery.propFix[this.toLowerCase()]=this});var<sp/>rclass=/[\t\r\n\f]/g;jQuery.fn.extend({addClass:function(value){var<sp/>classes,elem,cur,clazz,j,finalValue,proceed=&quot;string&quot;==typeof<sp/>value&amp;&amp;value,i=0,len=this.length;if(jQuery.isFunction(value))return<sp/>this.each(function(j){jQuery(this).addClass(value.call(this,j,this.className))});if(proceed)for(classes=(value||&quot;&quot;).match(rnotwhite)||[];len&gt;i;i++)if(elem=this[i],cur=1===elem.nodeType&amp;&amp;(elem.className?(&quot;<sp/>&quot;+elem.className+&quot;<sp/>&quot;).replace(rclass,&quot;<sp/>&quot;):&quot;<sp/>&quot;)){for(j=0;clazz=classes[j++];)cur.indexOf(&quot;<sp/>&quot;+clazz+&quot;<sp/>&quot;)&lt;0&amp;&amp;(cur+=clazz+&quot;<sp/>&quot;);finalValue=jQuery.trim(cur),elem.className!==finalValue&amp;&amp;(elem.className=finalValue)}return<sp/>this},removeClass:function(value){var<sp/>classes,elem,cur,clazz,j,finalValue,proceed=0===arguments.length||&quot;string&quot;==typeof<sp/>value&amp;&amp;value,i=0,len=this.length;if(jQuery.isFunction(value))return<sp/>this.each(function(j){jQuery(this).removeClass(value.call(this,j,this.className))});if(proceed)for(classes=(value||&quot;&quot;).match(rnotwhite)||[];len&gt;i;i++)if(elem=this[i],cur=1===elem.nodeType&amp;&amp;(elem.className?(&quot;<sp/>&quot;+elem.className+&quot;<sp/>&quot;).replace(rclass,&quot;<sp/>&quot;):&quot;&quot;)){for(j=0;clazz=classes[j++];)for(;cur.indexOf(&quot;<sp/>&quot;+clazz+&quot;<sp/>&quot;)&gt;=0;)cur=cur.replace(&quot;<sp/>&quot;+clazz+&quot;<sp/>&quot;,&quot;<sp/>&quot;);finalValue=value?jQuery.trim(cur):&quot;&quot;,elem.className!==finalValue&amp;&amp;(elem.className=finalValue)}return<sp/>this},toggleClass:function(value,stateVal){var<sp/>type=typeof<sp/>value;return&quot;boolean&quot;==typeof<sp/>stateVal&amp;&amp;&quot;string&quot;===type?stateVal?this.addClass(value):this.removeClass(value):jQuery.isFunction(value)?this.each(function(i){jQuery(this).toggleClass(value.call(this,i,this.className,stateVal),stateVal)}):this.each(function(){if(&quot;string&quot;===type)for(var<sp/>className,i=0,self=jQuery(this),classNames=value.match(rnotwhite)||[];className=classNames[i++];)self.hasClass(className)?self.removeClass(className):self.addClass(className);else(type===strundefined||&quot;boolean&quot;===type)&amp;&amp;(this.className&amp;&amp;data_priv.set(this,&quot;__className__&quot;,this.className),this.className=this.className||value===!1?&quot;&quot;:data_priv.get(this,&quot;__className__&quot;)||&quot;&quot;)})},hasClass:function(selector){for(var<sp/>className=&quot;<sp/>&quot;+selector+&quot;<sp/>&quot;,i=0,l=this.length;l&gt;i;i++)if(1===this[i].nodeType&amp;&amp;(&quot;<sp/>&quot;+this[i].className+&quot;<sp/>&quot;).replace(rclass,&quot;<sp/>&quot;).indexOf(className)&gt;=0)return!0;return!1}});var<sp/>rreturn=/\r/g;jQuery.fn.extend({val:function(value){var<sp/>hooks,ret,isFunction,elem=this[0];{if(arguments.length)return<sp/>isFunction=jQuery.isFunction(value),this.each(function(i){var<sp/>val;1===this.nodeType&amp;&amp;(val=isFunction?value.call(this,i,jQuery(this).val()):value,null==val?val=&quot;&quot;:&quot;number&quot;==typeof<sp/>val?val+=&quot;&quot;:jQuery.isArray(val)&amp;&amp;(val=jQuery.map(val,function(value){return<sp/>null==value?&quot;&quot;:value+&quot;&quot;})),hooks=jQuery.valHooks[this.type]||jQuery.valHooks[this.nodeName.toLowerCase()],hooks&amp;&amp;&quot;set&quot;in<sp/>hooks&amp;&amp;void<sp/>0!==hooks.set(this,val,&quot;value&quot;)||(this.value=val))});if(elem)return<sp/>hooks=jQuery.valHooks[elem.type]||jQuery.valHooks[elem.nodeName.toLowerCase()],hooks&amp;&amp;&quot;get&quot;in<sp/>hooks&amp;&amp;void<sp/>0!==(ret=hooks.get(elem,&quot;value&quot;))?ret:(ret=elem.value,&quot;string&quot;==typeof<sp/>ret?ret.replace(rreturn,&quot;&quot;):null==ret?&quot;&quot;:ret)}}}),jQuery.extend({valHooks:{option:{get:function(elem){var<sp/>val=jQuery.find.attr(elem,&quot;value&quot;);return<sp/>null!=val?val:jQuery.trim(jQuery.text(elem))}},select:{get:function(elem){for(var<sp/>value,option,options=elem.options,index=elem.selectedIndex,one=&quot;select-one&quot;===elem.type||0&gt;index,values=one?null:[],max=one?index+1:options.length,i=0&gt;index?max:one?index:0;max&gt;i;i++)if(option=options[i],!(!option.selected&amp;&amp;i!==index||(support.optDisabled?option.disabled:null!==option.getAttribute(&quot;disabled&quot;))||option.parentNode.disabled&amp;&amp;jQuery.nodeName(option.parentNode,&quot;optgroup&quot;))){if(value=jQuery(option).val(),one)return<sp/>value;values.push(value)}return<sp/>values},set:function(elem,value){for(var<sp/>optionSet,option,options=elem.options,values=jQuery.makeArray(value),i=options.length;i--;)option=options[i],(option.selected=jQuery.inArray(option.value,values)&gt;=0)&amp;&amp;(optionSet=!0);return<sp/>optionSet||(elem.selectedIndex=-1),values}}}}),jQuery.each([&quot;radio&quot;,&quot;checkbox&quot;],function(){jQuery.valHooks[this]={set:function(elem,value){return<sp/>jQuery.isArray(value)?elem.checked=jQuery.inArray(jQuery(elem).val(),value)&gt;=0:void<sp/>0}},support.checkOn||(jQuery.valHooks[this].get=function(elem){return<sp/>null===elem.getAttribute(&quot;value&quot;)?&quot;on&quot;:elem.value})}),jQuery.each(&quot;blur<sp/>focus<sp/>focusin<sp/>focusout<sp/>load<sp/>resize<sp/>scroll<sp/>unload<sp/>click<sp/>dblclick<sp/>mousedown<sp/>mouseup<sp/>mousemove<sp/>mouseover<sp/>mouseout<sp/>mouseenter<sp/>mouseleave<sp/>change<sp/>select<sp/>submit<sp/>keydown<sp/>keypress<sp/>keyup<sp/>error<sp/>contextmenu&quot;.split(&quot;<sp/>&quot;),function(i,name){jQuery.fn[name]=function(data,fn){return<sp/>arguments.length&gt;0?this.on(name,null,data,fn):this.trigger(name)}}),jQuery.fn.extend({hover:function(fnOver,fnOut){return<sp/>this.mouseenter(fnOver).mouseleave(fnOut||fnOver)},bind:function(types,data,fn){return<sp/>this.on(types,null,data,fn)},unbind:function(types,fn){return<sp/>this.off(types,null,fn)},delegate:function(selector,types,data,fn){return<sp/>this.on(types,selector,data,fn)},undelegate:function(selector,types,fn){return<sp/>1===arguments.length?this.off(selector,&quot;**&quot;):this.off(types,selector||&quot;**&quot;,fn)}});var<sp/>nonce=jQuery.now(),rquery=/\?/;jQuery.parseJSON=function(data){return<sp/>JSON.parse(data+&quot;&quot;)},jQuery.parseXML=function(data){var<sp/>xml,tmp;if(!data||&quot;string&quot;!=typeof<sp/>data)return<sp/>null;try{tmp=new<sp/>DOMParser,xml=tmp.parseFromString(data,&quot;text/xml&quot;)}catch(e){xml=void<sp/>0}return(!xml||xml.getElementsByTagName(&quot;parsererror&quot;).length)&amp;&amp;jQuery.error(&quot;Invalid<sp/>XML:<sp/>&quot;+data),xml};var<sp/>rhash=/#.*$/,rts=/([?&amp;])_=[^&amp;]*/,rheaders=/^(.*?):[<sp/>\t]*([^\r\n]*)$/gm,rlocalProtocol=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,rnoContent=/^(?:GET|HEAD)$/,rprotocol=/^\/\//,rurl=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,prefilters={},transports={},allTypes=&quot;*/&quot;.concat(&quot;*&quot;),ajaxLocation=window.location.href,ajaxLocParts=rurl.exec(ajaxLocation.toLowerCase())||[];jQuery.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ajaxLocation,type:&quot;GET&quot;,isLocal:rlocalProtocol.test(ajaxLocParts[1]),global:!0,processData:!0,async:!0,contentType:&quot;application/x-www-form-urlencoded;<sp/>charset=UTF-8&quot;,accepts:{&quot;*&quot;:allTypes,text:&quot;text/plain&quot;,html:&quot;text/html&quot;,xml:&quot;application/xml,<sp/>text/xml&quot;,json:&quot;application/json,<sp/>text/javascript&quot;},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:&quot;responseXML&quot;,text:&quot;responseText&quot;,json:&quot;responseJSON&quot;},converters:{&quot;*<sp/>text&quot;:String,&quot;text<sp/>html&quot;:!0,&quot;text<sp/>json&quot;:jQuery.parseJSON,&quot;text<sp/>xml&quot;:jQuery.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(target,settings){return<sp/>settings?ajaxExtend(ajaxExtend(target,jQuery.ajaxSettings),settings):ajaxExtend(jQuery.ajaxSettings,target)},ajaxPrefilter:addToPrefiltersOrTransports(prefilters),ajaxTransport:addToPrefiltersOrTransports(transports),ajax:function(url,options){function<sp/>done(status,nativeStatusText,responses,headers){var<sp/>isSuccess,success,error,response,modified,statusText=nativeStatusText;2!==state&amp;&amp;(state=2,timeoutTimer&amp;&amp;clearTimeout(timeoutTimer),transport=void<sp/>0,responseHeadersString=headers||&quot;&quot;,jqXHR.readyState=status&gt;0?4:0,isSuccess=status&gt;=200&amp;&amp;300&gt;status||304===status,responses&amp;&amp;(response=ajaxHandleResponses(s,jqXHR,responses)),response=ajaxConvert(s,response,jqXHR,isSuccess),isSuccess?(s.ifModified&amp;&amp;(modified=jqXHR.getResponseHeader(&quot;Last-Modified&quot;),modified&amp;&amp;(jQuery.lastModified[cacheURL]=modified),modified=jqXHR.getResponseHeader(&quot;etag&quot;),modified&amp;&amp;(jQuery.etag[cacheURL]=modified)),204===status||&quot;HEAD&quot;===s.type?statusText=&quot;nocontent&quot;:304===status?statusText=&quot;notmodified&quot;:(statusText=response.state,success=response.data,error=response.error,isSuccess=!error)):(error=statusText,(status||!statusText)&amp;&amp;(statusText=&quot;error&quot;,0&gt;status&amp;&amp;(status=0))),jqXHR.status=status,jqXHR.statusText=(nativeStatusText||statusText)+&quot;&quot;,isSuccess?deferred.resolveWith(callbackContext,[success,statusText,jqXHR]):deferred.rejectWith(callbackContext,[jqXHR,statusText,error]),jqXHR.statusCode(statusCode),statusCode=void<sp/>0,fireGlobals&amp;&amp;globalEventContext.trigger(isSuccess?&quot;ajaxSuccess&quot;:&quot;ajaxError&quot;,[jqXHR,s,isSuccess?success:error]),completeDeferred.fireWith(callbackContext,[jqXHR,statusText]),fireGlobals&amp;&amp;(globalEventContext.trigger(&quot;ajaxComplete&quot;,[jqXHR,s]),--jQuery.active||jQuery.event.trigger(&quot;ajaxStop&quot;)))}&quot;object&quot;==typeof<sp/>url&amp;&amp;(options=url,url=void<sp/>0),options=options||{};var<sp/>transport,cacheURL,responseHeadersString,responseHeaders,timeoutTimer,parts,fireGlobals,i,s=jQuery.ajaxSetup({},options),callbackContext=s.context||s,globalEventContext=s.context&amp;&amp;(callbackContext.nodeType||callbackContext.jquery)?jQuery(callbackContext):jQuery.event,deferred=jQuery.Deferred(),completeDeferred=jQuery.Callbacks(&quot;once<sp/>memory&quot;),statusCode=s.statusCode||{},requestHeaders={},requestHeadersNames={},state=0,strAbort=&quot;canceled&quot;,jqXHR={readyState:0,getResponseHeader:function(key){var<sp/>match;if(2===state){if(!responseHeaders)for(responseHeaders={};match=rheaders.exec(responseHeadersString);)responseHeaders[match[1].toLowerCase()]=match[2];match=responseHeaders[key.toLowerCase()]}return<sp/>null==match?null:match},getAllResponseHeaders:function(){return<sp/>2===state?responseHeadersString:null},setRequestHeader:function(name,value){var<sp/>lname=name.toLowerCase();return<sp/>state||(name=requestHeadersNames[lname]=requestHeadersNames[lname]||name,requestHeaders[name]=value),this},overrideMimeType:function(type){return<sp/>state||(s.mimeType=type),this},statusCode:function(map){var<sp/>code;if(map)if(2&gt;state)for(code<sp/>in<sp/>map)statusCode[code]=[statusCode[code],map[code]];else<sp/>jqXHR.always(map[jqXHR.status]);return<sp/>this},abort:function(statusText){var<sp/>finalText=statusText||strAbort;return<sp/>transport&amp;&amp;transport.abort(finalText),done(0,finalText),this}};if(deferred.promise(jqXHR).complete=completeDeferred.add,jqXHR.success=jqXHR.done,jqXHR.error=jqXHR.fail,s.url=((url||s.url||ajaxLocation)+&quot;&quot;).replace(rhash,&quot;&quot;).replace(rprotocol,ajaxLocParts[1]+&quot;//&quot;),s.type=options.method||options.type||s.method||s.type,s.dataTypes=jQuery.trim(s.dataType||&quot;*&quot;).toLowerCase().match(rnotwhite)||[&quot;&quot;],null==s.crossDomain&amp;&amp;(parts=rurl.exec(s.url.toLowerCase()),s.crossDomain=!(!parts||parts[1]===ajaxLocParts[1]&amp;&amp;parts[2]===ajaxLocParts[2]&amp;&amp;(parts[3]||(&quot;http:&quot;===parts[1]?&quot;80&quot;:&quot;443&quot;))===(ajaxLocParts[3]||(&quot;http:&quot;===ajaxLocParts[1]?&quot;80&quot;:&quot;443&quot;)))),s.data&amp;&amp;s.processData&amp;&amp;&quot;string&quot;!=typeof<sp/>s.data&amp;&amp;(s.data=jQuery.param(s.data,s.traditional)),inspectPrefiltersOrTransports(prefilters,s,options,jqXHR),2===state)return<sp/>jqXHR;fireGlobals=jQuery.event&amp;&amp;s.global,fireGlobals&amp;&amp;0===jQuery.active++&amp;&amp;jQuery.event.trigger(&quot;ajaxStart&quot;),s.type=s.type.toUpperCase(),s.hasContent=!rnoContent.test(s.type),cacheURL=s.url,s.hasContent||(s.data&amp;&amp;(cacheURL=s.url+=(rquery.test(cacheURL)?&quot;&amp;&quot;:&quot;?&quot;)+s.data,delete<sp/>s.data),s.cache===!1&amp;&amp;(s.url=rts.test(cacheURL)?cacheURL.replace(rts,&quot;$1_=&quot;+nonce++):cacheURL+(rquery.test(cacheURL)?&quot;&amp;&quot;:&quot;?&quot;)+&quot;_=&quot;+nonce++)),s.ifModified&amp;&amp;(jQuery.lastModified[cacheURL]&amp;&amp;jqXHR.setRequestHeader(&quot;If-Modified-Since&quot;,jQuery.lastModified[cacheURL]),jQuery.etag[cacheURL]&amp;&amp;jqXHR.setRequestHeader(&quot;If-None-Match&quot;,jQuery.etag[cacheURL])),(s.data&amp;&amp;s.hasContent&amp;&amp;s.contentType!==!1||options.contentType)&amp;&amp;jqXHR.setRequestHeader(&quot;Content-Type&quot;,s.contentType),jqXHR.setRequestHeader(&quot;Accept&quot;,s.dataTypes[0]&amp;&amp;s.accepts[s.dataTypes[0]]?s.accepts[s.dataTypes[0]]+(&quot;*&quot;!==s.dataTypes[0]?&quot;,<sp/>&quot;+allTypes+&quot;;<sp/>q=0.01&quot;:&quot;&quot;):s.accepts[&quot;*&quot;]);for(i<sp/>in<sp/>s.headers)jqXHR.setRequestHeader(i,s.headers[i]);if(s.beforeSend&amp;&amp;(s.beforeSend.call(callbackContext,jqXHR,s)===!1||2===state))return<sp/>jqXHR.abort();strAbort=&quot;abort&quot;;for(i<sp/>in{success:1,error:1,complete:1})jqXHR[i](s[i]);if(transport=inspectPrefiltersOrTransports(transports,s,options,jqXHR)){jqXHR.readyState=1,fireGlobals&amp;&amp;globalEventContext.trigger(&quot;ajaxSend&quot;,[jqXHR,s]),s.async&amp;&amp;s.timeout&gt;0&amp;&amp;(timeoutTimer=setTimeout(function(){jqXHR.abort(&quot;timeout&quot;)},s.timeout));try{state=1,transport.send(requestHeaders,done)}catch(e){if(!(2&gt;state))throw<sp/>e;done(-1,e)}}else<sp/>done(-1,&quot;No<sp/>Transport&quot;);return<sp/>jqXHR},getJSON:function(url,data,callback){return<sp/>jQuery.get(url,data,callback,&quot;json&quot;)},getScript:function(url,callback){return<sp/>jQuery.get(url,void<sp/>0,callback,&quot;script&quot;)}}),jQuery.each([&quot;get&quot;,&quot;post&quot;],function(i,method){jQuery[method]=function(url,data,callback,type){return<sp/>jQuery.isFunction(data)&amp;&amp;(type=type||callback,callback=data,data=void<sp/>0),jQuery.ajax({url:url,type:method,dataType:type,data:data,success:callback})}}),jQuery._evalUrl=function(url){return<sp/>jQuery.ajax({url:url,type:&quot;GET&quot;,dataType:&quot;script&quot;,async:!1,global:!1,&quot;throws&quot;:!0})},jQuery.fn.extend({wrapAll:function(html){var<sp/>wrap;return<sp/>jQuery.isFunction(html)?this.each(function(i){jQuery(this).wrapAll(html.call(this,i))}):(this[0]&amp;&amp;(wrap=jQuery(html,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&amp;&amp;wrap.insertBefore(this[0]),wrap.map(function(){for(var<sp/>elem=this;elem.firstElementChild;)elem=elem.firstElementChild;return<sp/>elem}).append(this)),this)},wrapInner:function(html){return<sp/>jQuery.isFunction(html)?this.each(function(i){jQuery(this).wrapInner(html.call(this,i))}):this.each(function(){var<sp/>self=jQuery(this),contents=self.contents();contents.length?contents.wrapAll(html):self.append(html)})},wrap:function(html){var<sp/>isFunction=jQuery.isFunction(html);return<sp/>this.each(function(i){jQuery(this).wrapAll(isFunction?html.call(this,i):html)})},unwrap:function(){return<sp/>this.parent().each(function(){jQuery.nodeName(this,&quot;body&quot;)||jQuery(this).replaceWith(this.childNodes)}).end()}}),jQuery.expr.filters.hidden=function(elem){return<sp/>elem.offsetWidth&lt;=0&amp;&amp;elem.offsetHeight&lt;=0},jQuery.expr.filters.visible=function(elem){return!jQuery.expr.filters.hidden(elem)};var<sp/>r20=/%20/g,rbracket=/\[\]$/,rCRLF=/\r?\n/g,rsubmitterTypes=/^(?:submit|button|image|reset|file)$/i,rsubmittable=/^(?:input|select|textarea|keygen)/i;jQuery.param=function(a,traditional){var<sp/>prefix,s=[],add=function(key,value){value=jQuery.isFunction(value)?value():null==value?&quot;&quot;:value,s[s.length]=encodeURIComponent(key)+&quot;=&quot;+encodeURIComponent(value)};if(void<sp/>0===traditional&amp;&amp;(traditional=jQuery.ajaxSettings&amp;&amp;jQuery.ajaxSettings.traditional),jQuery.isArray(a)||a.jquery&amp;&amp;!jQuery.isPlainObject(a))jQuery.each(a,function(){add(this.name,this.value)});else<sp/>for(prefix<sp/>in<sp/>a)buildParams(prefix,a[prefix],traditional,add);return<sp/>s.join(&quot;&amp;&quot;).replace(r20,&quot;+&quot;)},jQuery.fn.extend({serialize:function(){return<sp/>jQuery.param(this.serializeArray())},serializeArray:function(){return<sp/>this.map(function(){var<sp/>elements=jQuery.prop(this,&quot;elements&quot;);return<sp/>elements?jQuery.makeArray(elements):this}).filter(function(){var<sp/>type=this.type;return<sp/>this.name&amp;&amp;!jQuery(this).is(&quot;:disabled&quot;)&amp;&amp;rsubmittable.test(this.nodeName)&amp;&amp;!rsubmitterTypes.test(type)&amp;&amp;(this.checked||!rcheckableType.test(type))}).map(function(i,elem){var<sp/>val=jQuery(this).val();return<sp/>null==val?null:jQuery.isArray(val)?jQuery.map(val,function(val){return{name:elem.name,value:val.replace(rCRLF,&quot;\r\n&quot;)}}):{name:elem.name,value:val.replace(rCRLF,&quot;\r\n&quot;)}}).get()}}),jQuery.ajaxSettings.xhr=function(){try{return<sp/>new<sp/>XMLHttpRequest}catch(e){}};var<sp/>xhrId=0,xhrCallbacks={},xhrSuccessStatus={0:200,1223:204},xhrSupported=jQuery.ajaxSettings.xhr();window.attachEvent&amp;&amp;window.attachEvent(&quot;onunload&quot;,function(){for(var<sp/>key<sp/>in<sp/>xhrCallbacks)xhrCallbacks[key]()}),support.cors=!!xhrSupported&amp;&amp;&quot;withCredentials&quot;in<sp/>xhrSupported,support.ajax=xhrSupported=!!xhrSupported,jQuery.ajaxTransport(function(options){var<sp/>callback;return<sp/>support.cors||xhrSupported&amp;&amp;!options.crossDomain?{send:function(headers,complete){var<sp/>i,xhr=options.xhr(),id=++xhrId;if(xhr.open(options.type,options.url,options.async,options.username,options.password),options.xhrFields)for(i<sp/>in<sp/>options.xhrFields)xhr[i]=options.xhrFields[i];options.mimeType&amp;&amp;xhr.overrideMimeType&amp;&amp;xhr.overrideMimeType(options.mimeType),options.crossDomain||headers[&quot;X-Requested-With&quot;]||(headers[&quot;X-Requested-With&quot;]=&quot;XMLHttpRequest&quot;);for(i<sp/>in<sp/>headers)xhr.setRequestHeader(i,headers[i]);callback=function(type){return<sp/>function(){callback&amp;&amp;(delete<sp/>xhrCallbacks[id],callback=xhr.onload=xhr.onerror=null,&quot;abort&quot;===type?xhr.abort():&quot;error&quot;===type?complete(xhr.status,xhr.statusText):complete(xhrSuccessStatus[xhr.status]||xhr.status,xhr.statusText,&quot;string&quot;==typeof<sp/>xhr.responseText?{text:xhr.responseText}:void<sp/>0,xhr.getAllResponseHeaders()))}},xhr.onload=callback(),xhr.onerror=callback(&quot;error&quot;),callback=xhrCallbacks[id]=callback(&quot;abort&quot;);try{xhr.send(options.hasContent&amp;&amp;options.data||null)}catch(e){if(callback)throw<sp/>e}},abort:function(){callback&amp;&amp;callback()}}:void<sp/>0}),jQuery.ajaxSetup({accepts:{script:&quot;text/javascript,<sp/>application/javascript,<sp/>application/ecmascript,<sp/>application/x-ecmascript&quot;},contents:{script:/(?:java|ecma)script/},converters:{&quot;text<sp/>script&quot;:function(text){return<sp/>jQuery.globalEval(text),text}}}),jQuery.ajaxPrefilter(&quot;script&quot;,function(s){void<sp/>0===s.cache&amp;&amp;(s.cache=!1),s.crossDomain&amp;&amp;(s.type=&quot;GET&quot;)}),jQuery.ajaxTransport(&quot;script&quot;,function(s){if(s.crossDomain){var<sp/>script,callback;return{send:function(_,complete){script=jQuery(&quot;&lt;script&gt;&quot;).prop({async:!0,charset:s.scriptCharset,src:s.url}).on(&quot;load<sp/>error&quot;,callback=function(evt){script.remove(),callback=null,evt&amp;&amp;complete(&quot;error&quot;===evt.type?404:200,evt.type)}),document.head.appendChild(script[0])},abort:function(){callback&amp;&amp;callback()}}}});var<sp/>oldCallbacks=[],rjsonp=/(=)\?(?=&amp;|$)|\?\?/;jQuery.ajaxSetup({jsonp:&quot;callback&quot;,jsonpCallback:function(){var<sp/>callback=oldCallbacks.pop()||jQuery.expando+&quot;_&quot;+nonce++;return<sp/>this[callback]=!0,callback}}),jQuery.ajaxPrefilter(&quot;json<sp/>jsonp&quot;,function(s,originalSettings,jqXHR){var<sp/>callbackName,overwritten,responseContainer,jsonProp=s.jsonp!==!1&amp;&amp;(rjsonp.test(s.url)?&quot;url&quot;:&quot;string&quot;==typeof<sp/>s.data&amp;&amp;!(s.contentType||&quot;&quot;).indexOf(&quot;application/x-www-form-urlencoded&quot;)&amp;&amp;rjsonp.test(s.data)&amp;&amp;&quot;data&quot;);return<sp/>jsonProp||&quot;jsonp&quot;===s.dataTypes[0]?(callbackName=s.jsonpCallback=jQuery.isFunction(s.jsonpCallback)?s.jsonpCallback():s.jsonpCallback,jsonProp?s[jsonProp]=s[jsonProp].replace(rjsonp,&quot;$1&quot;+callbackName):s.jsonp!==!1&amp;&amp;(s.url+=(rquery.test(s.url)?&quot;&amp;&quot;:&quot;?&quot;)+s.jsonp+&quot;=&quot;+callbackName),s.converters[&quot;script<sp/>json&quot;]=function(){return<sp/>responseContainer||jQuery.error(callbackName+&quot;<sp/>was<sp/>not<sp/>called&quot;),responseContainer[0]},s.dataTypes[0]=&quot;json&quot;,overwritten=window[callbackName],window[callbackName]=function(){responseContainer=arguments},jqXHR.always(function(){window[callbackName]=overwritten,s[callbackName]&amp;&amp;(s.jsonpCallback=originalSettings.jsonpCallback,oldCallbacks.push(callbackName)),responseContainer&amp;&amp;jQuery.isFunction(overwritten)&amp;&amp;overwritten(responseContainer[0]),responseContainer=overwritten=void<sp/>0}),&quot;script&quot;):void<sp/>0}),jQuery.parseHTML=function(data,context,keepScripts){if(!data||&quot;string&quot;!=typeof<sp/>data)return<sp/>null;&quot;boolean&quot;==typeof<sp/>context&amp;&amp;(keepScripts=context,context=!1),context=context||document;var<sp/>parsed=rsingleTag.exec(data),scripts=!keepScripts&amp;&amp;[];return<sp/>parsed?[context.createElement(parsed[1])]:(parsed=jQuery.buildFragment([data],context,scripts),scripts&amp;&amp;scripts.length&amp;&amp;jQuery(scripts).remove(),jQuery.merge([],parsed.childNodes))};var<sp/>_load=jQuery.fn.load;jQuery.fn.load=function(url,params,callback){if(&quot;string&quot;!=typeof<sp/>url&amp;&amp;_load)return<sp/>_load.apply(this,arguments);var<sp/>selector,type,response,self=this,off=url.indexOf(&quot;<sp/>&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">return<sp/>off&gt;=0&amp;&amp;(selector=jQuery.trim(url.slice(off)),url=url.slice(0,off)),jQuery.isFunction(params)?(callback=params,params=void<sp/>0):params&amp;&amp;&quot;object&quot;==typeof<sp/>params&amp;&amp;(type=&quot;POST&quot;),self.length&gt;0&amp;&amp;jQuery.ajax({url:url,type:type,dataType:&quot;html&quot;,data:params}).done(function(responseText){response=arguments,self.html(selector?jQuery(&quot;&lt;div&gt;&quot;).append(jQuery.parseHTML(responseText)).find(selector):responseText)}).complete(callback&amp;&amp;function(jqXHR,status){self.each(callback,response||[jqXHR.responseText,status,jqXHR])}),this},jQuery.each([&quot;ajaxStart&quot;,&quot;ajaxStop&quot;,&quot;ajaxComplete&quot;,&quot;ajaxError&quot;,&quot;ajaxSuccess&quot;,&quot;ajaxSend&quot;],function(i,type){jQuery.fn[type]=function(fn){return<sp/>this.on(type,fn)}}),jQuery.expr.filters.animated=function(elem){return<sp/>jQuery.grep(jQuery.timers,function(fn){return<sp/>elem===fn.elem}).length};var<sp/>docElem=window.document.documentElement;jQuery.offset={setOffset:function(elem,options,i){var<sp/>curPosition,curLeft,curCSSTop,curTop,curOffset,curCSSLeft,calculatePosition,position=jQuery.css(elem,&quot;position&quot;),curElem=jQuery(elem),props={};&quot;static&quot;===position&amp;&amp;(elem.style.position=&quot;relative&quot;),curOffset=curElem.offset(),curCSSTop=jQuery.css(elem,&quot;top&quot;),curCSSLeft=jQuery.css(elem,&quot;left&quot;),calculatePosition=(&quot;absolute&quot;===position||&quot;fixed&quot;===position)&amp;&amp;(curCSSTop+curCSSLeft).indexOf(&quot;auto&quot;)&gt;-1,calculatePosition?(curPosition=curElem.position(),curTop=curPosition.top,curLeft=curPosition.left):(curTop=parseFloat(curCSSTop)||0,curLeft=parseFloat(curCSSLeft)||0),jQuery.isFunction(options)&amp;&amp;(options=options.call(elem,i,curOffset)),null!=options.top&amp;&amp;(props.top=options.top-curOffset.top+curTop),null!=options.left&amp;&amp;(props.left=options.left-curOffset.left+curLeft),&quot;using&quot;in<sp/>options?options.using.call(elem,props):curElem.css(props)}},jQuery.fn.extend({offset:function(options){if(arguments.length)return<sp/>void<sp/>0===options?this:this.each(function(i){jQuery.offset.setOffset(this,options,i)});var<sp/>docElem,win,elem=this[0],box={top:0,left:0},doc=elem&amp;&amp;elem.ownerDocument;if(doc)return<sp/>docElem=doc.documentElement,jQuery.contains(docElem,elem)?(typeof<sp/>elem.getBoundingClientRect!==strundefined&amp;&amp;(box=elem.getBoundingClientRect()),win=getWindow(doc),{top:box.top+win.pageYOffset-docElem.clientTop,left:box.left+win.pageXOffset-docElem.clientLeft}):box},position:function(){if(this[0]){var<sp/>offsetParent,offset,elem=this[0],parentOffset={top:0,left:0};return&quot;fixed&quot;===jQuery.css(elem,&quot;position&quot;)?offset=elem.getBoundingClientRect():(offsetParent=this.offsetParent(),offset=this.offset(),jQuery.nodeName(offsetParent[0],&quot;html&quot;)||(parentOffset=offsetParent.offset()),parentOffset.top+=jQuery.css(offsetParent[0],&quot;borderTopWidth&quot;,!0),parentOffset.left+=jQuery.css(offsetParent[0],&quot;borderLeftWidth&quot;,!0)),{top:offset.top-parentOffset.top-jQuery.css(elem,&quot;marginTop&quot;,!0),left:offset.left-parentOffset.left-jQuery.css(elem,&quot;marginLeft&quot;,!0)}}},offsetParent:function(){return<sp/>this.map(function(){for(var<sp/>offsetParent=this.offsetParent||docElem;offsetParent&amp;&amp;!jQuery.nodeName(offsetParent,&quot;html&quot;)&amp;&amp;&quot;static&quot;===jQuery.css(offsetParent,&quot;position&quot;);)offsetParent=offsetParent.offsetParent;return<sp/>offsetParent||docElem})}}),jQuery.each({scrollLeft:&quot;pageXOffset&quot;,scrollTop:&quot;pageYOffset&quot;},function(method,prop){var<sp/>top=&quot;pageYOffset&quot;===prop;jQuery.fn[method]=function(val){return<sp/>access(this,function(elem,method,val){var<sp/>win=getWindow(elem);return<sp/>void<sp/>0===val?win?win[prop]:elem[method]:void(win?win.scrollTo(top?window.pageXOffset:val,top?val:window.pageYOffset):elem[method]=val)},method,val,arguments.length,null)}}),jQuery.each([&quot;top&quot;,&quot;left&quot;],function(i,prop){jQuery.cssHooks[prop]=addGetHookIf(support.pixelPosition,function(elem,computed){return<sp/>computed?(computed=curCSS(elem,prop),rnumnonpx.test(computed)?jQuery(elem).position()[prop]+&quot;px&quot;:computed):void<sp/>0})}),jQuery.each({Height:&quot;height&quot;,Width:&quot;width&quot;},function(name,type){jQuery.each({padding:&quot;inner&quot;+name,content:type,&quot;&quot;:&quot;outer&quot;+name},function(defaultExtra,funcName){jQuery.fn[funcName]=function(margin,value){var<sp/>chainable=arguments.length&amp;&amp;(defaultExtra||&quot;boolean&quot;!=typeof<sp/>margin),extra=defaultExtra||(margin===!0||value===!0?&quot;margin&quot;:&quot;border&quot;);return<sp/>access(this,function(elem,type,value){var<sp/>doc;return<sp/>jQuery.isWindow(elem)?elem.document.documentElement[&quot;client&quot;+name]:9===elem.nodeType?(doc=elem.documentElement,Math.max(elem.body[&quot;scroll&quot;+name],doc[&quot;scroll&quot;+name],elem.body[&quot;offset&quot;+name],doc[&quot;offset&quot;+name],doc[&quot;client&quot;+name])):void<sp/>0===value?jQuery.css(elem,type,extra):jQuery.style(elem,type,value,extra)},type,chainable?margin:void<sp/>0,chainable,null)}})}),jQuery.fn.size=function(){return<sp/>this.length},jQuery.fn.andSelf=jQuery.fn.addBack,&quot;function&quot;==typeof<sp/>define&amp;&amp;define.amd&amp;&amp;define(&quot;jquery&quot;,[],function(){return<sp/>jQuery});var<sp/>_jQuery=window.jQuery,_$=window.$;return<sp/>jQuery.noConflict=function(deep){return<sp/>window.$===jQuery&amp;&amp;(window.$=_$),deep&amp;&amp;window.jQuery===jQuery&amp;&amp;(window.jQuery=_jQuery),jQuery},typeof<sp/>noGlobal===strundefined&amp;&amp;(window.jQuery=window.$=jQuery),jQuery}),function(window,document,undefined){&quot;use<sp/>strict&quot;;function<sp/>minErr(module,ErrorConstructor){return<sp/>ErrorConstructor=ErrorConstructor||Error,function(){var<sp/>paramPrefix,i,SKIP_INDEXES=2,templateArgs=arguments,code=templateArgs[0],message=&quot;[&quot;+(module?module+&quot;:&quot;:&quot;&quot;)+code+&quot;]<sp/>&quot;,template=templateArgs[1];for(message+=template.replace(/\{\d+\}/g,function(match){var<sp/>index=+match.slice(1,-1),shiftedIndex=index+SKIP_INDEXES;return<sp/>shiftedIndex&lt;templateArgs.length?toDebugString(templateArgs[shiftedIndex]):match}),message+=&quot;\nhttp://errors.angularjs.org/1.4.0/&quot;+(module?module+&quot;/&quot;:&quot;&quot;)+code,i=SKIP_INDEXES,paramPrefix=&quot;?&quot;;i&lt;templateArgs.length;i++,paramPrefix=&quot;&amp;&quot;)message+=paramPrefix+&quot;p&quot;+(i-SKIP_INDEXES)+&quot;=&quot;+encodeURIComponent(toDebugString(templateArgs[i]));return<sp/>new<sp/>ErrorConstructor(message)}}function<sp/>isArrayLike(obj){if(null==obj||isWindow(obj))return!1;var<sp/>length=&quot;length&quot;in<sp/>Object(obj)&amp;&amp;obj.length;return<sp/>obj.nodeType===NODE_TYPE_ELEMENT&amp;&amp;length?!0:isString(obj)||isArray(obj)||0===length||&quot;number&quot;==typeof<sp/>length&amp;&amp;length&gt;0&amp;&amp;length-1<sp/>in<sp/>obj}function<sp/>forEach(obj,iterator,context){var<sp/>key,length;if(obj)if(isFunction(obj))for(key<sp/>in<sp/>obj)&quot;prototype&quot;==key||&quot;length&quot;==key||&quot;name&quot;==key||obj.hasOwnProperty&amp;&amp;!obj.hasOwnProperty(key)||iterator.call(context,obj[key],key,obj);else<sp/>if(isArray(obj)||isArrayLike(obj)){var<sp/>isPrimitive=&quot;object&quot;!=typeof<sp/>obj;for(key=0,length=obj.length;length&gt;key;key++)(isPrimitive||key<sp/>in<sp/>obj)&amp;&amp;iterator.call(context,obj[key],key,obj)}else<sp/>if(obj.forEach&amp;&amp;obj.forEach!==forEach)obj.forEach(iterator,context,obj);else<sp/>if(isBlankObject(obj))for(key<sp/>in<sp/>obj)iterator.call(context,obj[key],key,obj);else<sp/>if(&quot;function&quot;==typeof<sp/>obj.hasOwnProperty)for(key<sp/>in<sp/>obj)obj.hasOwnProperty(key)&amp;&amp;iterator.call(context,obj[key],key,obj);else<sp/>for(key<sp/>in<sp/>obj)hasOwnProperty.call(obj,key)&amp;&amp;iterator.call(context,obj[key],key,obj);return<sp/>obj}function<sp/>forEachSorted(obj,iterator,context){for(var<sp/>keys=Object.keys(obj).sort(),i=0;i&lt;keys.length;i++)iterator.call(context,obj[keys[i]],keys[i]);return<sp/>keys}function<sp/>reverseParams(iteratorFn){return<sp/>function(value,key){iteratorFn(key,value)}}function<sp/>nextUid(){return++uid}function<sp/>setHashKey(obj,h){h?obj.$$hashKey=h:delete<sp/>obj.$$hashKey}function<sp/>baseExtend(dst,objs,deep){for(var<sp/>h=dst.$$hashKey,i=0,ii=objs.length;ii&gt;i;++i){var<sp/>obj=objs[i];if(isObject(obj)||isFunction(obj))for(var<sp/>keys=Object.keys(obj),j=0,jj=keys.length;jj&gt;j;j++){var<sp/>key=keys[j],src=obj[key];deep&amp;&amp;isObject(src)?(isObject(dst[key])||(dst[key]=isArray(src)?[]:{}),baseExtend(dst[key],[src],!0)):dst[key]=src}}return<sp/>setHashKey(dst,h),dst}function<sp/>extend(dst){return<sp/>baseExtend(dst,slice.call(arguments,1),!1)}function<sp/>merge(dst){return<sp/>baseExtend(dst,slice.call(arguments,1),!0)}function<sp/>toInt(str){return<sp/>parseInt(str,10)}function<sp/>inherit(parent,extra){return<sp/>extend(Object.create(parent),extra)}function<sp/>noop(){}function<sp/>identity($){return<sp/>$}function<sp/>valueFn(value){return<sp/>function(){return<sp/>value}}function<sp/>isUndefined(value){return&quot;undefined&quot;==typeof<sp/>value}function<sp/>isDefined(value){return&quot;undefined&quot;!=typeof<sp/>value}function<sp/>isObject(value){return<sp/>null!==value&amp;&amp;&quot;object&quot;==typeof<sp/>value}function<sp/>isBlankObject(value){return<sp/>null!==value&amp;&amp;&quot;object&quot;==typeof<sp/>value&amp;&amp;!getPrototypeOf(value)}function<sp/>isString(value){return&quot;string&quot;==typeof<sp/>value}function<sp/>isNumber(value){return&quot;number&quot;==typeof<sp/>value}function<sp/>isDate(value){return&quot;[object<sp/>Date]&quot;===toString.call(value)}function<sp/>isFunction(value){return&quot;function&quot;==typeof<sp/>value}function<sp/>isRegExp(value){return&quot;[object<sp/>RegExp]&quot;===toString.call(value)}function<sp/>isWindow(obj){return<sp/>obj&amp;&amp;obj.window===obj}function<sp/>isScope(obj){return<sp/>obj&amp;&amp;obj.$evalAsync&amp;&amp;obj.$watch}function<sp/>isFile(obj){return&quot;[object<sp/>File]&quot;===toString.call(obj)}function<sp/>isFormData(obj){return&quot;[object<sp/>FormData]&quot;===toString.call(obj)}function<sp/>isBlob(obj){return&quot;[object<sp/>Blob]&quot;===toString.call(obj)}function<sp/>isBoolean(value){return&quot;boolean&quot;==typeof<sp/>value}function<sp/>isPromiseLike(obj){return<sp/>obj&amp;&amp;isFunction(obj.then)}function<sp/>isTypedArray(value){return<sp/>TYPED_ARRAY_REGEXP.test(toString.call(value))}function<sp/>isElement(node){return!(!node||!(node.nodeName||node.prop&amp;&amp;node.attr&amp;&amp;node.find))}function<sp/>makeMap(str){var<sp/>i,obj={},items=str.split(&quot;,&quot;);for(i=0;i&lt;items.length;i++)obj[items[i]]=!0;return<sp/>obj}function<sp/>nodeName_(element){return<sp/>lowercase(element.nodeName||element[0]&amp;&amp;element[0].nodeName)}function<sp/>arrayRemove(array,value){var<sp/>index=array.indexOf(value);return<sp/>index&gt;=0&amp;&amp;array.splice(index,1),index}function<sp/>copy(source,destination,stackSource,stackDest){function<sp/>putValue(key,val,destination,stackSource,stackDest){var<sp/>result=copy(val,null,stackSource,stackDest);isObject(val)&amp;&amp;(stackSource.push(val),stackDest.push(result)),destination[key]=result}if(isWindow(source)||isScope(source))throw<sp/>ngMinErr(&quot;cpws&quot;,&quot;Can&apos;</highlight><highlight class="normal">t<sp/>copy!<sp/>Making<sp/>copies<sp/>of<sp/>Window<sp/>or<sp/>Scope<sp/>instances<sp/>is<sp/>not<sp/>supported.</highlight><highlight class="stringliteral">&quot;);if(isTypedArray(destination))throw<sp/>ngMinErr(&quot;</highlight><highlight class="normal">cpta</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Can</highlight><highlight class="stringliteral">&apos;t<sp/>copy!<sp/>TypedArray<sp/>destination<sp/>cannot<sp/>be<sp/>mutated.&quot;);if(destination){if(source===destination)throw<sp/>ngMinErr(&quot;cpi&quot;,&quot;Can&apos;</highlight><highlight class="normal">t<sp/>copy!<sp/>Source<sp/>and<sp/>destination<sp/>are<sp/>identical.</highlight><highlight class="stringliteral">&quot;);if(stackSource=stackSource||[],stackDest=stackDest||[],isObject(source)){var<sp/>index=stackSource.indexOf(source);if(-1!==index)return<sp/>stackDest[index];stackSource.push(source),stackDest.push(destination)}var<sp/>result,key;if(isArray(source)){destination.length=0;for(var<sp/>i=0;i&lt;source.length;i++)result=copy(source[i],null,stackSource,stackDest),isObject(source[i])&amp;&amp;(stackSource.push(source[i]),stackDest.push(result)),destination.push(result)}else{var<sp/>h=destination.$$hashKey;if(isArray(destination)?destination.length=0:forEach(destination,function(value,key){delete<sp/>destination[key]}),isBlankObject(source))for(key<sp/>in<sp/>source)putValue(key,source[key],destination,stackSource,stackDest);else<sp/>if(source&amp;&amp;&quot;</highlight><highlight class="normal">function</highlight><highlight class="stringliteral">&quot;==typeof<sp/>source.hasOwnProperty)for(key<sp/>in<sp/>source)source.hasOwnProperty(key)&amp;&amp;putValue(key,source[key],destination,stackSource,stackDest);else<sp/>for(key<sp/>in<sp/>source)hasOwnProperty.call(source,key)&amp;&amp;putValue(key,source[key],destination,stackSource,stackDest);setHashKey(destination,h)}}else<sp/>if(destination=source,source)if(isArray(source))destination=copy(source,[],stackSource,stackDest);else<sp/>if(isTypedArray(source))destination=new<sp/>source.constructor(source);else<sp/>if(isDate(source))destination=new<sp/>Date(source.getTime());else<sp/>if(isRegExp(source))destination=new<sp/>RegExp(source.source,source.toString().match(/[^\/]*$/)[0]),destination.lastIndex=source.lastIndex;else<sp/>if(isObject(source)){var<sp/>emptyObject=Object.create(getPrototypeOf(source));destination=copy(source,emptyObject,stackSource,stackDest)}return<sp/>destination}function<sp/>shallowCopy(src,dst){if(isArray(src)){dst=dst||[];for(var<sp/>i=0,ii=src.length;ii&gt;i;i++)dst[i]=src[i]}else<sp/>if(isObject(src)){dst=dst||{};for(var<sp/>key<sp/>in<sp/>src)(&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;!==key.charAt(0)||&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;!==key.charAt(1))&amp;&amp;(dst[key]=src[key])}return<sp/>dst||src}function<sp/>equals(o1,o2){if(o1===o2)return!0;if(null===o1||null===o2)return!1;if(o1!==o1&amp;&amp;o2!==o2)return!0;var<sp/>length,key,keySet,t1=typeof<sp/>o1,t2=typeof<sp/>o2;if(t1==t2&amp;&amp;&quot;</highlight><highlight class="keywordtype">object</highlight><highlight class="stringliteral">&quot;==t1){if(!isArray(o1)){if(isDate(o1))return<sp/>isDate(o2)?equals(o1.getTime(),o2.getTime()):!1;if(isRegExp(o1))return<sp/>isRegExp(o2)?o1.toString()==o2.toString():!1;if(isScope(o1)||isScope(o2)||isWindow(o1)||isWindow(o2)||isArray(o2)||isDate(o2)||isRegExp(o2))return!1;keySet=createMap();for(key<sp/>in<sp/>o1)if(&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;!==key.charAt(0)&amp;&amp;!isFunction(o1[key])){if(!equals(o1[key],o2[key]))return!1;keySet[key]=!0}for(key<sp/>in<sp/>o2)if(!(key<sp/>in<sp/>keySet||&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;===key.charAt(0)||o2[key]===undefined||isFunction(o2[key])))return!1;return!0}if(!isArray(o2))return!1;if((length=o1.length)==o2.length){for(key=0;length&gt;key;key++)if(!equals(o1[key],o2[key]))return!1;return!0}}return!1}function<sp/>concat(array1,array2,index){return<sp/>array1.concat(slice.call(array2,index))}function<sp/>sliceArgs(args,startIndex){return<sp/>slice.call(args,startIndex||0)}function<sp/>bind(self,fn){var<sp/>curryArgs=arguments.length&gt;2?sliceArgs(arguments,2):[];return!isFunction(fn)||fn<sp/>instanceof<sp/>RegExp?fn:curryArgs.length?function(){return<sp/>arguments.length?fn.apply(self,concat(curryArgs,arguments,0)):fn.apply(self,curryArgs)}:function(){return<sp/>arguments.length?fn.apply(self,arguments):fn.call(self)}}function<sp/>toJsonReplacer(key,value){var<sp/>val=value;return&quot;</highlight><highlight class="keywordtype">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>key&amp;&amp;&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;===key.charAt(0)&amp;&amp;&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;===key.charAt(1)?val=undefined:isWindow(value)?val=&quot;</highlight><highlight class="normal">$WINDOW</highlight><highlight class="stringliteral">&quot;:value&amp;&amp;document===value?val=&quot;</highlight><highlight class="normal">$DOCUMENT</highlight><highlight class="stringliteral">&quot;:isScope(value)&amp;&amp;(val=&quot;</highlight><highlight class="normal">$SCOPE</highlight><highlight class="stringliteral">&quot;),val}function<sp/>toJson(obj,pretty){return&quot;</highlight><highlight class="normal">undefined</highlight><highlight class="stringliteral">&quot;==typeof<sp/>obj?undefined:(isNumber(pretty)||(pretty=pretty?2:null),JSON.stringify(obj,toJsonReplacer,pretty))}function<sp/>fromJson(json){return<sp/>isString(json)?JSON.parse(json):json}function<sp/>timezoneToOffset(timezone,fallback){var<sp/>requestedTimezoneOffset=Date.parse(&quot;</highlight><highlight class="normal">Jan<sp/>01,<sp/>1970<sp/>00:00:00<sp/></highlight><highlight class="stringliteral">&quot;+timezone)/6e4;return<sp/>isNaN(requestedTimezoneOffset)?fallback:requestedTimezoneOffset}function<sp/>addDateMinutes(date,minutes){return<sp/>date=new<sp/>Date(date.getTime()),date.setMinutes(date.getMinutes()+minutes),date}function<sp/>convertTimezoneToLocal(date,timezone,reverse){reverse=reverse?-1:1;var<sp/>timezoneOffset=timezoneToOffset(timezone,date.getTimezoneOffset());return<sp/>addDateMinutes(date,reverse*(timezoneOffset-date.getTimezoneOffset()))}function<sp/>startingTag(element){element=jqLite(element).clone();try{element.empty()}catch(e){}var<sp/>elemHtml=jqLite(&quot;</highlight><highlight class="normal">&lt;div&gt;</highlight><highlight class="stringliteral">&quot;).append(element).html();try{return<sp/>element[0].nodeType===NODE_TYPE_TEXT?lowercase(elemHtml):elemHtml.match(/^(&lt;[^&gt;]+&gt;)/)[1].replace(/^&lt;([\w\-]+)/,function(match,nodeName){return&quot;</highlight><highlight class="normal">&lt;</highlight><highlight class="stringliteral">&quot;+lowercase(nodeName)})}catch(e){return<sp/>lowercase(elemHtml)}}function<sp/>tryDecodeURIComponent(value){try{return<sp/>decodeURIComponent(value)}catch(e){}}function<sp/>parseKeyValue(keyValue){var<sp/>key_value,key,obj={};return<sp/>forEach((keyValue||&quot;</highlight><highlight class="stringliteral">&quot;).split(&quot;</highlight><highlight class="normal">&amp;</highlight><highlight class="stringliteral">&quot;),function(keyValue){if(keyValue&amp;&amp;(key_value=keyValue.replace(/\+/g,&quot;</highlight><highlight class="normal">%20</highlight><highlight class="stringliteral">&quot;).split(&quot;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;),key=tryDecodeURIComponent(key_value[0]),isDefined(key))){var<sp/>val=isDefined(key_value[1])?tryDecodeURIComponent(key_value[1]):!0;hasOwnProperty.call(obj,key)?isArray(obj[key])?obj[key].push(val):obj[key]=[obj[key],val]:obj[key]=val}}),obj}function<sp/>toKeyValue(obj){var<sp/>parts=[];return<sp/>forEach(obj,function(value,key){isArray(value)?forEach(value,function(arrayValue){parts.push(encodeUriQuery(key,!0)+(arrayValue===!0?&quot;</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;+encodeUriQuery(arrayValue,!0)))}):parts.push(encodeUriQuery(key,!0)+(value===!0?&quot;</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;+encodeUriQuery(value,!0)))}),parts.length?parts.join(&quot;</highlight><highlight class="normal">&amp;</highlight><highlight class="stringliteral">&quot;):&quot;</highlight><highlight class="stringliteral">&quot;}function<sp/>encodeUriSegment(val){return<sp/>encodeUriQuery(val,!0).replace(/%26/gi,&quot;</highlight><highlight class="normal">&amp;</highlight><highlight class="stringliteral">&quot;).replace(/%3D/gi,&quot;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;).replace(/%2B/gi,&quot;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&quot;)}function<sp/>encodeUriQuery(val,pctEncodeSpaces){return<sp/>encodeURIComponent(val).replace(/%40/gi,&quot;</highlight><highlight class="stringliteral">@&quot;).replace(/%3A/gi,&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;).replace(/%24/g,&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;).replace(/%2C/gi,&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;).replace(/%3B/gi,&quot;</highlight><highlight class="normal">;</highlight><highlight class="stringliteral">&quot;).replace(/%20/g,pctEncodeSpaces?&quot;</highlight><highlight class="normal">%20</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&quot;)}function<sp/>getNgAttribute(element,ngAttr){var<sp/>attr,i,ii=ngAttrPrefixes.length;for(i=0;ii&gt;i;++i)if(attr=ngAttrPrefixes[i]+ngAttr,isString(attr=element.getAttribute(attr)))return<sp/>attr;return<sp/>null}function<sp/>angularInit(element,bootstrap){var<sp/>appElement,module,config={};forEach(ngAttrPrefixes,function(prefix){var<sp/>name=prefix+&quot;</highlight><highlight class="normal">app</highlight><highlight class="stringliteral">&quot;;!appElement&amp;&amp;element.hasAttribute&amp;&amp;element.hasAttribute(name)&amp;&amp;(appElement=element,module=element.getAttribute(name))}),forEach(ngAttrPrefixes,function(prefix){var<sp/>candidate,name=prefix+&quot;</highlight><highlight class="normal">app</highlight><highlight class="stringliteral">&quot;;!appElement&amp;&amp;(candidate=element.querySelector(&quot;</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&quot;+name.replace(&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">\\:</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;))&amp;&amp;(appElement=candidate,module=candidate.getAttribute(name))}),appElement&amp;&amp;(config.strictDi=null!==getNgAttribute(appElement,&quot;</highlight><highlight class="normal">strict-di</highlight><highlight class="stringliteral">&quot;),bootstrap(appElement,module?[module]:[],config))}function<sp/>bootstrap(element,modules,config){isObject(config)||(config={});var<sp/>defaultConfig={strictDi:!1};config=extend(defaultConfig,config);var<sp/>doBootstrap=function(){if(element=jqLite(element),element.injector()){var<sp/>tag=element[0]===document?&quot;</highlight><highlight class="normal">document</highlight><highlight class="stringliteral">&quot;:startingTag(element);throw<sp/>ngMinErr(&quot;</highlight><highlight class="normal">btstrpd</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">App<sp/>Already<sp/>Bootstrapped<sp/>with<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>Element<sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="stringliteral">&quot;,tag.replace(/&lt;/,&quot;</highlight><highlight class="normal">&amp;lt;</highlight><highlight class="stringliteral">&quot;).replace(/&gt;/,&quot;</highlight><highlight class="normal">&amp;gt;</highlight><highlight class="stringliteral">&quot;))}modules=modules||[],modules.unshift([&quot;</highlight><highlight class="normal">$provide</highlight><highlight class="stringliteral">&quot;,function($provide){$provide.value(&quot;</highlight><highlight class="normal">$rootElement</highlight><highlight class="stringliteral">&quot;,element)}]),config.debugInfoEnabled&amp;&amp;modules.push([&quot;</highlight><highlight class="normal">$compileProvider</highlight><highlight class="stringliteral">&quot;,function($compileProvider){$compileProvider.debugInfoEnabled(!0)}]),modules.unshift(&quot;</highlight><highlight class="normal">ng</highlight><highlight class="stringliteral">&quot;);var<sp/>injector=createInjector(modules,config.strictDi);return<sp/>injector.invoke([&quot;</highlight><highlight class="normal">$rootScope</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$rootElement</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$compile</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$injector</highlight><highlight class="stringliteral">&quot;,function(scope,element,compile,injector){scope.$apply(function(){element.data(&quot;</highlight><highlight class="normal">$injector</highlight><highlight class="stringliteral">&quot;,injector),compile(element)(scope)})}]),injector},NG_ENABLE_DEBUG_INFO=/^NG_ENABLE_DEBUG_INFO!/,NG_DEFER_BOOTSTRAP=/^NG_DEFER_BOOTSTRAP!/;return<sp/>window&amp;&amp;NG_ENABLE_DEBUG_INFO.test(window.name)&amp;&amp;(config.debugInfoEnabled=!0,window.name=window.name.replace(NG_ENABLE_DEBUG_INFO,&quot;</highlight><highlight class="stringliteral">&quot;)),window&amp;&amp;!NG_DEFER_BOOTSTRAP.test(window.name)?doBootstrap():(window.name=window.name.replace(NG_DEFER_BOOTSTRAP,&quot;</highlight><highlight class="stringliteral">&quot;),angular.resumeBootstrap=function(extraModules){return<sp/>forEach(extraModules,function(module){modules.push(module)}),doBootstrap()},void(isFunction(angular.resumeDeferredBootstrap)&amp;&amp;angular.resumeDeferredBootstrap()))}function<sp/>reloadWithDebugInfo(){window.name=&quot;</highlight><highlight class="normal">NG_ENABLE_DEBUG_INFO!</highlight><highlight class="stringliteral">&quot;+window.name,window.location.reload()}function<sp/>getTestability(rootElement){var<sp/>injector=angular.element(rootElement).injector();if(!injector)throw<sp/>ngMinErr(&quot;</highlight><highlight class="normal">test</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">no<sp/>injector<sp/>found<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>element<sp/>argument<sp/>to<sp/>getTestability</highlight><highlight class="stringliteral">&quot;);return<sp/>injector.get(&quot;</highlight><highlight class="normal">$$testability</highlight><highlight class="stringliteral">&quot;)}function<sp/>snake_case(name,separator){return<sp/>separator=separator||&quot;</highlight><highlight class="normal">_</highlight><highlight class="stringliteral">&quot;,name.replace(SNAKE_CASE_REGEXP,function(letter,pos){return(pos?separator:&quot;</highlight><highlight class="stringliteral">&quot;)+letter.toLowerCase()})}function<sp/>bindJQuery(){var<sp/>originalCleanData;if(!bindJQueryFired){var<sp/>jqName=jq();jQuery=window.jQuery,isDefined(jqName)&amp;&amp;(jQuery=null===jqName?undefined:window[jqName]),jQuery&amp;&amp;jQuery.fn.on?(jqLite=jQuery,extend(jQuery.fn,{scope:JQLitePrototype.scope,isolateScope:JQLitePrototype.isolateScope,controller:JQLitePrototype.controller,injector:JQLitePrototype.injector,inheritedData:JQLitePrototype.inheritedData}),originalCleanData=jQuery.cleanData,jQuery.cleanData=function(elems){var<sp/>events;if(skipDestroyOnNextJQueryCleanData)skipDestroyOnNextJQueryCleanData=!1;else<sp/>for(var<sp/>elem,i=0;null!=(elem=elems[i]);i++)events=jQuery._data(elem,&quot;</highlight><highlight class="normal">events</highlight><highlight class="stringliteral">&quot;),events&amp;&amp;events.$destroy&amp;&amp;jQuery(elem).triggerHandler(&quot;</highlight><highlight class="normal">$destroy</highlight><highlight class="stringliteral">&quot;);originalCleanData(elems)}):jqLite=JQLite,angular.element=jqLite,bindJQueryFired=!0}}function<sp/>assertArg(arg,name,reason){if(!arg)throw<sp/>ngMinErr(&quot;</highlight><highlight class="normal">areq</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Argument<sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal"><sp/>is<sp/>{1}</highlight><highlight class="stringliteral">&quot;,name||&quot;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;,reason||&quot;</highlight><highlight class="normal">required</highlight><highlight class="stringliteral">&quot;);return<sp/>arg}function<sp/>assertArgFn(arg,name,acceptArrayAnnotation){return<sp/>acceptArrayAnnotation&amp;&amp;isArray(arg)&amp;&amp;(arg=arg[arg.length-1]),assertArg(isFunction(arg),name,&quot;</highlight><highlight class="normal">not<sp/>a<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>got<sp/></highlight><highlight class="stringliteral">&quot;+(arg&amp;&amp;&quot;</highlight><highlight class="keywordtype">object</highlight><highlight class="stringliteral">&quot;==typeof<sp/>arg?arg.constructor.name||&quot;</highlight><highlight class="normal">Object</highlight><highlight class="stringliteral">&quot;:typeof<sp/>arg)),arg}function<sp/>assertNotHasOwnProperty(name,context){if(&quot;</highlight><highlight class="normal">hasOwnProperty</highlight><highlight class="stringliteral">&quot;===name)throw<sp/>ngMinErr(&quot;</highlight><highlight class="normal">badname</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">hasOwnProperty<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>{0}<sp/>name</highlight><highlight class="stringliteral">&quot;,context)}function<sp/>getter(obj,path,bindFnToScope){if(!path)return<sp/>obj;for(var<sp/>key,keys=path.split(&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;),lastInstance=obj,len=keys.length,i=0;len&gt;i;i++)key=keys[i],obj&amp;&amp;(obj=(lastInstance=obj)[key]);return!bindFnToScope&amp;&amp;isFunction(obj)?bind(lastInstance,obj):obj}function<sp/>getBlockNodes(nodes){var<sp/>node=nodes[0],endNode=nodes[nodes.length-1],blockNodes=[node];do{if(node=node.nextSibling,!node)break;blockNodes.push(node)}while(node!==endNode);return<sp/>jqLite(blockNodes)}function<sp/>createMap(){return<sp/>Object.create(null)}function<sp/>setupModuleLoader(window){function<sp/>ensure(obj,name,factory){return<sp/>obj[name]||(obj[name]=factory())}var<sp/>$injectorMinErr=minErr(&quot;</highlight><highlight class="normal">$injector</highlight><highlight class="stringliteral">&quot;),ngMinErr=minErr(&quot;</highlight><highlight class="normal">ng</highlight><highlight class="stringliteral">&quot;),angular=ensure(window,&quot;</highlight><highlight class="normal">angular</highlight><highlight class="stringliteral">&quot;,Object);return<sp/>angular.$$minErr=angular.$$minErr||minErr,ensure(angular,&quot;</highlight><highlight class="normal">module</highlight><highlight class="stringliteral">&quot;,function(){var<sp/>modules={};return<sp/>function(name,requires,configFn){var<sp/>assertNotHasOwnProperty=function(name,context){if(&quot;</highlight><highlight class="normal">hasOwnProperty</highlight><highlight class="stringliteral">&quot;===name)throw<sp/>ngMinErr(&quot;</highlight><highlight class="normal">badname</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">hasOwnProperty<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>{0}<sp/>name</highlight><highlight class="stringliteral">&quot;,context)};return<sp/>assertNotHasOwnProperty(name,&quot;</highlight><highlight class="normal">module</highlight><highlight class="stringliteral">&quot;),requires&amp;&amp;modules.hasOwnProperty(name)&amp;&amp;(modules[name]=null),ensure(modules,name,function(){function<sp/>invokeLater(provider,method,insertMethod,queue){return<sp/>queue||(queue=invokeQueue),function(){return<sp/>queue[insertMethod||&quot;</highlight><highlight class="normal">push</highlight><highlight class="stringliteral">&quot;]([provider,method,arguments]),moduleInstance}}if(!requires)throw<sp/>$injectorMinErr(&quot;</highlight><highlight class="normal">nomod</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Module<sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal"><sp/>is<sp/>not<sp/>available!<sp/>You<sp/>either<sp/>misspelled<sp/>the<sp/>module<sp/>name<sp/>or<sp/>forgot<sp/>to<sp/>load<sp/>it.<sp/>If<sp/>registering<sp/>a<sp/>module<sp/>ensure<sp/>that<sp/>you<sp/>specify<sp/>the<sp/>dependencies<sp/>as<sp/>the<sp/>second<sp/>argument.</highlight><highlight class="stringliteral">&quot;,name);var<sp/>invokeQueue=[],configBlocks=[],runBlocks=[],config=invokeLater(&quot;</highlight><highlight class="normal">$injector</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">invoke</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">push</highlight><highlight class="stringliteral">&quot;,configBlocks),moduleInstance={_invokeQueue:invokeQueue,_configBlocks:configBlocks,_runBlocks:runBlocks,requires:requires,name:name,provider:invokeLater(&quot;</highlight><highlight class="normal">$provide</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">provider</highlight><highlight class="stringliteral">&quot;),factory:invokeLater(&quot;</highlight><highlight class="normal">$provide</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">factory</highlight><highlight class="stringliteral">&quot;),service:invokeLater(&quot;</highlight><highlight class="normal">$provide</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">service</highlight><highlight class="stringliteral">&quot;),value:invokeLater(&quot;</highlight><highlight class="normal">$provide</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">value</highlight><highlight class="stringliteral">&quot;),constant:invokeLater(&quot;</highlight><highlight class="normal">$provide</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">constant</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">unshift</highlight><highlight class="stringliteral">&quot;),decorator:invokeLater(&quot;</highlight><highlight class="normal">$provide</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">decorator</highlight><highlight class="stringliteral">&quot;),animation:invokeLater(&quot;</highlight><highlight class="normal">$animateProvider</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="keyword">register</highlight><highlight class="stringliteral">&quot;),filter:invokeLater(&quot;</highlight><highlight class="normal">$filterProvider</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="keyword">register</highlight><highlight class="stringliteral">&quot;),controller:invokeLater(&quot;</highlight><highlight class="normal">$controllerProvider</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="keyword">register</highlight><highlight class="stringliteral">&quot;),directive:invokeLater(&quot;</highlight><highlight class="normal">$compileProvider</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">directive</highlight><highlight class="stringliteral">&quot;),config:config,run:function(block){return<sp/>runBlocks.push(block),this}};return<sp/>configFn&amp;&amp;config(configFn),moduleInstance})}})}function<sp/>serializeObject(obj){var<sp/>seen=[];return<sp/>JSON.stringify(obj,function(key,val){if(val=toJsonReplacer(key,val),isObject(val)){if(seen.indexOf(val)&gt;=0)return&quot;</highlight><highlight class="normal">&lt;&lt;already<sp/>seen&gt;&gt;</highlight><highlight class="stringliteral">&quot;;seen.push(val)}return<sp/>val})}function<sp/>toDebugString(obj){return&quot;</highlight><highlight class="keyword">function</highlight><highlight class="stringliteral">&quot;==typeof<sp/>obj?obj.toString().replace(/<sp/>\{[\s\S]*$/,&quot;</highlight><highlight class="stringliteral">&quot;):&quot;</highlight><highlight class="normal">undefined</highlight><highlight class="stringliteral">&quot;==typeof<sp/>obj?&quot;</highlight><highlight class="normal">undefined</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="keywordtype">string</highlight><highlight class="stringliteral">&quot;!=typeof<sp/>obj?serializeObject(obj):obj}function<sp/>publishExternalAPI(angular){extend(angular,{bootstrap:bootstrap,copy:copy,extend:extend,merge:merge,equals:equals,element:jqLite,forEach:forEach,injector:createInjector,noop:noop,bind:bind,toJson:toJson,fromJson:fromJson,identity:identity,isUndefined:isUndefined,isDefined:isDefined,isString:isString,isFunction:isFunction,isObject:isObject,isNumber:isNumber,isElement:isElement,isArray:isArray,version:version,isDate:isDate,lowercase:lowercase,uppercase:uppercase,callbacks:{counter:0},getTestability:getTestability,$$minErr:minErr,$$csp:csp,reloadWithDebugInfo:reloadWithDebugInfo}),angularModule=setupModuleLoader(window);try{angularModule(&quot;</highlight><highlight class="normal">ngLocale</highlight><highlight class="stringliteral">&quot;)}catch(e){angularModule(&quot;</highlight><highlight class="normal">ngLocale</highlight><highlight class="stringliteral">&quot;,[]).provider(&quot;</highlight><highlight class="normal">$locale</highlight><highlight class="stringliteral">&quot;,$LocaleProvider)}angularModule(&quot;</highlight><highlight class="normal">ng</highlight><highlight class="stringliteral">&quot;,[&quot;</highlight><highlight class="normal">ngLocale</highlight><highlight class="stringliteral">&quot;],[&quot;</highlight><highlight class="normal">$provide</highlight><highlight class="stringliteral">&quot;,function($provide){$provide.provider({$$sanitizeUri:$$SanitizeUriProvider}),$provide.provider(&quot;</highlight><highlight class="normal">$compile</highlight><highlight class="stringliteral">&quot;,$CompileProvider).directive({a:htmlAnchorDirective,input:inputDirective,textarea:inputDirective,form:formDirective,script:scriptDirective,select:selectDirective,style:styleDirective,option:optionDirective,ngBind:ngBindDirective,ngBindHtml:ngBindHtmlDirective,ngBindTemplate:ngBindTemplateDirective,ngClass:ngClassDirective,ngClassEven:ngClassEvenDirective,ngClassOdd:ngClassOddDirective,ngCloak:ngCloakDirective,ngController:ngControllerDirective,ngForm:ngFormDirective,ngHide:ngHideDirective,ngIf:ngIfDirective,ngInclude:ngIncludeDirective,ngInit:ngInitDirective,ngNonBindable:ngNonBindableDirective,ngPluralize:ngPluralizeDirective,ngRepeat:ngRepeatDirective,ngShow:ngShowDirective,ngStyle:ngStyleDirective,ngSwitch:ngSwitchDirective,ngSwitchWhen:ngSwitchWhenDirective,ngSwitchDefault:ngSwitchDefaultDirective,ngOptions:ngOptionsDirective,ngTransclude:ngTranscludeDirective,ngModel:ngModelDirective,ngList:ngListDirective,ngChange:ngChangeDirective,pattern:patternDirective,ngPattern:patternDirective,required:requiredDirective,ngRequired:requiredDirective,minlength:minlengthDirective,ngMinlength:minlengthDirective,maxlength:maxlengthDirective,ngMaxlength:maxlengthDirective,ngValue:ngValueDirective,ngModelOptions:ngModelOptionsDirective}).directive({ngInclude:ngIncludeFillContentDirective}).directive(ngAttributeAliasDirectives).directive(ngEventDirectives),$provide.provider({$anchorScroll:$AnchorScrollProvider,$animate:$AnimateProvider,$$animateQueue:$$CoreAnimateQueueProvider,$$AnimateRunner:$$CoreAnimateRunnerProvider,$browser:$BrowserProvider,$cacheFactory:$CacheFactoryProvider,$controller:$ControllerProvider,$document:$DocumentProvider,$exceptionHandler:$ExceptionHandlerProvider,$filter:$FilterProvider,$interpolate:$InterpolateProvider,$interval:$IntervalProvider,$http:$HttpProvider,$httpParamSerializer:$HttpParamSerializerProvider,$httpParamSerializerJQLike:$HttpParamSerializerJQLikeProvider,$httpBackend:$HttpBackendProvider,$location:$LocationProvider,$log:$LogProvider,$parse:$ParseProvider,$rootScope:$RootScopeProvider,$q:$QProvider,$$q:$$QProvider,$sce:$SceProvider,$sceDelegate:$SceDelegateProvider,$sniffer:$SnifferProvider,$templateCache:$TemplateCacheProvider,$templateRequest:$TemplateRequestProvider,$$testability:$$TestabilityProvider,$timeout:$TimeoutProvider,$window:$WindowProvider,$$rAF:$$RAFProvider,$$asyncCallback:$$AsyncCallbackProvider,$$jqLite:$$jqLiteProvider,$$HashMap:$$HashMapProvider,$$cookieReader:$$CookieReaderProvider})}])}function<sp/>jqNextId(){return++jqId}function<sp/>camelCase(name){return<sp/>name.replace(SPECIAL_CHARS_REGEXP,function(_,separator,letter,offset){return<sp/>offset?letter.toUpperCase():letter}).replace(MOZ_HACK_REGEXP,&quot;</highlight><highlight class="normal">Moz$1</highlight><highlight class="stringliteral">&quot;)}function<sp/>jqLiteIsTextNode(html){return!HTML_REGEXP.test(html)}function<sp/>jqLiteAcceptsData(node){var<sp/>nodeType=node.nodeType;return<sp/>nodeType===NODE_TYPE_ELEMENT||!nodeType||nodeType===NODE_TYPE_DOCUMENT}function<sp/>jqLiteBuildFragment(html,context){var<sp/>tmp,tag,wrap,i,fragment=context.createDocumentFragment(),nodes=[];if(jqLiteIsTextNode(html))nodes.push(context.createTextNode(html));else{for(tmp=tmp||fragment.appendChild(context.createElement(&quot;</highlight><highlight class="normal">div</highlight><highlight class="stringliteral">&quot;)),tag=(TAG_NAME_REGEXP.exec(html)||[&quot;</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="stringliteral">&quot;])[1].toLowerCase(),wrap=wrapMap[tag]||wrapMap._default,tmp.innerHTML=wrap[1]+html.replace(XHTML_TAG_REGEXP,&quot;</highlight><highlight class="normal">&lt;$1&gt;&lt;/$2&gt;</highlight><highlight class="stringliteral">&quot;)+wrap[2],i=wrap[0];i--;)tmp=tmp.lastChild;nodes=concat(nodes,tmp.childNodes),tmp=fragment.firstChild,tmp.textContent=&quot;</highlight><highlight class="stringliteral">&quot;}return<sp/>fragment.textContent=&quot;</highlight><highlight class="stringliteral">&quot;,fragment.innerHTML=&quot;</highlight><highlight class="stringliteral">&quot;,forEach(nodes,function(node){fragment.appendChild(node)}),fragment}function<sp/>jqLiteParseHTML(html,context){context=context||document;var<sp/>parsed;return(parsed=SINGLE_TAG_REGEXP.exec(html))?[context.createElement(parsed[1])]:(parsed=jqLiteBuildFragment(html,context))?parsed.childNodes:[]}function<sp/>JQLite(element){if(element<sp/>instanceof<sp/>JQLite)return<sp/>element;var<sp/>argIsString;if(isString(element)&amp;&amp;(element=trim(element),argIsString=!0),!(this<sp/>instanceof<sp/>JQLite)){if(argIsString&amp;&amp;&quot;</highlight><highlight class="normal">&lt;</highlight><highlight class="stringliteral">&quot;!=element.charAt(0))throw<sp/>jqLiteMinErr(&quot;</highlight><highlight class="normal">nosel</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Looking<sp/>up<sp/>elements<sp/>via<sp/>selectors<sp/>is<sp/>not<sp/>supported<sp/>by<sp/>jqLite!<sp/>See:<sp/>http:</highlight><highlight class="comment">//docs.angularjs.org/api/angular.element&quot;);return<sp/>new<sp/>JQLite(element)}argIsString?jqLiteAddNodes(this,jqLiteParseHTML(element)):jqLiteAddNodes(this,element)}function<sp/>jqLiteClone(element){return<sp/>element.cloneNode(!0)}function<sp/>jqLiteDealoc(element,onlyDescendants){if(onlyDescendants||jqLiteRemoveData(element),element.querySelectorAll)for(var<sp/>descendants=element.querySelectorAll(&quot;*&quot;),i=0,l=descendants.length;l&gt;i;i++)jqLiteRemoveData(descendants[i])}function<sp/>jqLiteOff(element,type,fn,unsupported){if(isDefined(unsupported))throw<sp/>jqLiteMinErr(&quot;offargs&quot;,&quot;jqLite#off()<sp/>does<sp/>not<sp/>support<sp/>the<sp/>`selector`<sp/>argument&quot;);var<sp/>expandoStore=jqLiteExpandoStore(element),events=expandoStore&amp;&amp;expandoStore.events,handle=expandoStore&amp;&amp;expandoStore.handle;if(handle)if(type)forEach(type.split(&quot;<sp/>&quot;),function(type){if(isDefined(fn)){var<sp/>listenerFns=events[type];if(arrayRemove(listenerFns||[],fn),listenerFns&amp;&amp;listenerFns.length&gt;0)return}removeEventListenerFn(element,type,handle),delete<sp/>events[type]});else<sp/>for(type<sp/>in<sp/>events)&quot;$destroy&quot;!==type&amp;&amp;removeEventListenerFn(element,type,handle),delete<sp/>events[type]}function<sp/>jqLiteRemoveData(element,name){var<sp/>expandoId=element.ng339,expandoStore=expandoId&amp;&amp;jqCache[expandoId];if(expandoStore){if(name)return<sp/>void<sp/>delete<sp/>expandoStore.data[name];expandoStore.handle&amp;&amp;(expandoStore.events.$destroy&amp;&amp;expandoStore.handle({},&quot;$destroy&quot;),jqLiteOff(element)),delete<sp/>jqCache[expandoId],element.ng339=undefined}}function<sp/>jqLiteExpandoStore(element,createIfNecessary){var<sp/>expandoId=element.ng339,expandoStore=expandoId&amp;&amp;jqCache[expandoId];return<sp/>createIfNecessary&amp;&amp;!expandoStore&amp;&amp;(element.ng339=expandoId=jqNextId(),expandoStore=jqCache[expandoId]={events:{},data:{},handle:undefined}),expandoStore}function<sp/>jqLiteData(element,key,value){if(jqLiteAcceptsData(element)){var<sp/>isSimpleSetter=isDefined(value),isSimpleGetter=!isSimpleSetter&amp;&amp;key&amp;&amp;!isObject(key),massGetter=!key,expandoStore=jqLiteExpandoStore(element,!isSimpleGetter),data=expandoStore&amp;&amp;expandoStore.data;if(isSimpleSetter)data[key]=value;else{if(massGetter)return<sp/>data;if(isSimpleGetter)return<sp/>data&amp;&amp;data[key];extend(data,key)}}}function<sp/>jqLiteHasClass(element,selector){return<sp/>element.getAttribute?(&quot;<sp/>&quot;+(element.getAttribute(&quot;class&quot;)||&quot;&quot;)+&quot;<sp/>&quot;).replace(/[\n\t]/g,&quot;<sp/>&quot;).indexOf(&quot;<sp/>&quot;+selector+&quot;<sp/>&quot;)&gt;-1:!1}function<sp/>jqLiteRemoveClass(element,cssClasses){cssClasses&amp;&amp;element.setAttribute&amp;&amp;forEach(cssClasses.split(&quot;<sp/>&quot;),function(cssClass){element.setAttribute(&quot;class&quot;,trim((&quot;<sp/>&quot;+(element.getAttribute(&quot;class&quot;)||&quot;&quot;)+&quot;<sp/>&quot;).replace(/[\n\t]/g,&quot;<sp/>&quot;).replace(&quot;<sp/>&quot;+trim(cssClass)+&quot;<sp/>&quot;,&quot;<sp/>&quot;)))})}function<sp/>jqLiteAddClass(element,cssClasses){if(cssClasses&amp;&amp;element.setAttribute){var<sp/>existingClasses=(&quot;<sp/>&quot;+(element.getAttribute(&quot;class&quot;)||&quot;&quot;)+&quot;<sp/>&quot;).replace(/[\n\t]/g,&quot;<sp/>&quot;);forEach(cssClasses.split(&quot;<sp/>&quot;),function(cssClass){cssClass=trim(cssClass),-1===existingClasses.indexOf(&quot;<sp/>&quot;+cssClass+&quot;<sp/>&quot;)&amp;&amp;(existingClasses+=cssClass+&quot;<sp/>&quot;)}),element.setAttribute(&quot;class&quot;,trim(existingClasses))}}function<sp/>jqLiteAddNodes(root,elements){if(elements)if(elements.nodeType)root[root.length++]=elements;else{var<sp/>length=elements.length;if(&quot;number&quot;==typeof<sp/>length&amp;&amp;elements.window!==elements){if(length)for(var<sp/>i=0;length&gt;i;i++)root[root.length++]=elements[i]}else<sp/>root[root.length++]=elements}}function<sp/>jqLiteController(element,name){return<sp/>jqLiteInheritedData(element,&quot;$&quot;+(name||&quot;ngController&quot;)+&quot;Controller&quot;)}function<sp/>jqLiteInheritedData(element,name,value){element.nodeType==NODE_TYPE_DOCUMENT&amp;&amp;(element=element.documentElement);for(var<sp/>names=isArray(name)?name:[name];element;){for(var<sp/>i=0,ii=names.length;ii&gt;i;i++)if((value=jqLite.data(element,names[i]))!==undefined)return<sp/>value;element=element.parentNode||element.nodeType===NODE_TYPE_DOCUMENT_FRAGMENT&amp;&amp;element.host}}function<sp/>jqLiteEmpty(element){for(jqLiteDealoc(element,!0);element.firstChild;)element.removeChild(element.firstChild)}function<sp/>jqLiteRemove(element,keepData){keepData||jqLiteDealoc(element);var<sp/>parent=element.parentNode;parent&amp;&amp;parent.removeChild(element)}function<sp/>jqLiteDocumentLoaded(action,win){win=win||window,&quot;complete&quot;===win.document.readyState?win.setTimeout(action):jqLite(win).on(&quot;load&quot;,action)}function<sp/>getBooleanAttrName(element,name){var<sp/>booleanAttr=BOOLEAN_ATTR[name.toLowerCase()];return<sp/>booleanAttr&amp;&amp;BOOLEAN_ELEMENTS[nodeName_(element)]&amp;&amp;booleanAttr}function<sp/>getAliasedAttrName(element,name){var<sp/>nodeName=element.nodeName;return(&quot;INPUT&quot;===nodeName||&quot;TEXTAREA&quot;===nodeName)&amp;&amp;ALIASED_ATTR[name]}function<sp/>createEventHandler(element,events){var<sp/>eventHandler=function(event,type){event.isDefaultPrevented=function(){return<sp/>event.defaultPrevented};var<sp/>eventFns=events[type||event.type],eventFnsLength=eventFns?eventFns.length:0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eventFnsLength){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isUndefined(event.immediatePropagationStopped)){var<sp/>originalStopImmediatePropagation=</highlight><highlight class="keyword">event</highlight><highlight class="normal">.stopImmediatePropagation;</highlight><highlight class="keyword">event</highlight><highlight class="normal">.stopImmediatePropagation=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keyword">event</highlight><highlight class="normal">.immediatePropagationStopped=!0,</highlight><highlight class="keyword">event</highlight><highlight class="normal">.stopPropagation&amp;&amp;</highlight><highlight class="keyword">event</highlight><highlight class="normal">.stopPropagation(),originalStopImmediatePropagation&amp;&amp;originalStopImmediatePropagation.call(event)}}</highlight><highlight class="keyword">event</highlight><highlight class="normal">.isImmediatePropagationStopped=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.immediatePropagationStopped===!0},eventFnsLength&gt;1&amp;&amp;(eventFns=shallowCopy(eventFns));</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0;eventFnsLength&gt;i;i++)event.isImmediatePropagationStopped()||eventFns[i].call(element,event)}};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eventHandler.elem=element,eventHandler}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$$jqLiteProvider(){this.$get=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>extend(JQLite,{hasClass:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(node,classes){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.attr&amp;&amp;(node=node[0]),jqLiteHasClass(node,classes)},addClass:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(node,classes){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.attr&amp;&amp;(node=node[0]),jqLiteAddClass(node,classes)},removeClass:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(node,classes){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.attr&amp;&amp;(node=node[0]),jqLiteRemoveClass(node,classes)}})}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>hashKey(obj,nextUidFn){var<sp/>key=obj&amp;&amp;obj.$$hashKey;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(key)</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">==typeof<sp/>key&amp;&amp;(key=obj.$$hashKey()),key;var<sp/>objType=typeof<sp/>obj;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key=</highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">==objType||</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">==objType&amp;&amp;null!==obj?obj.$$hashKey=objType+</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">+(nextUidFn||nextUid)():objType+</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">+obj}function<sp/>HashMap(array,isolatedUid){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isolatedUid){var<sp/>uid=0;this.nextUid=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">++uid}}forEach(array,this.put,</highlight><highlight class="keyword">this</highlight><highlight class="normal">)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>anonFn(fn){var<sp/>fnText=fn.toString().replace(STRIP_COMMENTS,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),args=fnText.match(FN_ARGS);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>args?</highlight><highlight class="stringliteral">&quot;function(&quot;</highlight><highlight class="normal">+(args[1]||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).replace(/[\s\r\n]+/,</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;fn&quot;</highlight><highlight class="normal">}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>annotate(fn,strictDi,name){var<sp/>$inject,fnText,argDecl,last;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">==typeof<sp/>fn){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!($inject=fn.$inject)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">($inject=[],fn.length){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strictDi)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>isString(name)&amp;&amp;name||(name=fn.name||anonFn(fn)),$injectorMinErr(</highlight><highlight class="stringliteral">&quot;strictdi&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;{0}<sp/>is<sp/>not<sp/>using<sp/>explicit<sp/>annotation<sp/>and<sp/>cannot<sp/>be<sp/>invoked<sp/>in<sp/>strict<sp/>mode&quot;</highlight><highlight class="normal">,name);fnText=fn.toString().replace(STRIP_COMMENTS,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),argDecl=fnText.match(FN_ARGS),forEach(argDecl[1].split(FN_ARG_SPLIT),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(arg){arg.replace(FN_ARG,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(all,underscore,name){$inject.push(name)})})}fn.$inject=$inject}}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>isArray(fn)?(last=fn.length-1,assertArgFn(fn[last],</highlight><highlight class="stringliteral">&quot;fn&quot;</highlight><highlight class="normal">),$inject=fn.slice(0,last)):assertArgFn(fn,</highlight><highlight class="stringliteral">&quot;fn&quot;</highlight><highlight class="normal">,!0);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$inject}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createInjector(modulesToLoad,strictDi){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>supportObject(delegate){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(key,value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isObject(key)?</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forEach(key,reverseParams(delegate)):delegate(key,value)}}function<sp/>provider(name,provider_){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(assertNotHasOwnProperty(name,</highlight><highlight class="stringliteral">&quot;service&quot;</highlight><highlight class="normal">),(isFunction(provider_)||isArray(provider_))&amp;&amp;(provider_=providerInjector.instantiate(provider_)),!provider_.$get)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$injectorMinErr(</highlight><highlight class="stringliteral">&quot;pget&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Provider<sp/>&apos;{0}&apos;<sp/>must<sp/>define<sp/>$get<sp/>factory<sp/>method.&quot;</highlight><highlight class="normal">,name);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>providerCache[name+providerSuffix]=provider_}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>enforceReturnValue(name,factory){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>result=instanceInjector.invoke(factory,</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isUndefined(result))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$injectorMinErr(</highlight><highlight class="stringliteral">&quot;undef&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Provider<sp/>&apos;{0}&apos;<sp/>must<sp/>return<sp/>a<sp/>value<sp/>from<sp/>$get<sp/>factory<sp/>method.&quot;</highlight><highlight class="normal">,name);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>factory(name,factoryFn,enforce){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>provider(name,{$get:enforce!==!1?enforceReturnValue(name,factoryFn):factoryFn})}function<sp/>service(name,constructor){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>factory(name,[</highlight><highlight class="stringliteral">&quot;$injector&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($injector){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$injector.instantiate(constructor)}])}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>value(name,val){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>factory(name,valueFn(val),!1)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>constant(name,value){assertNotHasOwnProperty(name,</highlight><highlight class="stringliteral">&quot;constant&quot;</highlight><highlight class="normal">),providerCache[name]=value,instanceCache[name]=value}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>decorator(serviceName,decorFn){var<sp/>origProvider=providerInjector.get(serviceName+providerSuffix),orig$get=origProvider.$get;origProvider.$get=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>origInstance=instanceInjector.invoke(orig$get,origProvider);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instanceInjector.invoke(decorFn,null,{$delegate:origInstance})}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>loadModules(modulesToLoad){var<sp/>moduleFn,runBlocks=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(modulesToLoad,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(module){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>runInvokeQueue(queue){var<sp/>i,ii;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,ii=queue.length;ii&gt;i;i++){var<sp/>invokeArgs=queue[i],provider=providerInjector.get(invokeArgs[0]);provider[invokeArgs[1]].apply(provider,invokeArgs[2])}}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!loadedModules.get(module)){loadedModules.put(module,!0);</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{isString(module)?(moduleFn=angularModule(module),runBlocks=runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks),runInvokeQueue(moduleFn._invokeQueue),runInvokeQueue(moduleFn._configBlocks)):isFunction(module)?runBlocks.push(providerInjector.invoke(module)):isArray(module)?runBlocks.push(providerInjector.invoke(module)):assertArgFn(module,</highlight><highlight class="stringliteral">&quot;module&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>isArray(module)&amp;&amp;(module=module[module.length-1]),e.message&amp;&amp;e.stack&amp;&amp;-1==e.stack.indexOf(e.message)&amp;&amp;(e=e.message+</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+e.stack),$injectorMinErr(</highlight><highlight class="stringliteral">&quot;modulerr&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>instantiate<sp/>module<sp/>{0}<sp/>due<sp/>to:\n{1}&quot;</highlight><highlight class="normal">,module,e.stack||e.message||e)}}}),runBlocks}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createInternalInjector(cache,factory){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getService(serviceName,caller){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cache.hasOwnProperty(serviceName)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cache[serviceName]===INSTANTIATING)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$injectorMinErr(</highlight><highlight class="stringliteral">&quot;cdep&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Circular<sp/>dependency<sp/>found:<sp/>{0}&quot;</highlight><highlight class="normal">,serviceName+</highlight><highlight class="stringliteral">&quot;<sp/>&lt;-<sp/>&quot;</highlight><highlight class="normal">+path.join(</highlight><highlight class="stringliteral">&quot;<sp/>&lt;-<sp/>&quot;</highlight><highlight class="normal">));</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cache[serviceName]}</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path.unshift(serviceName),cache[serviceName]=INSTANTIATING,cache[serviceName]=factory(serviceName,caller)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(err){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>cache[serviceName]===INSTANTIATING&amp;&amp;</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cache[serviceName],err}</highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">{path.shift()}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>invoke(fn,</highlight><highlight class="keyword">self</highlight><highlight class="normal">,locals,serviceName){</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">==typeof<sp/>locals&amp;&amp;(serviceName=locals,locals=null);var<sp/>length,i,key,args=[],$inject=createInjector.$$annotate(fn,strictDi,serviceName);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,length=$inject.length;length&gt;i;i++){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(key=$inject[i],</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">!=typeof<sp/>key)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$injectorMinErr(</highlight><highlight class="stringliteral">&quot;itkn&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Incorrect<sp/>injection<sp/>token!<sp/>Expected<sp/>service<sp/>name<sp/>as<sp/>string,<sp/>got<sp/>{0}&quot;</highlight><highlight class="normal">,key);args.push(locals&amp;&amp;locals.hasOwnProperty(key)?locals[key]:getService(key,serviceName))}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isArray(fn)&amp;&amp;(fn=fn[length]),fn.apply(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,args)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>instantiate(Type,locals,serviceName){var<sp/>instance=Object.create((isArray(Type)?Type[Type.length-1]:Type).prototype||null),returnedValue=invoke(Type,instance,locals,serviceName);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isObject(returnedValue)||isFunction(returnedValue)?returnedValue:instance}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{invoke:invoke,instantiate:instantiate,</highlight><highlight class="keyword">get</highlight><highlight class="normal">:getService,annotate:createInjector.$$annotate,has:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(name){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>providerCache.hasOwnProperty(name+providerSuffix)||cache.hasOwnProperty(name)}}}strictDi=strictDi===!0;var<sp/>INSTANTIATING={},providerSuffix=</highlight><highlight class="stringliteral">&quot;Provider&quot;</highlight><highlight class="normal">,path=[],loadedModules=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HashMap([],!0),providerCache={$provide:{provider:supportObject(provider),factory:supportObject(factory),service:supportObject(service),value:supportObject(value),constant:supportObject(constant),decorator:decorator}},providerInjector=providerCache.$injector=createInternalInjector(providerCache,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(serviceName,caller){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>angular.isString(caller)&amp;&amp;path.push(caller),$injectorMinErr(</highlight><highlight class="stringliteral">&quot;unpr&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unknown<sp/>provider:<sp/>{0}&quot;</highlight><highlight class="normal">,path.join(</highlight><highlight class="stringliteral">&quot;<sp/>&lt;-<sp/>&quot;</highlight><highlight class="normal">))}),instanceCache={},instanceInjector=instanceCache.$injector=createInternalInjector(instanceCache,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(serviceName,caller){var<sp/>provider=providerInjector.get(serviceName+providerSuffix,caller);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instanceInjector.invoke(provider.$get,provider,undefined,serviceName)});</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(loadModules(modulesToLoad),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn){instanceInjector.invoke(fn||noop)}),instanceInjector}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$AnchorScrollProvider(){var<sp/>autoScrollingEnabled=!0;this.disableAutoScrolling=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){autoScrollingEnabled=!1},this.$get=[</highlight><highlight class="stringliteral">&quot;$window&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$location&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$rootScope&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($window,$location,$rootScope){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getFirstAnchor(list){var<sp/>result=null;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Array.prototype.some.call(list,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element){</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">===nodeName_(element)?(result=element,!0):</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0}),result}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getYOffset(){var<sp/>offset=scroll.yOffset;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isFunction(offset))offset=offset();</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isElement(offset)){var<sp/>elem=offset[0],style=$window.getComputedStyle(elem);offset=</highlight><highlight class="stringliteral">&quot;fixed&quot;</highlight><highlight class="normal">!==style.position?0:elem.getBoundingClientRect().bottom}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>isNumber(offset)||(offset=0);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offset}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>scrollTo(elem){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elem){elem.scrollIntoView();var<sp/>offset=getYOffset();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(offset){var<sp/>elemTop=elem.getBoundingClientRect().top;$window.scrollBy(0,elemTop-offset)}}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>$window.scrollTo(0,0)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>scroll(hash){hash=isString(hash)?hash:$location.hash();var<sp/>elm;hash?(elm=document.getElementById(hash))?scrollTo(elm):(elm=getFirstAnchor(document.getElementsByName(hash)))?scrollTo(elm):</highlight><highlight class="stringliteral">&quot;top&quot;</highlight><highlight class="normal">===hash&amp;&amp;scrollTo(null):scrollTo(null)}var<sp/>document=$window.document;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>autoScrollingEnabled&amp;&amp;$rootScope.$watch(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$location.hash()},</highlight><highlight class="keyword">function</highlight><highlight class="normal">(newVal,oldVal){(newVal!==oldVal||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">!==newVal)&amp;&amp;jqLiteDocumentLoaded(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){$rootScope.$evalAsync(scroll)})}),scroll}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>mergeClasses(a,b){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a||b?a?b?(isArray(a)&amp;&amp;(a=a.join(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)),isArray(b)&amp;&amp;(b=b.join(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)),a+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+b):a:b:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">}function<sp/>extractElementNode(element){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0;i&lt;element.length;i++){var<sp/>elm=element[i];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elm.nodeType===ELEMENT_NODE)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elm}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>splitClasses(classes){isString(classes)&amp;&amp;(classes=classes.split(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));var<sp/>obj=createMap();</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(classes,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(klass){klass.length&amp;&amp;(obj[klass]=!0)}),obj}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>prepareAnimateOptions(options){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isObject(options)?options:{}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$$AsyncCallbackProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$$rAF&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$timeout&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($$rAF,$timeout){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$$rAF.supported?</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$$rAF(fn)}:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$timeout(fn,0,!1)}}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>Browser(window,document,$log,$sniffer){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>completeOutstandingRequest(fn){</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{fn.apply(null,sliceArgs(arguments,1))}</highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(outstandingRequestCount--,0===outstandingRequestCount)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;outstandingRequestCallbacks.length;)</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{outstandingRequestCallbacks.pop()()}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){$log.error(e)}}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getHash(url){var<sp/>index=url.indexOf(</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">-1===index?</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:url.substr(index+1)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>cacheStateAndFireUrlChange(){cacheState(),fireUrlChange()}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getCurrentState(){</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>history.state}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>cacheState(){cachedState=getCurrentState(),cachedState=isUndefined(cachedState)?null:cachedState,equals(cachedState,lastCachedState)&amp;&amp;(cachedState=lastCachedState),lastCachedState=cachedState}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>fireUrlChange(){(lastBrowserUrl!==</highlight><highlight class="keyword">self</highlight><highlight class="normal">.url()||lastHistoryState!==cachedState)&amp;&amp;(lastBrowserUrl=</highlight><highlight class="keyword">self</highlight><highlight class="normal">.url(),lastHistoryState=cachedState,forEach(urlChangeListeners,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(listener){listener(</highlight><highlight class="keyword">self</highlight><highlight class="normal">.url(),cachedState)}))}var<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,location=(document[0],window.location),history=window.history,setTimeout=window.setTimeout,clearTimeout=window.clearTimeout,pendingDeferIds={};</highlight><highlight class="keyword">self</highlight><highlight class="normal">.isMock=!1;var<sp/>outstandingRequestCount=0,outstandingRequestCallbacks=[];</highlight><highlight class="keyword">self</highlight><highlight class="normal">.$$completeOutstandingRequest=completeOutstandingRequest,</highlight><highlight class="keyword">self</highlight><highlight class="normal">.$$incOutstandingRequestCount=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){outstandingRequestCount++},</highlight><highlight class="keyword">self</highlight><highlight class="normal">.notifyWhenNoOutstandingRequests=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(callback){0===outstandingRequestCount?callback():outstandingRequestCallbacks.push(callback)};var<sp/>cachedState,lastHistoryState,lastBrowserUrl=location.href,baseElement=document.find(</highlight><highlight class="stringliteral">&quot;base&quot;</highlight><highlight class="normal">),reloadLocation=null;cacheState(),lastHistoryState=cachedState,</highlight><highlight class="keyword">self</highlight><highlight class="normal">.url=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(url,replace,state){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isUndefined(state)&amp;&amp;(state=null),location!==window.location&amp;&amp;(location=window.location),history!==window.history&amp;&amp;(history=window.history),url){var<sp/>sameState=lastHistoryState===state;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lastBrowserUrl===url&amp;&amp;(!$sniffer.history||sameState))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;var<sp/>sameBase=lastBrowserUrl&amp;&amp;stripHash(lastBrowserUrl)===stripHash(url);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastBrowserUrl=url,lastHistoryState=state,!$sniffer.history||sameBase&amp;&amp;sameState?(sameBase||(reloadLocation=url),replace?location.replace(url):sameBase?location.hash=getHash(url):location.href=url):(history[replace?</highlight><highlight class="stringliteral">&quot;replaceState&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;pushState&quot;</highlight><highlight class="normal">](state,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,url),cacheState(),lastHistoryState=cachedState),self}return<sp/>reloadLocation||location.href.replace(/%27/g,</highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">)},self.state=function(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cachedState};var<sp/>urlChangeListeners=[],urlChangeInit=!1,lastCachedState=null;</highlight><highlight class="keyword">self</highlight><highlight class="normal">.onUrlChange=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(callback){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>urlChangeInit||($sniffer.history&amp;&amp;jqLite(window).on(</highlight><highlight class="stringliteral">&quot;popstate&quot;</highlight><highlight class="normal">,cacheStateAndFireUrlChange),jqLite(window).on(</highlight><highlight class="stringliteral">&quot;hashchange&quot;</highlight><highlight class="normal">,cacheStateAndFireUrlChange),urlChangeInit=!0),urlChangeListeners.push(callback),callback},</highlight><highlight class="keyword">self</highlight><highlight class="normal">.$$applicationDestroyed=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){jqLite(window).off(</highlight><highlight class="stringliteral">&quot;hashchange<sp/>popstate&quot;</highlight><highlight class="normal">,cacheStateAndFireUrlChange)},</highlight><highlight class="keyword">self</highlight><highlight class="normal">.$$checkUrlChange=fireUrlChange,</highlight><highlight class="keyword">self</highlight><highlight class="normal">.baseHref=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>href=baseElement.attr(</highlight><highlight class="stringliteral">&quot;href&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>href?href.replace(/^(https?\:)?\/\/[^\/]*/,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">):</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight><highlight class="keyword">self</highlight><highlight class="normal">.defer=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn,delay){var<sp/>timeoutId;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outstandingRequestCount++,timeoutId=setTimeout(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pendingDeferIds[timeoutId],completeOutstandingRequest(fn)},delay||0),pendingDeferIds[timeoutId]=!0,timeoutId},</highlight><highlight class="keyword">self</highlight><highlight class="normal">.defer.cancel=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(deferId){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pendingDeferIds[deferId]?(</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pendingDeferIds[deferId],clearTimeout(deferId),completeOutstandingRequest(noop),!0):!1}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$BrowserProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$window&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$log&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$sniffer&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$document&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($window,$log,$sniffer,$document){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Browser($window,$document,$log,$sniffer)}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$CacheFactoryProvider(){this.$get=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>cacheFactory(cacheId,options){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>refresh(entry){entry!=freshEnd&amp;&amp;(staleEnd?staleEnd==entry&amp;&amp;(staleEnd=entry.n):staleEnd=entry,link(entry.n,entry.p),link(entry,freshEnd),freshEnd=entry,freshEnd.n=null)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>link(nextEntry,prevEntry){nextEntry!=prevEntry&amp;&amp;(nextEntry&amp;&amp;(nextEntry.p=prevEntry),prevEntry&amp;&amp;(prevEntry.n=nextEntry))}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cacheId<sp/>in<sp/>caches)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>minErr(</highlight><highlight class="stringliteral">&quot;$cacheFactory&quot;</highlight><highlight class="normal">)(</highlight><highlight class="stringliteral">&quot;iid&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;CacheId<sp/>&apos;{0}&apos;<sp/>is<sp/>already<sp/>taken!&quot;</highlight><highlight class="normal">,cacheId);var<sp/>size=0,stats=extend({},options,{</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">:cacheId}),data={},capacity=options&amp;&amp;options.capacity||Number.MAX_VALUE,lruHash={},freshEnd=null,staleEnd=null;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>caches[cacheId]={put:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(key,value){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isUndefined(value)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(capacity&lt;Number.MAX_VALUE){var<sp/>lruEntry=lruHash[key]||(lruHash[key]={key:key});refresh(lruEntry)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key<sp/>in<sp/>data||size++,data[key]=value,size&gt;capacity&amp;&amp;this.</highlight><highlight class="keyword">remove</highlight><highlight class="normal">(staleEnd.key),value}},</highlight><highlight class="keyword">get</highlight><highlight class="normal">:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(key){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(capacity&lt;Number.MAX_VALUE){var<sp/>lruEntry=lruHash[key];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!lruEntry)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;refresh(lruEntry)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data[key]},</highlight><highlight class="keyword">remove</highlight><highlight class="normal">:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(key){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(capacity&lt;Number.MAX_VALUE){var<sp/>lruEntry=lruHash[key];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!lruEntry)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;lruEntry==freshEnd&amp;&amp;(freshEnd=lruEntry.p),lruEntry==staleEnd&amp;&amp;(staleEnd=lruEntry.n),link(lruEntry.n,lruEntry.p),</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lruHash[key]}</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>data[key],size--},removeAll:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){data={},size=0,lruHash={},freshEnd=staleEnd=null},destroy:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){data=null,stats=null,lruHash=null,</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>caches[cacheId]},info:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>extend({},stats,{size:size})}}}var<sp/>caches={};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cacheFactory.info=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>info={};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(caches,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(cache,cacheId){info[cacheId]=cache.info()}),info},cacheFactory.get=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(cacheId){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>caches[cacheId]},cacheFactory}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$TemplateCacheProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$cacheFactory&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($cacheFactory){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$cacheFactory(</highlight><highlight class="stringliteral">&quot;templates&quot;</highlight><highlight class="normal">)}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$CompileProvider($provide,$$sanitizeUriProvider){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>parseIsolateBindings(scope,directiveName,isController){var<sp/>LOCAL_REGEXP=/^\s*([@&amp;]|=(\*?))(\??)\s*(\w*)\s*$/,bindings={};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(scope,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(definition,scopeName){var<sp/>match=definition.match(LOCAL_REGEXP);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!match)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$compileMinErr(</highlight><highlight class="stringliteral">&quot;iscp&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Invalid<sp/>{3}<sp/>for<sp/>directive<sp/>&apos;{0}&apos;.<sp/>Definition:<sp/>{...<sp/>{1}:<sp/>&apos;{2}&apos;<sp/>...}&quot;</highlight><highlight class="normal">,directiveName,scopeName,definition,isController?</highlight><highlight class="stringliteral">&quot;controller<sp/>bindings<sp/>definition&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;isolate<sp/>scope<sp/>definition&quot;</highlight><highlight class="normal">);bindings[scopeName]={mode:match[1][0],collection:</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">===match[2],optional:</highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">===match[3],attrName:match[4]||scopeName}}),bindings}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>parseDirectiveBindings(directive,directiveName){var<sp/>bindings={isolateScope:null,bindToController:null};</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isObject(directive.scope)&amp;&amp;(directive.bindToController===!0?(bindings.bindToController=parseIsolateBindings(directive.scope,directiveName,!0),bindings.isolateScope={}):bindings.isolateScope=parseIsolateBindings(directive.scope,directiveName,!1)),isObject(directive.bindToController)&amp;&amp;(bindings.bindToController=parseIsolateBindings(directive.bindToController,directiveName,!0)),isObject(bindings.bindToController)){var<sp/>controller=directive.controller,controllerAs=directive.controllerAs;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!controller)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$compileMinErr(</highlight><highlight class="stringliteral">&quot;noctrl&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>bind<sp/>to<sp/>controller<sp/>without<sp/>directive<sp/>&apos;{0}&apos;s<sp/>controller.&quot;</highlight><highlight class="normal">,directiveName);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!identifierForController(controller,controllerAs))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$compileMinErr(</highlight><highlight class="stringliteral">&quot;noident&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>bind<sp/>to<sp/>controller<sp/>without<sp/>identifier<sp/>for<sp/>directive<sp/>&apos;{0}&apos;.&quot;</highlight><highlight class="normal">,directiveName)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bindings}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>assertValidDirectiveName(name){var<sp/>letter=name.charAt(0);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!letter||letter!==lowercase(letter))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$compileMinErr(</highlight><highlight class="stringliteral">&quot;baddir&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Directive<sp/>name<sp/>&apos;{0}&apos;<sp/>is<sp/>invalid.<sp/>The<sp/>first<sp/>character<sp/>must<sp/>be<sp/>a<sp/>lowercase<sp/>letter&quot;</highlight><highlight class="normal">,name);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name!==name.trim())</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$compileMinErr(</highlight><highlight class="stringliteral">&quot;baddir&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Directive<sp/>name<sp/>&apos;{0}&apos;<sp/>is<sp/>invalid.<sp/>The<sp/>name<sp/>should<sp/>not<sp/>contain<sp/>leading<sp/>or<sp/>trailing<sp/>whitespaces&quot;</highlight><highlight class="normal">,name)}var<sp/>hasDirectives={},Suffix=</highlight><highlight class="stringliteral">&quot;Directive&quot;</highlight><highlight class="normal">,COMMENT_DIRECTIVE_REGEXP=/^\s*directive\:\s*([\w\-]+)\s+(.*)$/,CLASS_DIRECTIVE_REGEXP=/(([\w\-]+)(?:\:([^;]+))?;?)/,ALL_OR_NOTHING_ATTRS=makeMap(</highlight><highlight class="stringliteral">&quot;ngSrc,ngSrcset,src,srcset&quot;</highlight><highlight class="normal">),REQUIRE_PREFIX_REGEXP=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/,EVENT_HANDLER_ATTR_REGEXP=/^(on[a-z]+|formaction)$/;this.directive=</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>registerDirective(name,directiveFactory){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>assertNotHasOwnProperty(name,</highlight><highlight class="stringliteral">&quot;directive&quot;</highlight><highlight class="normal">),isString(name)?(assertValidDirectiveName(name),assertArg(directiveFactory,</highlight><highlight class="stringliteral">&quot;directiveFactory&quot;</highlight><highlight class="normal">),hasDirectives.hasOwnProperty(name)||(hasDirectives[name]=[],$provide.factory(name+Suffix,[</highlight><highlight class="stringliteral">&quot;$injector&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$exceptionHandler&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($injector,$exceptionHandler){var<sp/>directives=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(hasDirectives[name],</highlight><highlight class="keyword">function</highlight><highlight class="normal">(directiveFactory,index){</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{var<sp/>directive=$injector.invoke(directiveFactory);isFunction(directive)?directive={compile:valueFn(directive)}:!directive.compile&amp;&amp;directive.link&amp;&amp;(directive.compile=valueFn(directive.link)),directive.priority=directive.priority||0,directive.index=index,directive.name=directive.name||name,directive.require=directive.require||directive.controller&amp;&amp;directive.name,directive.restrict=directive.restrict||</highlight><highlight class="stringliteral">&quot;EA&quot;</highlight><highlight class="normal">;var<sp/>bindings=directive.$$bindings=parseDirectiveBindings(directive,directive.name);isObject(bindings.isolateScope)&amp;&amp;(directive.$$isolateBindings=bindings.isolateScope),directives.push(directive)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){$exceptionHandler(e)}}),directives}])),hasDirectives[name].push(directiveFactory)):forEach(name,reverseParams(registerDirective)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">},this.aHrefSanitizationWhitelist=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(regexp){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isDefined(regexp)?($$sanitizeUriProvider.aHrefSanitizationWhitelist(regexp),</highlight><highlight class="keyword">this</highlight><highlight class="normal">):$$sanitizeUriProvider.aHrefSanitizationWhitelist()},this.imgSrcSanitizationWhitelist=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(regexp){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isDefined(regexp)?($$sanitizeUriProvider.imgSrcSanitizationWhitelist(regexp),</highlight><highlight class="keyword">this</highlight><highlight class="normal">):$$sanitizeUriProvider.imgSrcSanitizationWhitelist()};var<sp/>debugInfoEnabled=!0;this.debugInfoEnabled=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(enabled){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isDefined(enabled)?(debugInfoEnabled=enabled,</highlight><highlight class="keyword">this</highlight><highlight class="normal">):debugInfoEnabled},this.$get=[</highlight><highlight class="stringliteral">&quot;$injector&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$interpolate&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$exceptionHandler&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$templateRequest&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$parse&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$controller&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$rootScope&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$document&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$sce&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$animate&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$$sanitizeUri&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($injector,$interpolate,$exceptionHandler,$templateRequest,$parse,$controller,$rootScope,$document,$sce,$animate,$$sanitizeUri){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>safeAddClass($element,className){</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{$element.addClass(className)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>compile($compileNodes,transcludeFn,maxPriority,ignoreDirective,previousCompileContext){$compileNodes<sp/>instanceof<sp/>jqLite||($compileNodes=jqLite($compileNodes)),forEach($compileNodes,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(node,index){node.nodeType==NODE_TYPE_TEXT&amp;&amp;node.nodeValue.match(/\S+/)&amp;&amp;($compileNodes[index]=jqLite(node).wrap(</highlight><highlight class="stringliteral">&quot;&lt;span&gt;&lt;/span&gt;&quot;</highlight><highlight class="normal">).parent()[0])});var<sp/>compositeLinkFn=compileNodes($compileNodes,transcludeFn,$compileNodes,maxPriority,ignoreDirective,previousCompileContext);compile.$$addScopeClass($compileNodes);var<sp/></highlight><highlight class="keyword">namespace</highlight><highlight class="normal">=null;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope,cloneConnectFn,options){assertArg(scope,</highlight><highlight class="stringliteral">&quot;scope&quot;</highlight><highlight class="normal">),options=options||{};var<sp/>parentBoundTranscludeFn=options.parentBoundTranscludeFn,transcludeControllers=options.transcludeControllers,futureParentElement=options.futureParentElement;parentBoundTranscludeFn&amp;&amp;parentBoundTranscludeFn.$$boundTransclude&amp;&amp;(parentBoundTranscludeFn=parentBoundTranscludeFn.$$boundTransclude),</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">||(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">=detectNamespaceForChildElements(futureParentElement));var<sp/>$linkNode;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">($linkNode=</highlight><highlight class="stringliteral">&quot;html&quot;</highlight><highlight class="normal">!==</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">?jqLite(wrapTemplate(</highlight><highlight class="keyword">namespace</highlight><highlight class="normal">,jqLite(</highlight><highlight class="stringliteral">&quot;&lt;div&gt;&quot;</highlight><highlight class="normal">).append($compileNodes).html())):cloneConnectFn?JQLitePrototype.clone.call($compileNodes):$compileNodes,transcludeControllers)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>controllerName<sp/>in<sp/>transcludeControllers)$linkNode.data(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">+controllerName+</highlight><highlight class="stringliteral">&quot;Controller&quot;</highlight><highlight class="normal">,transcludeControllers[controllerName].instance);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compile.$$addScopeInfo($linkNode,scope),cloneConnectFn&amp;&amp;cloneConnectFn($linkNode,scope),compositeLinkFn&amp;&amp;compositeLinkFn(scope,$linkNode,$linkNode,parentBoundTranscludeFn),$linkNode}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>detectNamespaceForChildElements(parentElement){var<sp/>node=parentElement&amp;&amp;parentElement[0];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node&amp;&amp;</highlight><highlight class="stringliteral">&quot;foreignobject&quot;</highlight><highlight class="normal">!==nodeName_(node)&amp;&amp;node.toString().match(/SVG/)?</highlight><highlight class="stringliteral">&quot;svg&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;html&quot;</highlight><highlight class="normal">}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>compileNodes(nodeList,transcludeFn,$rootElement,maxPriority,ignoreDirective,previousCompileContext){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>compositeLinkFn(scope,nodeList,$rootElement,parentBoundTranscludeFn){var<sp/>nodeLinkFn,childLinkFn,node,childScope,i,ii,idx,childBoundTranscludeFn,stableNodeList;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeLinkFnFound){var<sp/>nodeListLength=nodeList.length;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(stableNodeList=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Array(nodeListLength),i=0;i&lt;linkFns.length;i+=3)idx=linkFns[i],stableNodeList[idx]=nodeList[idx]}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>stableNodeList=nodeList;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,ii=linkFns.length;ii&gt;i;)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(node=stableNodeList[linkFns[i++]],nodeLinkFn=linkFns[i++],childLinkFn=linkFns[i++],nodeLinkFn){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeLinkFn.scope){childScope=scope.$new(),compile.$$addScopeInfo(jqLite(node),childScope);var<sp/>destroyBindings=nodeLinkFn.$$destroyBindings;destroyBindings&amp;&amp;(nodeLinkFn.$$destroyBindings=null,childScope.$on(</highlight><highlight class="stringliteral">&quot;$destroyed&quot;</highlight><highlight class="normal">,destroyBindings))}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>childScope=scope;childBoundTranscludeFn=nodeLinkFn.transcludeOnThisElement?createBoundTranscludeFn(scope,nodeLinkFn.transclude,parentBoundTranscludeFn,nodeLinkFn.elementTranscludeOnThisElement):!nodeLinkFn.templateOnThisElement&amp;&amp;parentBoundTranscludeFn?parentBoundTranscludeFn:!parentBoundTranscludeFn&amp;&amp;transcludeFn?createBoundTranscludeFn(scope,transcludeFn):null,nodeLinkFn(childLinkFn,childScope,node,$rootElement,childBoundTranscludeFn,nodeLinkFn)}<ref refid="getrss_8php_1a28ce50e914c2968ab9495fdd1514c759" kindref="member">else</ref><sp/>childLinkFn&amp;&amp;childLinkFn(scope,node.childNodes,undefined,parentBoundTranscludeFn)}for(var<sp/>attrs,directives,nodeLinkFn,childNodes,childLinkFn,linkFnFound,nodeLinkFnFound,linkFns=[],i=0;i&lt;nodeList.length;i++)attrs=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Attributes,directives=collectDirectives(nodeList[i],[],attrs,0===i?maxPriority:undefined,ignoreDirective),nodeLinkFn=directives.length?applyDirectivesToNode(directives,nodeList[i],attrs,transcludeFn,$rootElement,null,[],[],previousCompileContext):null,nodeLinkFn&amp;&amp;nodeLinkFn.scope&amp;&amp;compile.$$addScopeClass(attrs.$$element),childLinkFn=nodeLinkFn&amp;&amp;nodeLinkFn.terminal||!(childNodes=nodeList[i].childNodes)||!childNodes.length?null:compileNodes(childNodes,nodeLinkFn?(nodeLinkFn.transcludeOnThisElement||!nodeLinkFn.templateOnThisElement)&amp;&amp;nodeLinkFn.transclude:transcludeFn),(nodeLinkFn||childLinkFn)&amp;&amp;(linkFns.push(i,nodeLinkFn,childLinkFn),linkFnFound=!0,nodeLinkFnFound=nodeLinkFnFound||nodeLinkFn),previousCompileContext=null;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>linkFnFound?compositeLinkFn:null}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createBoundTranscludeFn(scope,transcludeFn,previousBoundTranscludeFn,elementTransclusion){var<sp/>boundTranscludeFn=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(transcludedScope,cloneFn,controllers,futureParentElement,containingScope){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transcludedScope||(transcludedScope=scope.$new(!1,containingScope),transcludedScope.$$transcluded=!0),transcludeFn(transcludedScope,cloneFn,{parentBoundTranscludeFn:previousBoundTranscludeFn,transcludeControllers:controllers,futureParentElement:futureParentElement})};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boundTranscludeFn}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>collectDirectives(node,directives,attrs,maxPriority,ignoreDirective){var<sp/>match,className,nodeType=node.nodeType,attrsMap=attrs.$attr;</highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(nodeType){</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NODE_TYPE_ELEMENT:addDirective(directives,directiveNormalize(nodeName_(node)),</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,maxPriority,ignoreDirective);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>attr,name,nName,ngAttrName,value,isNgAttr,nAttrs=node.attributes,j=0,jj=nAttrs&amp;&amp;nAttrs.length;jj&gt;j;j++){var<sp/>attrStartName=!1,attrEndName=!1;attr=nAttrs[j],name=attr.name,value=trim(attr.value),ngAttrName=directiveNormalize(name),(isNgAttr=NG_ATTR_BINDING.test(ngAttrName))&amp;&amp;(name=name.replace(PREFIX_REGEXP,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).substr(8).replace(/_(.)/g,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(match,letter){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>letter.toUpperCase()}));var<sp/>directiveNName=ngAttrName.replace(/(Start|End)$/,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);directiveIsMultiElement(directiveNName)&amp;&amp;ngAttrName===directiveNName+</highlight><highlight class="stringliteral">&quot;Start&quot;</highlight><highlight class="normal">&amp;&amp;(attrStartName=name,attrEndName=name.substr(0,name.length-5)+</highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">,name=name.substr(0,name.length-6)),nName=directiveNormalize(name.toLowerCase()),attrsMap[nName]=name,(isNgAttr||!attrs.hasOwnProperty(nName))&amp;&amp;(attrs[nName]=value,getBooleanAttrName(node,nName)&amp;&amp;(attrs[nName]=!0)),addAttrInterpolateDirective(node,directives,value,nName,isNgAttr),addDirective(directives,nName,</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,maxPriority,ignoreDirective,attrStartName,attrEndName)}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(className=node.className,isObject(className)&amp;&amp;(className=className.animVal),isString(className)&amp;&amp;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">!==className)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;match=CLASS_DIRECTIVE_REGEXP.exec(className);)nName=directiveNormalize(match[2]),addDirective(directives,nName,</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,maxPriority,ignoreDirective)&amp;&amp;(attrs[nName]=trim(match[3])),className=className.substr(match.index+match[0].length);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NODE_TYPE_TEXT:addTextInterpolateDirective(directives,node.nodeValue);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NODE_TYPE_COMMENT:</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{match=COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue),match&amp;&amp;(nName=directiveNormalize(match[1]),addDirective(directives,nName,</highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal">,maxPriority,ignoreDirective)&amp;&amp;(attrs[nName]=trim(match[2])))}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){}}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>directives.sort(byPriority),directives}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>groupScan(node,attrStart,attrEnd){var<sp/>nodes=[],depth=0;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attrStart&amp;&amp;node.hasAttribute&amp;&amp;node.hasAttribute(attrStart)){</highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!node)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$compileMinErr(</highlight><highlight class="stringliteral">&quot;uterdir&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Unterminated<sp/>attribute,<sp/>found<sp/>&apos;{0}&apos;<sp/>but<sp/>no<sp/>matching<sp/>&apos;{1}&apos;<sp/>found.&quot;</highlight><highlight class="normal">,attrStart,attrEnd);node.nodeType==NODE_TYPE_ELEMENT&amp;&amp;(node.hasAttribute(attrStart)&amp;&amp;depth++,node.hasAttribute(attrEnd)&amp;&amp;depth--),nodes.push(node),node=node.nextSibling}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(depth&gt;0)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>nodes.push(node);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jqLite(nodes)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>groupElementsLinkFnWrapper(linkFn,attrStart,attrEnd){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope,element,attrs,controllers,transcludeFn){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>element=groupScan(element[0],attrStart,attrEnd),linkFn(scope,element,attrs,controllers,transcludeFn)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>applyDirectivesToNode(directives,compileNode,templateAttrs,transcludeFn,jqCollection,originalReplaceDirective,preLinkFns,postLinkFns,previousCompileContext){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>addLinkFns(pre,post,attrStart,attrEnd){pre&amp;&amp;(attrStart&amp;&amp;(pre=groupElementsLinkFnWrapper(pre,attrStart,attrEnd)),pre.require=directive.require,pre.directiveName=directiveName,(newIsolateScopeDirective===directive||directive.$$isolateScope)&amp;&amp;(pre=cloneAndAnnotateFn(pre,{isolateScope:!0})),preLinkFns.push(pre)),post&amp;&amp;(attrStart&amp;&amp;(post=groupElementsLinkFnWrapper(post,attrStart,attrEnd)),post.require=directive.require,post.directiveName=directiveName,(newIsolateScopeDirective===directive||directive.$$isolateScope)&amp;&amp;(post=cloneAndAnnotateFn(post,{isolateScope:!0})),postLinkFns.push(post))}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getControllers(directiveName,require,$element,elementControllers){var<sp/>value;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isString(require)){var<sp/>match=require.match(REQUIRE_PREFIX_REGEXP),name=require.substring(match[0].length),inheritType=match[1]||match[3],optional=</highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">===match[2];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;^^&quot;</highlight><highlight class="normal">===inheritType?$element=$element.parent():(value=elementControllers&amp;&amp;elementControllers[name],value=value&amp;&amp;value.instance),!value){var<sp/>dataName=</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;Controller&quot;</highlight><highlight class="normal">;value=inheritType?$element.inheritedData(dataName):$element.data(dataName)}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!value&amp;&amp;!optional)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$compileMinErr(</highlight><highlight class="stringliteral">&quot;ctreq&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Controller<sp/>&apos;{0}&apos;,<sp/>required<sp/>by<sp/>directive<sp/>&apos;{1}&apos;,<sp/>can&apos;t<sp/>be<sp/>found!&quot;</highlight><highlight class="normal">,name,directiveName)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isArray(require)){value=[];</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0,ii=require.length;ii&gt;i;i++)value[i]=getControllers(directiveName,require[i],$element,elementControllers)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value||null}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>setupControllers($element,attrs,transcludeFn,controllerDirectives,isolateScope,scope){var<sp/>elementControllers=createMap();</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>controllerKey<sp/>in<sp/>controllerDirectives){var<sp/>directive=controllerDirectives[controllerKey],locals={$scope:directive===newIsolateScopeDirective||directive.$$isolateScope?isolateScope:scope,$element:$element,$attrs:attrs,$transclude:transcludeFn},controller=directive.controller;</highlight><highlight class="stringliteral">&quot;@&quot;</highlight><highlight class="normal">==controller&amp;&amp;(controller=attrs[directive.name]);var<sp/>controllerInstance=$controller(controller,locals,!0,directive.controllerAs);elementControllers[directive.name]=controllerInstance,hasElementTranscludeDirective||$element.data(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">+directive.name+</highlight><highlight class="stringliteral">&quot;Controller&quot;</highlight><highlight class="normal">,controllerInstance.instance)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elementControllers}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>nodeLinkFn(childLinkFn,scope,linkNode,$rootElement,boundTranscludeFn,thisLinkFn){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>controllersBoundTransclude(scope,cloneAttachFn,futureParentElement){var<sp/>transcludeControllers;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isScope(scope)||(futureParentElement=cloneAttachFn,cloneAttachFn=scope,scope=undefined),hasElementTranscludeDirective&amp;&amp;(transcludeControllers=elementControllers),futureParentElement||(futureParentElement=hasElementTranscludeDirective?$element.parent():$element),boundTranscludeFn(scope,cloneAttachFn,transcludeControllers,futureParentElement,scopeToChild)}var<sp/>i,ii,linkFn,controller,isolateScope,elementControllers,transcludeFn,$element,attrs;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(compileNode===linkNode?(attrs=templateAttrs,$element=templateAttrs.$$element):($element=jqLite(linkNode),attrs=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Attributes($element,templateAttrs)),newIsolateScopeDirective&amp;&amp;(isolateScope=scope.$new(!0)),boundTranscludeFn&amp;&amp;(transcludeFn=controllersBoundTransclude,transcludeFn.$$boundTransclude=boundTranscludeFn),controllerDirectives&amp;&amp;(elementControllers=setupControllers($element,attrs,transcludeFn,controllerDirectives,isolateScope,scope)),newIsolateScopeDirective&amp;&amp;(compile.$$addScopeInfo($element,isolateScope,!0,!(templateDirective&amp;&amp;(templateDirective===newIsolateScopeDirective||templateDirective===newIsolateScopeDirective.$$originalDirective))),compile.$$addScopeClass($element,!0),isolateScope.$$isolateBindings=newIsolateScopeDirective.$$isolateBindings,initializeDirectiveBindings(scope,attrs,isolateScope,isolateScope.$$isolateBindings,newIsolateScopeDirective,isolateScope)),elementControllers){var<sp/>bindings,controllerForBindings,scopeDirective=newIsolateScopeDirective||newScopeDirective;scopeDirective&amp;&amp;elementControllers[scopeDirective.name]&amp;&amp;(bindings=scopeDirective.$$bindings.bindToController,controller=elementControllers[scopeDirective.name],controller&amp;&amp;controller.identifier&amp;&amp;bindings&amp;&amp;(controllerForBindings=controller,thisLinkFn.$$destroyBindings=initializeDirectiveBindings(scope,attrs,controller.instance,bindings,scopeDirective)));</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>in<sp/>elementControllers){controller=elementControllers[i];var<sp/>controllerResult=controller();controllerResult!==controller.instance&amp;&amp;(controller.instance=controllerResult,$element.data(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">+directive.name+</highlight><highlight class="stringliteral">&quot;Controller&quot;</highlight><highlight class="normal">,controllerResult),controller===controllerForBindings&amp;&amp;(thisLinkFn.$$destroyBindings(),thisLinkFn.$$destroyBindings=initializeDirectiveBindings(scope,attrs,controllerResult,bindings,scopeDirective)))}}</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,ii=preLinkFns.length;ii&gt;i;i++)linkFn=preLinkFns[i],invokeLinkFn(linkFn,linkFn.isolateScope?isolateScope:scope,$element,attrs,linkFn.require&amp;&amp;getControllers(linkFn.directiveName,linkFn.require,$element,elementControllers),transcludeFn);var<sp/>scopeToChild=scope;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(newIsolateScopeDirective&amp;&amp;(newIsolateScopeDirective.template||null===newIsolateScopeDirective.templateUrl)&amp;&amp;(scopeToChild=isolateScope),childLinkFn&amp;&amp;childLinkFn(scopeToChild,linkNode.childNodes,undefined,boundTranscludeFn),i=postLinkFns.length-1;i&gt;=0;i--)linkFn=postLinkFns[i],invokeLinkFn(linkFn,linkFn.isolateScope?isolateScope:scope,$element,attrs,linkFn.require&amp;&amp;getControllers(linkFn.directiveName,linkFn.require,$element,elementControllers),transcludeFn)}previousCompileContext=previousCompileContext||{};</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>newScopeDirective,directive,directiveName,$template,linkFn,directiveValue,terminalPriority=-Number.MAX_VALUE,controllerDirectives=previousCompileContext.controllerDirectives,newIsolateScopeDirective=previousCompileContext.newIsolateScopeDirective,templateDirective=previousCompileContext.templateDirective,nonTlbTranscludeDirective=previousCompileContext.nonTlbTranscludeDirective,hasTranscludeDirective=!1,hasTemplate=!1,hasElementTranscludeDirective=previousCompileContext.hasElementTranscludeDirective,$compileNode=templateAttrs.$$element=jqLite(compileNode),replaceDirective=originalReplaceDirective,childTranscludeFn=transcludeFn,i=0,ii=directives.length;ii&gt;i;i++){</highlight></codeline>
<codeline lineno="7"><highlight class="normal">directive=directives[i];var<sp/>attrStart=directive.$$start,attrEnd=directive.$$end;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attrStart&amp;&amp;($compileNode=groupScan(compileNode,attrStart,attrEnd)),$template=undefined,terminalPriority&gt;directive.priority)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((directiveValue=directive.scope)&amp;&amp;(directive.templateUrl||(isObject(directiveValue)?(assertNoDuplicate(</highlight><highlight class="stringliteral">&quot;new/isolated<sp/>scope&quot;</highlight><highlight class="normal">,newIsolateScopeDirective||newScopeDirective,directive,$compileNode),newIsolateScopeDirective=directive):assertNoDuplicate(</highlight><highlight class="stringliteral">&quot;new/isolated<sp/>scope&quot;</highlight><highlight class="normal">,newIsolateScopeDirective,directive,$compileNode)),newScopeDirective=newScopeDirective||directive),directiveName=directive.name,!directive.templateUrl&amp;&amp;directive.controller&amp;&amp;(directiveValue=directive.controller,controllerDirectives=controllerDirectives||createMap(),assertNoDuplicate(</highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">+directiveName+</highlight><highlight class="stringliteral">&quot;&apos;<sp/>controller&quot;</highlight><highlight class="normal">,controllerDirectives[directiveName],directive,$compileNode),controllerDirectives[directiveName]=directive),(directiveValue=directive.transclude)&amp;&amp;(hasTranscludeDirective=!0,directive.$$tlb||(assertNoDuplicate(</highlight><highlight class="stringliteral">&quot;transclusion&quot;</highlight><highlight class="normal">,nonTlbTranscludeDirective,directive,$compileNode),nonTlbTranscludeDirective=directive),</highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal">==directiveValue?(hasElementTranscludeDirective=!0,terminalPriority=directive.priority,$template=$compileNode,$compileNode=templateAttrs.$$element=jqLite(document.createComment(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+directiveName+</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">+templateAttrs[directiveName]+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)),compileNode=$compileNode[0],replaceWith(jqCollection,sliceArgs($template),compileNode),childTranscludeFn=compile($template,transcludeFn,terminalPriority,replaceDirective&amp;&amp;replaceDirective.name,{nonTlbTranscludeDirective:nonTlbTranscludeDirective})):($template=jqLite(jqLiteClone(compileNode)).contents(),$compileNode.empty(),childTranscludeFn=compile($template,transcludeFn))),directive.template)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hasTemplate=!0,assertNoDuplicate(</highlight><highlight class="stringliteral">&quot;template&quot;</highlight><highlight class="normal">,templateDirective,directive,$compileNode),templateDirective=directive,directiveValue=isFunction(directive.template)?directive.template($compileNode,templateAttrs):directive.template,directiveValue=denormalizeTemplate(directiveValue),directive.replace){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(replaceDirective=directive,$template=jqLiteIsTextNode(directiveValue)?[]:removeComments(wrapTemplate(directive.templateNamespace,trim(directiveValue))),compileNode=$template[0],1!=$template.length||compileNode.nodeType!==NODE_TYPE_ELEMENT)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$compileMinErr(</highlight><highlight class="stringliteral">&quot;tplrt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Template<sp/>for<sp/>directive<sp/>&apos;{0}&apos;<sp/>must<sp/>have<sp/>exactly<sp/>one<sp/>root<sp/>element.<sp/>{1}&quot;</highlight><highlight class="normal">,directiveName,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);replaceWith(jqCollection,$compileNode,compileNode);var<sp/>newTemplateAttrs={$attr:{}},templateDirectives=collectDirectives(compileNode,[],newTemplateAttrs),unprocessedDirectives=directives.splice(i+1,directives.length-(i+1));newIsolateScopeDirective&amp;&amp;markDirectivesAsIsolate(templateDirectives),directives=directives.concat(templateDirectives).concat(unprocessedDirectives),mergeTemplateAttributes(templateAttrs,newTemplateAttrs),ii=directives.length}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>$compileNode.html(directiveValue);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(directive.templateUrl)hasTemplate=!0,assertNoDuplicate(</highlight><highlight class="stringliteral">&quot;template&quot;</highlight><highlight class="normal">,templateDirective,directive,$compileNode),templateDirective=directive,directive.replace&amp;&amp;(replaceDirective=directive),nodeLinkFn=compileTemplateUrl(directives.splice(i,directives.length-i),$compileNode,templateAttrs,jqCollection,hasTranscludeDirective&amp;&amp;childTranscludeFn,preLinkFns,postLinkFns,{controllerDirectives:controllerDirectives,newIsolateScopeDirective:newIsolateScopeDirective,templateDirective:templateDirective,nonTlbTranscludeDirective:nonTlbTranscludeDirective}),ii=directives.length;</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(directive.compile)</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{linkFn=directive.compile($compileNode,templateAttrs,childTranscludeFn),isFunction(linkFn)?addLinkFns(null,linkFn,attrStart,attrEnd):linkFn&amp;&amp;addLinkFns(linkFn.pre,linkFn.post,attrStart,attrEnd)}catch(e){$exceptionHandler(e,startingTag($compileNode))}directive.terminal&amp;&amp;(nodeLinkFn.terminal=!0,terminalPriority=Math.max(terminalPriority,directive.priority))}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodeLinkFn.scope=newScopeDirective&amp;&amp;newScopeDirective.scope===!0,nodeLinkFn.transcludeOnThisElement=hasTranscludeDirective,nodeLinkFn.elementTranscludeOnThisElement=hasElementTranscludeDirective,nodeLinkFn.templateOnThisElement=hasTemplate,nodeLinkFn.transclude=childTranscludeFn,previousCompileContext.hasElementTranscludeDirective=hasElementTranscludeDirective,nodeLinkFn}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>markDirectivesAsIsolate(directives){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>j=0,jj=directives.length;jj&gt;j;j++)directives[j]=inherit(directives[j],{$$isolateScope:!0})}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>addDirective(tDirectives,name,location,maxPriority,ignoreDirective,startAttrName,endAttrName){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name===ignoreDirective)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;var<sp/>match=null;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hasDirectives.hasOwnProperty(name))</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>directive,directives=$injector.get(name+Suffix),i=0,ii=directives.length;ii&gt;i;i++)</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{directive=directives[i],(maxPriority===undefined||maxPriority&gt;directive.priority)&amp;&amp;-1!=directive.restrict.indexOf(location)&amp;&amp;(startAttrName&amp;&amp;(directive=inherit(directive,{$$start:startAttrName,$$end:endAttrName})),tDirectives.push(directive),match=directive)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){$exceptionHandler(e)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>match}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>directiveIsMultiElement(name){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hasDirectives.hasOwnProperty(name))</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>directive,directives=$injector.get(name+Suffix),i=0,ii=directives.length;ii&gt;i;i++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(directive=directives[i],directive.multiElement)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!0;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!1}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>mergeTemplateAttributes(dst,src){var<sp/>srcAttr=src.$attr,dstAttr=dst.$attr,$element=dst.$$element;forEach(dst,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,key){</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">!=key.charAt(0)&amp;&amp;(src[key]&amp;&amp;src[key]!==value&amp;&amp;(value+=(</highlight><highlight class="stringliteral">&quot;style&quot;</highlight><highlight class="normal">===key?</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)+src[key]),dst.$set(key,value,!0,srcAttr[key]))}),forEach(src,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,key){</highlight><highlight class="stringliteral">&quot;class&quot;</highlight><highlight class="normal">==key?(safeAddClass($element,value),dst[</highlight><highlight class="stringliteral">&quot;class&quot;</highlight><highlight class="normal">]=(dst[</highlight><highlight class="stringliteral">&quot;class&quot;</highlight><highlight class="normal">]?dst[</highlight><highlight class="stringliteral">&quot;class&quot;</highlight><highlight class="normal">]+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+value):</highlight><highlight class="stringliteral">&quot;style&quot;</highlight><highlight class="normal">==key?($element.attr(</highlight><highlight class="stringliteral">&quot;style&quot;</highlight><highlight class="normal">,$element.attr(</highlight><highlight class="stringliteral">&quot;style&quot;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">+value),dst.style=(dst.style?dst.style+</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+value):</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">==key.charAt(0)||dst.hasOwnProperty(key)||(dst[key]=value,dstAttr[key]=srcAttr[key])})}function<sp/>compileTemplateUrl(directives,$compileNode,tAttrs,$rootElement,childTranscludeFn,preLinkFns,postLinkFns,previousCompileContext){var<sp/>afterTemplateNodeLinkFn,afterTemplateChildLinkFn,linkQueue=[],beforeTemplateCompileNode=$compileNode[0],origAsyncDirective=directives.shift(),derivedSyncDirective=inherit(origAsyncDirective,{templateUrl:null,transclude:null,replace:null,$$originalDirective:origAsyncDirective}),templateUrl=isFunction(origAsyncDirective.templateUrl)?origAsyncDirective.templateUrl($compileNode,tAttrs):origAsyncDirective.templateUrl,templateNamespace=origAsyncDirective.templateNamespace;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$compileNode.empty(),$templateRequest($sce.getTrustedResourceUrl(templateUrl)).then(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(content){var<sp/>compileNode,tempTemplateAttrs,$template,childBoundTranscludeFn;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(content=denormalizeTemplate(content),origAsyncDirective.replace){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">($template=jqLiteIsTextNode(content)?[]:removeComments(wrapTemplate(templateNamespace,trim(content))),compileNode=$template[0],1!=$template.length||compileNode.nodeType!==NODE_TYPE_ELEMENT)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$compileMinErr(</highlight><highlight class="stringliteral">&quot;tplrt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Template<sp/>for<sp/>directive<sp/>&apos;{0}&apos;<sp/>must<sp/>have<sp/>exactly<sp/>one<sp/>root<sp/>element.<sp/>{1}&quot;</highlight><highlight class="normal">,origAsyncDirective.name,templateUrl);tempTemplateAttrs={$attr:{}},replaceWith($rootElement,$compileNode,compileNode);var<sp/>templateDirectives=collectDirectives(compileNode,[],tempTemplateAttrs);isObject(origAsyncDirective.scope)&amp;&amp;markDirectivesAsIsolate(templateDirectives),directives=templateDirectives.concat(directives),mergeTemplateAttributes(tAttrs,tempTemplateAttrs)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>compileNode=beforeTemplateCompileNode,$compileNode.html(content);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(directives.unshift(derivedSyncDirective),afterTemplateNodeLinkFn=applyDirectivesToNode(directives,compileNode,tAttrs,childTranscludeFn,$compileNode,origAsyncDirective,preLinkFns,postLinkFns,previousCompileContext),forEach($rootElement,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(node,i){node==compileNode&amp;&amp;($rootElement[i]=$compileNode[0])}),afterTemplateChildLinkFn=compileNodes($compileNode[0].childNodes,childTranscludeFn);linkQueue.length;){var<sp/>scope=linkQueue.shift(),beforeTemplateLinkNode=linkQueue.shift(),linkRootElement=linkQueue.shift(),boundTranscludeFn=linkQueue.shift(),linkNode=$compileNode[0];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!scope.$$destroyed){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(beforeTemplateLinkNode!==beforeTemplateCompileNode){var<sp/>oldClasses=beforeTemplateLinkNode.className;previousCompileContext.hasElementTranscludeDirective&amp;&amp;origAsyncDirective.replace||(linkNode=jqLiteClone(compileNode)),replaceWith(linkRootElement,jqLite(beforeTemplateLinkNode),linkNode),safeAddClass(jqLite(linkNode),oldClasses)}childBoundTranscludeFn=afterTemplateNodeLinkFn.transcludeOnThisElement?createBoundTranscludeFn(scope,afterTemplateNodeLinkFn.transclude,boundTranscludeFn):boundTranscludeFn,afterTemplateNodeLinkFn(afterTemplateChildLinkFn,scope,linkNode,$rootElement,childBoundTranscludeFn,afterTemplateNodeLinkFn)}}linkQueue=null}),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(ignoreChildLinkFn,scope,node,rootElement,boundTranscludeFn){var<sp/>childBoundTranscludeFn=boundTranscludeFn;scope.$$destroyed||(linkQueue?linkQueue.push(scope,node,rootElement,childBoundTranscludeFn):(afterTemplateNodeLinkFn.transcludeOnThisElement&amp;&amp;(childBoundTranscludeFn=createBoundTranscludeFn(scope,afterTemplateNodeLinkFn.transclude,boundTranscludeFn)),afterTemplateNodeLinkFn(afterTemplateChildLinkFn,scope,node,rootElement,childBoundTranscludeFn,afterTemplateNodeLinkFn)))}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>byPriority(a,b){var<sp/>diff=b.priority-a.priority;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0!==diff?diff:a.name!==b.name?a.name&lt;b.name?-1:1:a.index-b.index}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>assertNoDuplicate(what,previousDirective,directive,element){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(previousDirective)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$compileMinErr(</highlight><highlight class="stringliteral">&quot;multidir&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Multiple<sp/>directives<sp/>[{0},<sp/>{1}]<sp/>asking<sp/>for<sp/>{2}<sp/>on:<sp/>{3}&quot;</highlight><highlight class="normal">,previousDirective.name,directive.name,what,startingTag(element))}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>addTextInterpolateDirective(directives,text){var<sp/>interpolateFn=$interpolate(text,!0);interpolateFn&amp;&amp;directives.push({priority:0,compile:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(templateNode){var<sp/>templateNodeParent=templateNode.parent(),hasCompileParent=!!templateNodeParent.length;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasCompileParent&amp;&amp;compile.$$addBindingClass(templateNodeParent),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope,node){var<sp/>parent=node.parent();hasCompileParent||compile.$$addBindingClass(parent),compile.$$addBindingInfo(parent,interpolateFn.expressions),scope.$watch(interpolateFn,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){node[0].nodeValue=value})}}})}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>wrapTemplate(type,</highlight><highlight class="keyword">template</highlight><highlight class="normal">){</highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(type=lowercase(type||</highlight><highlight class="stringliteral">&quot;html&quot;</highlight><highlight class="normal">)){</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;svg&quot;</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;math&quot;</highlight><highlight class="normal">:var<sp/>wrapper=document.createElement(</highlight><highlight class="stringliteral">&quot;div&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wrapper.innerHTML=</highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal">+type+</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">+</highlight><highlight class="keyword">template</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&quot;&lt;/&quot;</highlight><highlight class="normal">+type+</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">,wrapper.childNodes[0].childNodes;</highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getTrustedContext(node,attrNormalizedName){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;srcdoc&quot;</highlight><highlight class="normal">==attrNormalizedName)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$sce.HTML;var<sp/>tag=nodeName_(node);</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;xlinkHref&quot;</highlight><highlight class="normal">==attrNormalizedName||</highlight><highlight class="stringliteral">&quot;form&quot;</highlight><highlight class="normal">==tag&amp;&amp;</highlight><highlight class="stringliteral">&quot;action&quot;</highlight><highlight class="normal">==attrNormalizedName||</highlight><highlight class="stringliteral">&quot;img&quot;</highlight><highlight class="normal">!=tag&amp;&amp;(</highlight><highlight class="stringliteral">&quot;src&quot;</highlight><highlight class="normal">==attrNormalizedName||</highlight><highlight class="stringliteral">&quot;ngSrc&quot;</highlight><highlight class="normal">==attrNormalizedName)?$sce.RESOURCE_URL:</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>addAttrInterpolateDirective(node,directives,value,name,allOrNothing){var<sp/>trustedContext=getTrustedContext(node,name);allOrNothing=ALL_OR_NOTHING_ATTRS[name]||allOrNothing;var<sp/>interpolateFn=$interpolate(value,!0,trustedContext,allOrNothing);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(interpolateFn){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;multiple&quot;</highlight><highlight class="normal">===name&amp;&amp;</highlight><highlight class="stringliteral">&quot;select&quot;</highlight><highlight class="normal">===nodeName_(node))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$compileMinErr(</highlight><highlight class="stringliteral">&quot;selmulti&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Binding<sp/>to<sp/>the<sp/>&apos;multiple&apos;<sp/>attribute<sp/>is<sp/>not<sp/>supported.<sp/>Element:<sp/>{0}&quot;</highlight><highlight class="normal">,startingTag(node));directives.push({priority:100,compile:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{pre:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope,element,attr){var<sp/>$$observers=attr.$$observers||(attr.$$observers={});</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(EVENT_HANDLER_ATTR_REGEXP.test(name))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$compileMinErr(</highlight><highlight class="stringliteral">&quot;nodomevents&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Interpolations<sp/>for<sp/>HTML<sp/>DOM<sp/>event<sp/>attributes<sp/>are<sp/>disallowed.<sp/><sp/>Please<sp/>use<sp/>the<sp/>ng-<sp/>versions<sp/>(such<sp/>as<sp/>ng-click<sp/>instead<sp/>of<sp/>onclick)<sp/>instead.&quot;</highlight><highlight class="normal">);var<sp/>newValue=attr[name];newValue!==value&amp;&amp;(interpolateFn=newValue&amp;&amp;$interpolate(newValue,!0,trustedContext,allOrNothing),value=newValue),interpolateFn&amp;&amp;(attr[name]=interpolateFn(scope),($$observers[name]||($$observers[name]=[])).$$inter=!0,(attr.$$observers&amp;&amp;attr.$$observers[name].$$scope||scope).$watch(interpolateFn,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(newValue,oldValue){</highlight><highlight class="stringliteral">&quot;class&quot;</highlight><highlight class="normal">===name&amp;&amp;newValue!=oldValue?attr.$updateClass(newValue,oldValue):attr.$set(name,newValue)}))}}}})}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>replaceWith($rootElement,elementsToRemove,newNode){var<sp/>i,ii,firstElementToRemove=elementsToRemove[0],removeCount=elementsToRemove.length,parent=firstElementToRemove.parentNode;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">($rootElement)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,ii=$rootElement.length;ii&gt;i;i++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">($rootElement[i]==firstElementToRemove){$rootElement[i++]=newNode;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>j=i,j2=j+removeCount-1,jj=$rootElement.length;jj&gt;j;j++,j2++)jj&gt;j2?$rootElement[j]=$rootElement[j2]:</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>$rootElement[j];$rootElement.length-=removeCount-1,$rootElement.context===firstElementToRemove&amp;&amp;($rootElement.context=newNode);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">}parent&amp;&amp;parent.replaceChild(newNode,firstElementToRemove);var<sp/>fragment=document.createDocumentFragment();fragment.appendChild(firstElementToRemove),jqLite(newNode).data(jqLite(firstElementToRemove).data()),jQuery?(skipDestroyOnNextJQueryCleanData=!0,jQuery.cleanData([firstElementToRemove])):</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>jqLite.cache[firstElementToRemove[jqLite.expando]];</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>k=1,kk=elementsToRemove.length;kk&gt;k;k++){var<sp/>element=elementsToRemove[k];jqLite(element).remove(),fragment.appendChild(element),</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>elementsToRemove[k]}elementsToRemove[0]=newNode,elementsToRemove.length=1}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>cloneAndAnnotateFn(fn,annotation){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>extend(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fn.apply(null,arguments)},fn,annotation)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>invokeLinkFn(linkFn,scope,$element,attrs,controllers,transcludeFn){</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{linkFn(scope,$element,attrs,controllers,transcludeFn)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){$exceptionHandler(e,startingTag($element))}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>initializeDirectiveBindings(scope,attrs,destination,bindings,directive,newScope){var<sp/>onNewScopeDestroyed;forEach(bindings,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(definition,scopeName){var<sp/>lastValue,parentGet,parentSet,compare,attrName=definition.attrName,optional=definition.optional,mode=definition.mode;</highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mode){</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;@&quot;</highlight><highlight class="normal">:attrs.$observe(attrName,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){destination[scopeName]=value}),attrs.$$observers[attrName].$$scope=scope,attrs[attrName]&amp;&amp;(destination[scopeName]=$interpolate(attrs[attrName])(scope));</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(optional&amp;&amp;!attrs[attrName])</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;parentGet=$parse(attrs[attrName]),compare=parentGet.literal?equals:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a,b){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a===b||a!==a&amp;&amp;b!==b},parentSet=parentGet.assign||</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>lastValue=destination[scopeName]=parentGet(scope),$compileMinErr(</highlight><highlight class="stringliteral">&quot;nonassign&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Expression<sp/>&apos;{0}&apos;<sp/>used<sp/>with<sp/>directive<sp/>&apos;{1}&apos;<sp/>is<sp/>non-assignable!&quot;</highlight><highlight class="normal">,attrs[attrName],directive.name)},lastValue=destination[scopeName]=parentGet(scope);var<sp/>parentValueWatch=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(parentValue){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare(parentValue,destination[scopeName])||(compare(parentValue,lastValue)?parentSet(scope,parentValue=destination[scopeName]):destination[scopeName]=parentValue),lastValue=parentValue};parentValueWatch.$stateful=!0;var<sp/>unwatch;unwatch=definition.collection?scope.$watchCollection(attrs[attrName],parentValueWatch):scope.$watch($parse(attrs[attrName],parentValueWatch),null,parentGet.literal),onNewScopeDestroyed=onNewScopeDestroyed||[],onNewScopeDestroyed.push(unwatch);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!attrs.hasOwnProperty(attrName)&amp;&amp;optional)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parentGet=$parse(attrs[attrName]),parentGet===noop&amp;&amp;optional)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;destination[scopeName]=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(locals){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parentGet(scope,locals)}}});var<sp/>destroyBindings=onNewScopeDestroyed?</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0,ii=onNewScopeDestroyed.length;ii&gt;i;++i)onNewScopeDestroyed[i]()}:noop;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newScope&amp;&amp;destroyBindings!==noop?(newScope.$on(</highlight><highlight class="stringliteral">&quot;$destroy&quot;</highlight><highlight class="normal">,destroyBindings),noop):destroyBindings}var<sp/>Attributes=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,attributesToCopy){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attributesToCopy){var<sp/>i,l,key,keys=Object.keys(attributesToCopy);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,l=keys.length;l&gt;i;i++)key=keys[i],</highlight><highlight class="keyword">this</highlight><highlight class="normal">[key]=attributesToCopy[key]}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>this.$attr={};this.$$element=element};Attributes.prototype={$normalize:directiveNormalize,$addClass:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(classVal){classVal&amp;&amp;classVal.length&gt;0&amp;&amp;$animate.addClass(this.$$element,classVal)},$removeClass:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(classVal){classVal&amp;&amp;classVal.length&gt;0&amp;&amp;$animate.removeClass(this.$$element,classVal)},$updateClass:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(newClasses,oldClasses){var<sp/>toAdd=tokenDifference(newClasses,oldClasses);toAdd&amp;&amp;toAdd.length&amp;&amp;$animate.addClass(this.$$element,toAdd);var<sp/>toRemove=tokenDifference(oldClasses,newClasses);toRemove&amp;&amp;toRemove.length&amp;&amp;$animate.removeClass(this.$$element,toRemove)},$set:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(key,value,writeAttr,attrName){var<sp/>nodeName,node=this.$$element[0],booleanKey=getBooleanAttrName(node,key),aliasedKey=getAliasedAttrName(node,key),observer=key;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(booleanKey?(this.$$element.prop(key,value),attrName=booleanKey):aliasedKey&amp;&amp;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">[aliasedKey]=value,observer=aliasedKey),</highlight><highlight class="keyword">this</highlight><highlight class="normal">[key]=value,attrName?this.$attr[key]=attrName:(attrName=this.$attr[key],attrName||(this.$attr[key]=attrName=snake_case(key,</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">))),nodeName=nodeName_(this.$$element),</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">===nodeName&amp;&amp;</highlight><highlight class="stringliteral">&quot;href&quot;</highlight><highlight class="normal">===key||</highlight><highlight class="stringliteral">&quot;img&quot;</highlight><highlight class="normal">===nodeName&amp;&amp;</highlight><highlight class="stringliteral">&quot;src&quot;</highlight><highlight class="normal">===key)</highlight><highlight class="keyword">this</highlight><highlight class="normal">[key]=value=$$sanitizeUri(value,</highlight><highlight class="stringliteral">&quot;src&quot;</highlight><highlight class="normal">===key);</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;img&quot;</highlight><highlight class="normal">===nodeName&amp;&amp;</highlight><highlight class="stringliteral">&quot;srcset&quot;</highlight><highlight class="normal">===key){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>result=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,trimmedSrcset=trim(value),srcPattern=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/,pattern=/\s/.test(trimmedSrcset)?srcPattern:/(,)/,rawUris=trimmedSrcset.split(pattern),nbrUrisWith2parts=Math.floor(rawUris.length/2),i=0;nbrUrisWith2parts&gt;i;i++){var<sp/>innerIdx=2*i;result+=$$sanitizeUri(trim(rawUris[innerIdx]),!0),result+=</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+trim(rawUris[innerIdx+1])}var<sp/>lastTuple=trim(rawUris[2*i]).split(/\s/);result+=$$sanitizeUri(trim(lastTuple[0]),!0),2===lastTuple.length&amp;&amp;(result+=</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+trim(lastTuple[1])),</highlight><highlight class="keyword">this</highlight><highlight class="normal">[key]=value=result}writeAttr!==!1&amp;&amp;(null===value||value===undefined?this.$$element.removeAttr(attrName):this.$$element.attr(attrName,value));var<sp/>$$observers=this.$$observers;$$observers&amp;&amp;forEach($$observers[observer],</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn){</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{fn(value)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){$exceptionHandler(e)}})},$observe:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(key,fn){var<sp/>attrs=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,$$observers=attrs.$$observers||(attrs.$$observers=createMap()),listeners=$$observers[key]||($$observers[key]=[]);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>listeners.push(fn),$rootScope.$evalAsync(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){!listeners.$$inter&amp;&amp;attrs.hasOwnProperty(key)&amp;&amp;fn(attrs[key])}),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){arrayRemove(listeners,fn)}}};var<sp/>startSymbol=$interpolate.startSymbol(),endSymbol=$interpolate.endSymbol(),denormalizeTemplate=</highlight><highlight class="stringliteral">&quot;{{&quot;</highlight><highlight class="normal">==startSymbol||</highlight><highlight class="stringliteral">&quot;}}&quot;</highlight><highlight class="normal">==endSymbol?identity:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="keyword">template</highlight><highlight class="normal">){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">.replace(/\{\{/g,startSymbol).replace(/}}/g,endSymbol)},NG_ATTR_BINDING=/^ngAttr[A-Z]/;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compile.$$addBindingInfo=debugInfoEnabled?</highlight><highlight class="keyword">function</highlight><highlight class="normal">($element,binding){var<sp/>bindings=$element.data(</highlight><highlight class="stringliteral">&quot;$binding&quot;</highlight><highlight class="normal">)||[];isArray(binding)?bindings=bindings.concat(binding):bindings.push(binding),$element.data(</highlight><highlight class="stringliteral">&quot;$binding&quot;</highlight><highlight class="normal">,bindings)}:noop,compile.$$addBindingClass=debugInfoEnabled?</highlight><highlight class="keyword">function</highlight><highlight class="normal">($element){safeAddClass($element,</highlight><highlight class="stringliteral">&quot;ng-binding&quot;</highlight><highlight class="normal">)}:noop,compile.$$addScopeInfo=debugInfoEnabled?</highlight><highlight class="keyword">function</highlight><highlight class="normal">($element,scope,isolated,noTemplate){var<sp/>dataName=isolated?noTemplate?</highlight><highlight class="stringliteral">&quot;$isolateScopeNoTemplate&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;$isolateScope&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;$scope&quot;</highlight><highlight class="normal">;$element.data(dataName,scope)}:noop,compile.$$addScopeClass=debugInfoEnabled?</highlight><highlight class="keyword">function</highlight><highlight class="normal">($element,isolated){safeAddClass($element,isolated?</highlight><highlight class="stringliteral">&quot;ng-isolate-scope&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;ng-scope&quot;</highlight><highlight class="normal">)}:noop,compile}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>directiveNormalize(name){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>camelCase(name.replace(PREFIX_REGEXP,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>tokenDifference(str1,str2){var<sp/>values=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,tokens1=str1.split(/\s+/),tokens2=str2.split(/\s+/);outer:</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0;i&lt;tokens1.length;i++){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>token=tokens1[i],j=0;j&lt;tokens2.length;j++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(token==tokens2[j])</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"><sp/>outer;values+=(values.length&gt;0?</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+token}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>values}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>removeComments(jqNodes){jqNodes=jqLite(jqNodes);var<sp/>i=jqNodes.length;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(1&gt;=i)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jqNodes;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;i--;){var<sp/>node=jqNodes[i];node.nodeType===NODE_TYPE_COMMENT&amp;&amp;splice.call(jqNodes,i,1)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jqNodes}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>identifierForController(controller,ident){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ident&amp;&amp;isString(ident))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ident;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isString(controller)){var<sp/>match=CNTRL_REG.exec(controller);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(match)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>match[3]}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$ControllerProvider(){var<sp/>controllers={},globals=!1;this.</highlight><highlight class="keyword">register</highlight><highlight class="normal">=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(name,constructor){assertNotHasOwnProperty(name,</highlight><highlight class="stringliteral">&quot;controller&quot;</highlight><highlight class="normal">),isObject(name)?extend(controllers,name):controllers[name]=constructor},this.allowGlobals=function(){globals=!0},this.$get=[</highlight><highlight class="stringliteral">&quot;$injector&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$window&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($injector,$window){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>addIdentifier(locals,identifier,instance,name){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!locals||!isObject(locals.$scope))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>minErr(</highlight><highlight class="stringliteral">&quot;$controller&quot;</highlight><highlight class="normal">)(</highlight><highlight class="stringliteral">&quot;noscp&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>export<sp/>controller<sp/>&apos;{0}&apos;<sp/>as<sp/>&apos;{1}&apos;!<sp/>No<sp/>$scope<sp/>object<sp/>provided<sp/>via<sp/>`locals`.&quot;</highlight><highlight class="normal">,name,identifier);locals.$scope[identifier]=instance}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(expression,locals,later,ident){var<sp/>instance,match,constructor,identifier;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(later=later===!0,ident&amp;&amp;isString(ident)&amp;&amp;(identifier=ident),isString(expression)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(match=expression.match(CNTRL_REG),!match)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$controllerMinErr(</highlight><highlight class="stringliteral">&quot;ctrlfmt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Badly<sp/>formed<sp/>controller<sp/>string<sp/>&apos;{0}&apos;.<sp/>Must<sp/>match<sp/>`__name__<sp/>as<sp/>__id__`<sp/>or<sp/>`__name__`.&quot;</highlight><highlight class="normal">,expression);constructor=match[1],identifier=identifier||match[3],expression=controllers.hasOwnProperty(constructor)?controllers[constructor]:getter(locals.$scope,constructor,!0)||(globals?getter($window,constructor,!0):undefined),assertArgFn(expression,constructor,!0)}if(later){var<sp/>controllerPrototype=(isArray(expression)?expression[expression.length-1]:expression).prototype;instance=Object.create(controllerPrototype||null),identifier&amp;&amp;addIdentifier(locals,identifier,instance,constructor||expression.name);var<sp/>instantiate;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instantiate=extend(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>result=$injector.invoke(expression,instance,locals,constructor);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result!==instance&amp;&amp;(isObject(result)||isFunction(result))&amp;&amp;(instance=result,identifier&amp;&amp;addIdentifier(locals,identifier,instance,constructor||expression.name)),instance},{instance:instance,identifier:identifier})}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance=$injector.instantiate(expression,locals,constructor),identifier&amp;&amp;addIdentifier(locals,identifier,instance,constructor||expression.name),instance}}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$DocumentProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$window&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(window){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jqLite(window.document)}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$ExceptionHandlerProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$log&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($log){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(exception,cause){$log.error.apply($log,arguments)}}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>serializeValue(v){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isObject(v)?isDate(v)?v.toISOString():toJson(v):v}function<sp/>$HttpParamSerializerProvider(){this.$get=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(params){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!params)</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;var<sp/>parts=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEachSorted(params,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,key){null===value||isUndefined(value)||(isArray(value)?forEach(value,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(v,k){parts.push(encodeUriQuery(key)+</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">+encodeUriQuery(serializeValue(v)))}):parts.push(encodeUriQuery(key)+</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">+encodeUriQuery(serializeValue(value))))}),parts.join(</highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">)}}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$HttpParamSerializerJQLikeProvider(){this.$get=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(params){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>serialize(toSerialize,prefix,topLevel){null===toSerialize||isUndefined(toSerialize)||(isArray(toSerialize)?forEach(toSerialize,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){serialize(value,prefix+</highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal">)}):isObject(toSerialize)&amp;&amp;!isDate(toSerialize)?forEachSorted(toSerialize,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,key){serialize(value,prefix+(topLevel?</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">)+key+(topLevel?</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">))}):parts.push(encodeUriQuery(prefix)+</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">+encodeUriQuery(serializeValue(toSerialize))))}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!params)</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;var<sp/>parts=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>serialize(params,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,!0),parts.join(</highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">)}}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>defaultHttpResponseTransform(data,headers){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isString(data)){var<sp/>tempData=data.replace(JSON_PROTECTION_PREFIX,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).trim();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tempData){var<sp/>contentType=headers(</highlight><highlight class="stringliteral">&quot;Content-Type&quot;</highlight><highlight class="normal">);(contentType&amp;&amp;0===contentType.indexOf(APPLICATION_JSON)||isJsonLike(tempData))&amp;&amp;(data=fromJson(tempData))}}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>isJsonLike(str){var<sp/>jsonStart=str.match(JSON_START);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jsonStart&amp;&amp;JSON_ENDS[jsonStart[0]].test(str)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>parseHeaders(headers){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>fillInParsed(key,val){key&amp;&amp;(parsed[key]=parsed[key]?parsed[key]+</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">+val:val)}var<sp/>i,parsed=createMap();</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isString(headers)?forEach(headers.split(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(line){i=line.indexOf(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">),fillInParsed(lowercase(trim(line.substr(0,i))),trim(line.substr(i+1)))}):isObject(headers)&amp;&amp;forEach(headers,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(headerVal,headerKey){fillInParsed(lowercase(headerKey),trim(headerVal))}),parsed}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>headersGetter(headers){var<sp/>headersObj;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(name){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(headersObj||(headersObj=parseHeaders(headers)),name){var<sp/>value=headersObj[lowercase(name)];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0===value&amp;&amp;(value=null),value}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>headersObj}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>transformData(data,headers,status,fns){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isFunction(fns)?fns(data,headers,status):(forEach(fns,function(fn){data=fn(data,headers,status)}),data)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>isSuccess(status){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status&gt;=200&amp;&amp;300&gt;status}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$HttpProvider(){var<sp/>defaults=this.defaults={transformResponse:[defaultHttpResponseTransform],transformRequest:[</highlight><highlight class="keyword">function</highlight><highlight class="normal">(d){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!isObject(d)||isFile(d)||isBlob(d)||isFormData(d)?d:toJson(d)}],headers:{common:{Accept:</highlight><highlight class="stringliteral">&quot;application/json,<sp/>text/plain,<sp/>*/*&quot;</highlight><highlight class="normal">},post:shallowCopy(CONTENT_TYPE_APPLICATION_JSON),put:shallowCopy(CONTENT_TYPE_APPLICATION_JSON),patch:shallowCopy(CONTENT_TYPE_APPLICATION_JSON)},xsrfCookieName:</highlight><highlight class="stringliteral">&quot;XSRF-TOKEN&quot;</highlight><highlight class="normal">,xsrfHeaderName:</highlight><highlight class="stringliteral">&quot;X-XSRF-TOKEN&quot;</highlight><highlight class="normal">,paramSerializer:</highlight><highlight class="stringliteral">&quot;$httpParamSerializer&quot;</highlight><highlight class="normal">},useApplyAsync=!1;this.useApplyAsync=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isDefined(value)?(useApplyAsync=!!value,</highlight><highlight class="keyword">this</highlight><highlight class="normal">):useApplyAsync};var<sp/>interceptorFactories=this.interceptors=[];this.$get=[</highlight><highlight class="stringliteral">&quot;$httpBackend&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$$cookieReader&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$cacheFactory&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$rootScope&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$injector&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($httpBackend,$$cookieReader,$cacheFactory,$rootScope,<ref refid="getrss_8php_1abb0f8f809252372e25f48d52b63ef29d" kindref="member">$q</ref>,$injector){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$http(requestConfig){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>transformResponse(response){var<sp/>resp=extend({},response);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response.data?resp.data=transformData(response.data,response.headers,response.status,config.transformResponse):resp.data=response.data,isSuccess(response.status)?resp:$q.reject(resp)}function<sp/>executeHeaderFns(headers,config){var<sp/>headerContent,processedHeaders={};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(headers,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(headerFn,header){isFunction(headerFn)?(headerContent=headerFn(config),null!=headerContent&amp;&amp;(processedHeaders[header]=headerContent)):processedHeaders[header]=headerFn}),processedHeaders}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>mergeHeaders(config){var<sp/>defHeaderName,lowercaseDefHeaderName,reqHeaderName,defHeaders=defaults.headers,reqHeaders=extend({},config.headers);defHeaders=extend({},defHeaders.common,defHeaders[lowercase(config.method)]);defaultHeadersIteration:</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(defHeaderName<sp/>in<sp/>defHeaders){lowercaseDefHeaderName=lowercase(defHeaderName);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(reqHeaderName<sp/>in<sp/>reqHeaders)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lowercase(reqHeaderName)===lowercaseDefHeaderName)</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"><sp/>defaultHeadersIteration;reqHeaders[defHeaderName]=defHeaders[defHeaderName]}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>executeHeaderFns(reqHeaders,shallowCopy(config))}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!angular.isObject(requestConfig))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>minErr(</highlight><highlight class="stringliteral">&quot;$http&quot;</highlight><highlight class="normal">)(</highlight><highlight class="stringliteral">&quot;badreq&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Http<sp/>request<sp/>configuration<sp/>must<sp/>be<sp/>an<sp/>object.<sp/><sp/>Received:<sp/>{0}&quot;</highlight><highlight class="normal">,requestConfig);var<sp/>config=extend({method:</highlight><highlight class="stringliteral">&quot;get&quot;</highlight><highlight class="normal">,transformRequest:defaults.transformRequest,transformResponse:defaults.transformResponse,paramSerializer:defaults.paramSerializer},requestConfig);config.headers=mergeHeaders(requestConfig),config.method=uppercase(config.method),config.paramSerializer=isString(config.paramSerializer)?$injector.get(config.paramSerializer):config.paramSerializer;var<sp/>serverRequest=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(config){var<sp/>headers=config.headers,reqData=transformData(config.data,headersGetter(headers),undefined,config.transformRequest);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isUndefined(reqData)&amp;&amp;forEach(headers,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,header){</highlight><highlight class="stringliteral">&quot;content-type&quot;</highlight><highlight class="normal">===lowercase(header)&amp;&amp;</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>headers[header]}),isUndefined(config.withCredentials)&amp;&amp;!isUndefined(defaults.withCredentials)&amp;&amp;(config.withCredentials=defaults.withCredentials),sendReq(config,reqData).then(transformResponse,transformResponse)},chain=[serverRequest,undefined],promise=$q.when(config);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(forEach(reversedInterceptors,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(interceptor){(interceptor.request||interceptor.requestError)&amp;&amp;chain.unshift(interceptor.request,interceptor.requestError),(interceptor.response||interceptor.responseError)&amp;&amp;chain.push(interceptor.response,interceptor.responseError)});chain.length;){var<sp/>thenFn=chain.shift(),rejectFn=chain.shift();promise=promise.then(thenFn,rejectFn)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>promise.success=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>assertArgFn(fn,</highlight><highlight class="stringliteral">&quot;fn&quot;</highlight><highlight class="normal">),promise.then(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(response){fn(response.data,response.status,response.headers,config)}),promise},promise.error=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>assertArgFn(fn,</highlight><highlight class="stringliteral">&quot;fn&quot;</highlight><highlight class="normal">),promise.then(null,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(response){fn(response.data,response.status,response.headers,config)}),promise},promise}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createShortMethods(names){forEach(arguments,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(name){$http[name]=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(url,config){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$http(extend({},config||{},{method:name,url:url}))}})}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createShortMethodsWithData(name){forEach(arguments,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(name){$http[name]=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(url,data,config){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$http(extend({},config||{},{method:name,url:url,data:data}))}})}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>sendReq(config,reqData){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>done(status,response,headersString,statusText){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>resolveHttpPromise(){resolvePromise(response,status,headersString,statusText)}cache&amp;&amp;(isSuccess(status)?cache.put(url,[status,response,parseHeaders(headersString),statusText]):cache.remove(url)),useApplyAsync?$rootScope.$applyAsync(resolveHttpPromise):(resolveHttpPromise(),$rootScope.$$phase||$rootScope.$apply())}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>resolvePromise(response,status,headers,statusText){status=Math.max(status,0),(isSuccess(status)?deferred.resolve:deferred.reject)({data:response,status:status,headers:headersGetter(headers),config:config,statusText:statusText})}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>resolvePromiseWithResult(result){resolvePromise(result.data,result.status,shallowCopy(result.headers()),result.statusText)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>removePendingReq(){var<sp/>idx=$http.pendingRequests.indexOf(config);-1!==idx&amp;&amp;$http.pendingRequests.splice(idx,1)}var<sp/>cache,cachedResp,deferred=$q.defer(),promise=deferred.promise,reqHeaders=config.headers,url=buildUrl(config.url,config.paramSerializer(config.params));</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">($http.pendingRequests.push(config),promise.then(removePendingReq,removePendingReq),!config.cache&amp;&amp;!defaults.cache||config.cache===!1||</highlight><highlight class="stringliteral">&quot;GET&quot;</highlight><highlight class="normal">!==config.method&amp;&amp;</highlight><highlight class="stringliteral">&quot;JSONP&quot;</highlight><highlight class="normal">!==config.method||(cache=isObject(config.cache)?config.cache:isObject(defaults.cache)?defaults.cache:defaultCache),cache&amp;&amp;(cachedResp=cache.get(url),isDefined(cachedResp)?isPromiseLike(cachedResp)?cachedResp.then(resolvePromiseWithResult,resolvePromiseWithResult):isArray(cachedResp)?resolvePromise(cachedResp[1],cachedResp[0],shallowCopy(cachedResp[2]),cachedResp[3]):resolvePromise(cachedResp,200,{},</highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">):cache.put(url,promise)),isUndefined(cachedResp)){var<sp/>xsrfValue=urlIsSameOrigin(config.url)?$$cookieReader()[config.xsrfCookieName||defaults.xsrfCookieName]:undefined;xsrfValue&amp;&amp;(reqHeaders[config.xsrfHeaderName||defaults.xsrfHeaderName]=xsrfValue),$httpBackend(config.method,url,reqData,done,reqHeaders,config.timeout,config.withCredentials,config.responseType)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>promise}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>buildUrl(url,serializedParams){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>serializedParams.length&gt;0&amp;&amp;(url+=(-1==url.indexOf(</highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">)?</highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">)+serializedParams),url}var<sp/>defaultCache=$cacheFactory(</highlight><highlight class="stringliteral">&quot;$http&quot;</highlight><highlight class="normal">);defaults.paramSerializer=isString(defaults.paramSerializer)?$injector.get(defaults.paramSerializer):defaults.paramSerializer;var<sp/>reversedInterceptors=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(interceptorFactories,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(interceptorFactory){reversedInterceptors.unshift(isString(interceptorFactory)?$injector.get(interceptorFactory):$injector.invoke(interceptorFactory))}),$http.pendingRequests=[],createShortMethods(</highlight><highlight class="stringliteral">&quot;get&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;delete&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;head&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;jsonp&quot;</highlight><highlight class="normal">),createShortMethodsWithData(</highlight><highlight class="stringliteral">&quot;post&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;put&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;patch&quot;</highlight><highlight class="normal">),$http.defaults=defaults,$http}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createXhr(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>window.XMLHttpRequest}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$HttpBackendProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$browser&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$window&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$document&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($browser,$window,$document){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>createHttpBackend($browser,createXhr,$browser.defer,$window.angular.callbacks,$document[0])}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createHttpBackend($browser,createXhr,$browserDefer,callbacks,rawDocument){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>jsonpReq(url,callbackId,done){var<sp/>script=rawDocument.createElement(</highlight><highlight class="stringliteral">&quot;script&quot;</highlight><highlight class="normal">),callback=null;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>script.type=</highlight><highlight class="stringliteral">&quot;text/javascript&quot;</highlight><highlight class="normal">,script.src=url,script.async=!0,callback=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(event){removeEventListenerFn(script,</highlight><highlight class="stringliteral">&quot;load&quot;</highlight><highlight class="normal">,callback),removeEventListenerFn(script,</highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">,callback),rawDocument.body.removeChild(script),script=null;var<sp/>status=-1,text=</highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">;</highlight><highlight class="keyword">event</highlight><highlight class="normal">&amp;&amp;(</highlight><highlight class="stringliteral">&quot;load&quot;</highlight><highlight class="normal">!==</highlight><highlight class="keyword">event</highlight><highlight class="normal">.type||callbacks[callbackId].called||(</highlight><highlight class="keyword">event</highlight><highlight class="normal">={type:</highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">}),text=event.type,status=</highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">===event.type?404:200),done&amp;&amp;done(status,text)},addEventListenerFn(script,</highlight><highlight class="stringliteral">&quot;load&quot;</highlight><highlight class="normal">,callback),addEventListenerFn(script,</highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">,callback),rawDocument.body.appendChild(script),callback}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(method,url,post,callback,headers,timeout,withCredentials,responseType){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>timeoutRequest(){jsonpDone&amp;&amp;jsonpDone(),xhr&amp;&amp;xhr.abort()}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>completeRequest(callback,status,response,headersString,statusText){timeoutId!==undefined&amp;&amp;$browserDefer.cancel(timeoutId),</highlight></codeline>
<codeline lineno="8"><highlight class="normal">jsonpDone=xhr=null,callback(status,response,headersString,statusText),$browser.$$completeOutstandingRequest(noop)}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">($browser.$$incOutstandingRequestCount(),url=url||$browser.url(),</highlight><highlight class="stringliteral">&quot;jsonp&quot;</highlight><highlight class="normal">==lowercase(method)){var<sp/>callbackId=</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">+(callbacks.counter++).toString(36);callbacks[callbackId]=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(data){callbacks[callbackId].data=data,callbacks[callbackId].called=!0};var<sp/>jsonpDone=jsonpReq(url.replace(</highlight><highlight class="stringliteral">&quot;JSON_CALLBACK&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;angular.callbacks.&quot;</highlight><highlight class="normal">+callbackId),callbackId,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(status,text){completeRequest(callback,status,callbacks[callbackId].data,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,text),callbacks[callbackId]=noop})}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{var<sp/>xhr=createXhr();xhr.open(method,url,!0),forEach(headers,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,key){isDefined(value)&amp;&amp;xhr.setRequestHeader(key,value)}),xhr.onload=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>statusText=xhr.statusText||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,response=</highlight><highlight class="stringliteral">&quot;response&quot;</highlight><highlight class="normal">in<sp/>xhr?xhr.response:xhr.responseText,status=1223===xhr.status?204:xhr.status;0===status&amp;&amp;(status=response?200:</highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">==urlResolve(url).protocol?404:0),completeRequest(callback,status,response,xhr.getAllResponseHeaders(),statusText)};var<sp/>requestError=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){completeRequest(callback,-1,null,null,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)};</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xhr.onerror=requestError,xhr.onabort=requestError,withCredentials&amp;&amp;(xhr.withCredentials=!0),responseType)</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{xhr.responseType=responseType}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;json&quot;</highlight><highlight class="normal">!==responseType)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>e}xhr.send(post)}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeout&gt;0)var<sp/>timeoutId=$browserDefer(timeoutRequest,timeout);</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>isPromiseLike(timeout)&amp;&amp;timeout.then(timeoutRequest)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$InterpolateProvider(){var<sp/>startSymbol=</highlight><highlight class="stringliteral">&quot;{{&quot;</highlight><highlight class="normal">,endSymbol=</highlight><highlight class="stringliteral">&quot;}}&quot;</highlight><highlight class="normal">;this.startSymbol=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value?(startSymbol=value,</highlight><highlight class="keyword">this</highlight><highlight class="normal">):startSymbol},this.endSymbol=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value?(endSymbol=value,</highlight><highlight class="keyword">this</highlight><highlight class="normal">):endSymbol},this.$get=[</highlight><highlight class="stringliteral">&quot;$parse&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$exceptionHandler&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$sce&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($parse,$exceptionHandler,$sce){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>escape(ch){</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;\\\\\\&quot;</highlight><highlight class="normal">+ch}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>unescapeText(text){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>text.replace(escapedStartRegexp,startSymbol).replace(escapedEndRegexp,endSymbol)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>stringify(value){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(null==value)</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(typeof<sp/>value){</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal">:value=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">+value;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:value=toJson(value)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$interpolate(text,mustHaveExpression,trustedContext,allOrNothing){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>parseStringifyInterceptor(value){</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value=getValue(value),allOrNothing&amp;&amp;!isDefined(value)?value:stringify(value)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(err){$exceptionHandler($interpolateMinErr.interr(text,err))}}allOrNothing=!!allOrNothing;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>startIndex,endIndex,exp,index=0,expressions=[],parseFns=[],textLength=text.length,concat=[],expressionPositions=[];textLength&gt;index;){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(-1==(startIndex=text.indexOf(startSymbol,index))||-1==(endIndex=text.indexOf(endSymbol,startIndex+startSymbolLength))){index!==textLength&amp;&amp;concat.push(unescapeText(text.substring(index)));</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">}index!==startIndex&amp;&amp;concat.push(unescapeText(text.substring(index,startIndex))),exp=text.substring(startIndex+startSymbolLength,endIndex),expressions.push(exp),parseFns.push($parse(exp,parseStringifyInterceptor)),index=endIndex+endSymbolLength,expressionPositions.push(concat.length),concat.push(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(trustedContext&amp;&amp;concat.length&gt;1&amp;&amp;$interpolateMinErr.throwNoconcat(text),!mustHaveExpression||expressions.length){var<sp/>compute=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(values){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0,ii=expressions.length;ii&gt;i;i++){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(allOrNothing&amp;&amp;isUndefined(values[i]))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;concat[expressionPositions[i]]=values[i]}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>concat.join(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)},getValue=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trustedContext?$sce.getTrusted(trustedContext,value):$sce.valueOf(value)};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>extend(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(context){var<sp/>i=0,ii=expressions.length,values=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Array(ii);</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;ii&gt;i;i++)values[i]=parseFns[i](context);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compute(values)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(err){$exceptionHandler($interpolateMinErr.interr(text,err))}},{exp:text,expressions:expressions,$$watchDelegate:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope,listener){var<sp/>lastValue;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scope.$watchGroup(parseFns,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(values,oldValues){var<sp/>currValue=compute(values);isFunction(listener)&amp;&amp;listener.call(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,currValue,values!==oldValues?lastValue:currValue,scope),lastValue=currValue})}})}}var<sp/>startSymbolLength=startSymbol.length,endSymbolLength=endSymbol.length,escapedStartRegexp=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(startSymbol.replace(/./g,escape),</highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">),escapedEndRegexp=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(endSymbol.replace(/./g,escape),</highlight><highlight class="stringliteral">&quot;g&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$interpolate.startSymbol=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>startSymbol},$interpolate.endSymbol=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>endSymbol},$interpolate}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$IntervalProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$rootScope&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$window&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$$q&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($rootScope,$window,<ref refid="getrss_8php_1abb0f8f809252372e25f48d52b63ef29d" kindref="member">$q</ref>,$<ref refid="getrss_8php_1abb0f8f809252372e25f48d52b63ef29d" kindref="member">$q</ref>){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>interval(fn,delay,count,invokeApply){var<sp/>hasParams=arguments.length&gt;4,args=hasParams?sliceArgs(arguments,4):[],setInterval=$window.setInterval,clearInterval=$window.clearInterval,iteration=0,skipApply=isDefined(invokeApply)&amp;&amp;!invokeApply,deferred=(skipApply?$$q:$q).defer(),promise=deferred.promise;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count=isDefined(count)?count:0,promise.then(null,null,hasParams?</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){fn.apply(null,args)}:fn),promise.$$intervalId=setInterval(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){deferred.notify(iteration++),count&gt;0&amp;&amp;iteration&gt;=count&amp;&amp;(deferred.resolve(iteration),clearInterval(promise.$$intervalId),</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>intervals[promise.$$intervalId]),skipApply||$rootScope.$apply()},delay),intervals[promise.$$intervalId]=deferred,promise}var<sp/>intervals={};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>interval.cancel=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(promise){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>promise&amp;&amp;promise.$$intervalId<sp/>in<sp/>intervals?(intervals[promise.$$intervalId].reject(</highlight><highlight class="stringliteral">&quot;canceled&quot;</highlight><highlight class="normal">),$window.clearInterval(promise.$$intervalId),</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>intervals[promise.$$intervalId],!0):!1},interval}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$LocaleProvider(){this.$get=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;en-us&quot;</highlight><highlight class="normal">,NUMBER_FORMATS:{DECIMAL_SEP:</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">,GROUP_SEP:</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,PATTERNS:[{minInt:1,minFrac:0,maxFrac:3,posPre:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,posSuf:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,negPre:</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,negSuf:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,gSize:3,lgSize:3},{minInt:1,minFrac:2,maxFrac:2,posPre:</highlight><highlight class="stringliteral">&quot;¤&quot;</highlight><highlight class="normal">,posSuf:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,negPre:</highlight><highlight class="stringliteral">&quot;(¤&quot;</highlight><highlight class="normal">,negSuf:</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">,gSize:3,lgSize:3}],CURRENCY_SYM:</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">},DATETIME_FORMATS:{MONTH:</highlight><highlight class="stringliteral">&quot;January,February,March,April,May,June,July,August,September,October,November,December&quot;</highlight><highlight class="normal">.split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),SHORTMONTH:</highlight><highlight class="stringliteral">&quot;Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec&quot;</highlight><highlight class="normal">.split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),DAY:</highlight><highlight class="stringliteral">&quot;Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday&quot;</highlight><highlight class="normal">.split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),SHORTDAY:</highlight><highlight class="stringliteral">&quot;Sun,Mon,Tue,Wed,Thu,Fri,Sat&quot;</highlight><highlight class="normal">.split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),AMPMS:[</highlight><highlight class="stringliteral">&quot;AM&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;PM&quot;</highlight><highlight class="normal">],medium:</highlight><highlight class="stringliteral">&quot;MMM<sp/>d,<sp/>y<sp/>h:mm:ss<sp/>a&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;short&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;M/d/yy<sp/>h:mm<sp/>a&quot;</highlight><highlight class="normal">,fullDate:</highlight><highlight class="stringliteral">&quot;EEEE,<sp/>MMMM<sp/>d,<sp/>y&quot;</highlight><highlight class="normal">,longDate:</highlight><highlight class="stringliteral">&quot;MMMM<sp/>d,<sp/>y&quot;</highlight><highlight class="normal">,mediumDate:</highlight><highlight class="stringliteral">&quot;MMM<sp/>d,<sp/>y&quot;</highlight><highlight class="normal">,shortDate:</highlight><highlight class="stringliteral">&quot;M/d/yy&quot;</highlight><highlight class="normal">,mediumTime:</highlight><highlight class="stringliteral">&quot;h:mm:ss<sp/>a&quot;</highlight><highlight class="normal">,shortTime:</highlight><highlight class="stringliteral">&quot;h:mm<sp/>a&quot;</highlight><highlight class="normal">,ERANAMES:[</highlight><highlight class="stringliteral">&quot;Before<sp/>Christ&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Anno<sp/>Domini&quot;</highlight><highlight class="normal">],ERAS:[</highlight><highlight class="stringliteral">&quot;BC&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;AD&quot;</highlight><highlight class="normal">]},pluralCat:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(num){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1===num?</highlight><highlight class="stringliteral">&quot;one&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;other&quot;</highlight><highlight class="normal">}}}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>encodePath(path){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>segments=path.split(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">),i=segments.length;i--;)segments[i]=encodeUriSegment(segments[i]);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>segments.join(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>parseAbsoluteUrl(absoluteUrl,locationObj){var<sp/>parsedUrl=urlResolve(absoluteUrl);locationObj.$$protocol=parsedUrl.protocol,locationObj.$$host=parsedUrl.hostname,locationObj.$$port=toInt(parsedUrl.port)||DEFAULT_PORTS[parsedUrl.protocol]||null}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>parseAppUrl(relativeUrl,locationObj){var<sp/>prefixed=</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">!==relativeUrl.charAt(0);prefixed&amp;&amp;(relativeUrl=</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+relativeUrl);var<sp/>match=urlResolve(relativeUrl);locationObj.$$path=decodeURIComponent(prefixed&amp;&amp;</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">===match.pathname.charAt(0)?match.pathname.substring(1):match.pathname),locationObj.$$search=parseKeyValue(match.search),locationObj.$$hash=decodeURIComponent(match.hash),locationObj.$$path&amp;&amp;</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">!=locationObj.$$path.charAt(0)&amp;&amp;(locationObj.$$path=</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+locationObj.$$path)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>beginsWith(begin,whole){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0===whole.indexOf(begin)?whole.substr(begin.length):</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>stripHash(url){var<sp/>index=url.indexOf(</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">-1==index?url:url.substr(0,index)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>trimEmptyHash(url){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>url.replace(/(#.+)|#$/,</highlight><highlight class="stringliteral">&quot;$1&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>stripFile(url){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>url.substr(0,stripHash(url).lastIndexOf(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)+1)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>serverBase(url){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>url.substring(0,url.indexOf(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,url.indexOf(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal">)+2))}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>LocationHtml5Url(appBase,basePrefix){this.$$html5=!0,basePrefix=basePrefix||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;var<sp/>appBaseNoFile=stripFile(appBase);parseAbsoluteUrl(appBase,</highlight><highlight class="keyword">this</highlight><highlight class="normal">),this.$$parse=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(url){var<sp/>pathUrl=beginsWith(appBaseNoFile,url);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isString(pathUrl))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$locationMinErr(</highlight><highlight class="stringliteral">&quot;ipthprfx&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Invalid<sp/>url<sp/>&quot;{0}&quot;,<sp/>missing<sp/>path<sp/>prefix<sp/>&quot;{1}&quot;.&apos;</highlight><highlight class="normal">,url,appBaseNoFile);parseAppUrl(pathUrl,</highlight><highlight class="keyword">this</highlight><highlight class="normal">),this.$$path||(this.$$path=</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">),this.$$compose()},this.$$compose=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>search=toKeyValue(this.$$search),hash=this.$$hash?</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">+encodeUriSegment(this.$$hash):</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;this.$$url=encodePath(this.$$path)+(search?</highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">+search:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+hash,this.$$absUrl=appBaseNoFile+this.$$url.substr(1)},this.$$parseLinkUrl=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(url,relHref){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(relHref&amp;&amp;</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">===relHref[0])</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.hash(relHref.slice(1)),!0;var<sp/>appUrl,prevAppUrl,rewrittenUrl;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(appUrl=beginsWith(appBase,url))!==undefined?(prevAppUrl=appUrl,rewrittenUrl=(appUrl=beginsWith(basePrefix,appUrl))!==undefined?appBaseNoFile+(beginsWith(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,appUrl)||appUrl):appBase+prevAppUrl):(appUrl=beginsWith(appBaseNoFile,url))!==undefined?rewrittenUrl=appBaseNoFile+appUrl:appBaseNoFile==url+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">&amp;&amp;(rewrittenUrl=appBaseNoFile),rewrittenUrl&amp;&amp;this.$$parse(rewrittenUrl),!!rewrittenUrl}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>LocationHashbangUrl(appBase,hashPrefix){var<sp/>appBaseNoFile=stripFile(appBase);parseAbsoluteUrl(appBase,</highlight><highlight class="keyword">this</highlight><highlight class="normal">),this.$$parse=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(url){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>removeWindowsDriveName(path,url,base){var<sp/>firstPathSegmentMatch,windowsFilePathExp=/^\/[A-Z]:(\/.*)/;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0===url.indexOf(base)&amp;&amp;(url=url.replace(base,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)),windowsFilePathExp.exec(url)?path:(firstPathSegmentMatch=windowsFilePathExp.exec(path),firstPathSegmentMatch?firstPathSegmentMatch[1]:path)}var<sp/>withoutHashUrl,withoutBaseUrl=beginsWith(appBase,url)||beginsWith(appBaseNoFile,url);</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">===withoutBaseUrl.charAt(0)?(withoutHashUrl=beginsWith(hashPrefix,withoutBaseUrl),isUndefined(withoutHashUrl)&amp;&amp;(withoutHashUrl=withoutBaseUrl)):withoutHashUrl=this.$$html5?withoutBaseUrl:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,parseAppUrl(withoutHashUrl,</highlight><highlight class="keyword">this</highlight><highlight class="normal">),this.$$path=removeWindowsDriveName(this.$$path,withoutHashUrl,appBase),this.$$compose()},this.$$compose=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>search=toKeyValue(this.$$search),hash=this.$$hash?</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">+encodeUriSegment(this.$$hash):</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;this.$$url=encodePath(this.$$path)+(search?</highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">+search:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+hash,this.$$absUrl=appBase+(this.$$url?hashPrefix+this.$$url:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)},this.$$parseLinkUrl=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(url,relHref){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stripHash(appBase)==stripHash(url)?(this.$$parse(url),!0):!1}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>LocationHashbangInHtml5Url(appBase,hashPrefix){this.$$html5=!0,LocationHashbangUrl.apply(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,arguments);var<sp/>appBaseNoFile=stripFile(appBase);this.$$parseLinkUrl=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(url,relHref){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(relHref&amp;&amp;</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">===relHref[0])</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.hash(relHref.slice(1)),!0;var<sp/>rewrittenUrl,appUrl;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>appBase==stripHash(url)?rewrittenUrl=url:(appUrl=beginsWith(appBaseNoFile,url))?rewrittenUrl=appBase+hashPrefix+appUrl:appBaseNoFile===url+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">&amp;&amp;(rewrittenUrl=appBaseNoFile),rewrittenUrl&amp;&amp;this.$$parse(rewrittenUrl),!!rewrittenUrl},this.$$compose=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>search=toKeyValue(this.$$search),hash=this.$$hash?</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">+encodeUriSegment(this.$$hash):</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;this.$$url=encodePath(this.$$path)+(search?</highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">+search:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+hash,this.$$absUrl=appBase+hashPrefix+this.$$url}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>locationGetter(property){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">[property]}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>locationGetterSetter(property,preprocess){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isUndefined(value)?</highlight><highlight class="keyword">this</highlight><highlight class="normal">[property]:(</highlight><highlight class="keyword">this</highlight><highlight class="normal">[property]=preprocess(value),this.$$compose(),</highlight><highlight class="keyword">this</highlight><highlight class="normal">)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$LocationProvider(){var<sp/>hashPrefix=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,html5Mode={enabled:!1,requireBase:!0,rewriteLinks:!0};this.hashPrefix=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(prefix){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isDefined(prefix)?(hashPrefix=prefix,</highlight><highlight class="keyword">this</highlight><highlight class="normal">):hashPrefix},this.html5Mode=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(mode){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isBoolean(mode)?(html5Mode.enabled=mode,</highlight><highlight class="keyword">this</highlight><highlight class="normal">):isObject(mode)?(isBoolean(mode.enabled)&amp;&amp;(html5Mode.enabled=mode.enabled),isBoolean(mode.requireBase)&amp;&amp;(html5Mode.requireBase=mode.requireBase),isBoolean(mode.rewriteLinks)&amp;&amp;(html5Mode.rewriteLinks=mode.rewriteLinks),</highlight><highlight class="keyword">this</highlight><highlight class="normal">):html5Mode},this.$get=[</highlight><highlight class="stringliteral">&quot;$rootScope&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$browser&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$sniffer&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$rootElement&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$window&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($rootScope,$browser,$sniffer,$rootElement,$window){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>setBrowserUrlWithFallback(url,replace,state){var<sp/>oldUrl=$location.url(),oldState=$location.$$state;</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{$browser.url(url,replace,state),$location.$$state=$browser.state()}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$location.url(oldUrl),$location.$$state=oldState,e}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>afterLocationChange(oldUrl,oldState){$rootScope.$broadcast(</highlight><highlight class="stringliteral">&quot;$locationChangeSuccess&quot;</highlight><highlight class="normal">,$location.absUrl(),oldUrl,$location.$$state,oldState)}var<sp/>$location,LocationMode,appBase,baseHref=$browser.baseHref(),initialUrl=$browser.url();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(html5Mode.enabled){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!baseHref&amp;&amp;html5Mode.requireBase)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$locationMinErr(</highlight><highlight class="stringliteral">&quot;nobase&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$location<sp/>in<sp/>HTML5<sp/>mode<sp/>requires<sp/>a<sp/>&lt;base&gt;<sp/>tag<sp/>to<sp/>be<sp/>present!&quot;</highlight><highlight class="normal">);appBase=serverBase(initialUrl)+(baseHref||</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">),LocationMode=$sniffer.history?LocationHtml5Url:LocationHashbangInHtml5Url}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>appBase=stripHash(initialUrl),LocationMode=LocationHashbangUrl;$location=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LocationMode(appBase,</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">+hashPrefix),$location.$$parseLinkUrl(initialUrl,initialUrl),$location.$$state=$browser.state();var<sp/>IGNORE_URI_REGEXP=/^\s*(javascript|mailto):/i;$rootElement.on(</highlight><highlight class="stringliteral">&quot;click&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(event){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(html5Mode.rewriteLinks&amp;&amp;!event.ctrlKey&amp;&amp;!event.metaKey&amp;&amp;!event.shiftKey&amp;&amp;2!=event.which&amp;&amp;2!=event.button){for(var<sp/>elm=jqLite(event.target);</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">!==nodeName_(elm[0]);)if(elm[0]===$rootElement[0]||!(elm=elm.parent())[0])return;var<sp/>absHref=elm.prop(</highlight><highlight class="stringliteral">&quot;href&quot;</highlight><highlight class="normal">),relHref=elm.attr(</highlight><highlight class="stringliteral">&quot;href&quot;</highlight><highlight class="normal">)||elm.attr(</highlight><highlight class="stringliteral">&quot;xlink:href&quot;</highlight><highlight class="normal">);isObject(absHref)&amp;&amp;</highlight><highlight class="stringliteral">&quot;[object<sp/>SVGAnimatedString]&quot;</highlight><highlight class="normal">===absHref.toString()&amp;&amp;(absHref=urlResolve(absHref.animVal).href),IGNORE_URI_REGEXP.test(absHref)||!absHref||elm.attr(</highlight><highlight class="stringliteral">&quot;target&quot;</highlight><highlight class="normal">)||event.isDefaultPrevented()||$location.$$parseLinkUrl(absHref,relHref)&amp;&amp;(event.preventDefault(),$location.absUrl()!=$browser.url()&amp;&amp;($rootScope.$apply(),$window.angular[</highlight><highlight class="stringliteral">&quot;ff-684208-preventDefault&quot;</highlight><highlight class="normal">]=!0))}}),trimEmptyHash($location.absUrl())!=trimEmptyHash(initialUrl)&amp;&amp;$browser.url($location.absUrl(),!0);var<sp/>initializing=!0;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$browser.onUrlChange(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(newUrl,newState){$rootScope.$evalAsync(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>defaultPrevented,oldUrl=$location.absUrl(),oldState=$location.$$state;$location.$$parse(newUrl),$location.$$state=newState,defaultPrevented=$rootScope.$broadcast(</highlight><highlight class="stringliteral">&quot;$locationChangeStart&quot;</highlight><highlight class="normal">,newUrl,oldUrl,newState,oldState).defaultPrevented,$location.absUrl()===newUrl&amp;&amp;(defaultPrevented?($location.$$parse(oldUrl),$location.$$state=oldState,setBrowserUrlWithFallback(oldUrl,!1,oldState)):(initializing=!1,afterLocationChange(oldUrl,oldState)))}),$rootScope.$$phase||$rootScope.$digest()}),$rootScope.$watch(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>oldUrl=trimEmptyHash($browser.url()),newUrl=trimEmptyHash($location.absUrl()),oldState=$browser.state(),currentReplace=$location.$$replace,urlOrStateChanged=oldUrl!==newUrl||$location.$$html5&amp;&amp;$sniffer.history&amp;&amp;oldState!==$location.$$state;(initializing||urlOrStateChanged)&amp;&amp;(initializing=!1,$rootScope.$evalAsync(function(){var<sp/>newUrl=$location.absUrl(),defaultPrevented=$rootScope.$broadcast(</highlight><highlight class="stringliteral">&quot;$locationChangeStart&quot;</highlight><highlight class="normal">,newUrl,oldUrl,$location.$$state,oldState).defaultPrevented;$location.absUrl()===newUrl&amp;&amp;(defaultPrevented?($location.$$parse(oldUrl),$location.$$state=oldState):(urlOrStateChanged&amp;&amp;setBrowserUrlWithFallback(newUrl,currentReplace,oldState===$location.$$state?null:$location.$$state),afterLocationChange(oldUrl,oldState)))})),$location.$$replace=!1}),$location}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$LogProvider(){var<sp/>debug=!0,</highlight><highlight class="keyword">self</highlight><highlight class="normal">=</highlight><highlight class="keyword">this</highlight><highlight class="normal">;this.debugEnabled=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(flag){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isDefined(flag)?(debug=flag,</highlight><highlight class="keyword">this</highlight><highlight class="normal">):debug},this.$get=[</highlight><highlight class="stringliteral">&quot;$window&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($window){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>formatError(arg){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg<sp/>instanceof<sp/>Error&amp;&amp;(arg.stack?arg=arg.message&amp;&amp;-1===arg.stack.indexOf(arg.message)?</highlight><highlight class="stringliteral">&quot;Error:<sp/>&quot;</highlight><highlight class="normal">+arg.message+</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+arg.stack:arg.stack:arg.sourceURL&amp;&amp;(arg=arg.message+</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">+arg.sourceURL+</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">+arg.line)),arg}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>consoleLog(type){var<sp/>console=$window.console||{},logFn=console[type]||console.log||noop,hasApply=!1;</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{hasApply=!!logFn.apply}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasApply?</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>args=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(arguments,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(arg){args.push(formatError(arg))}),logFn.apply(console,args)}:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(arg1,arg2){logFn(arg1,null==arg2?</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:arg2)}}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{log:consoleLog(</highlight><highlight class="stringliteral">&quot;log&quot;</highlight><highlight class="normal">),info:consoleLog(</highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">),warn:consoleLog(</highlight><highlight class="stringliteral">&quot;warn&quot;</highlight><highlight class="normal">),error:consoleLog(</highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">),debug:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>fn=consoleLog(</highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(){debug&amp;&amp;fn.apply(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,arguments)}}()}}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ensureSafeMemberName(name,fullExpression){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;__defineGetter__&quot;</highlight><highlight class="normal">===name||</highlight><highlight class="stringliteral">&quot;__defineSetter__&quot;</highlight><highlight class="normal">===name||</highlight><highlight class="stringliteral">&quot;__lookupGetter__&quot;</highlight><highlight class="normal">===name||</highlight><highlight class="stringliteral">&quot;__lookupSetter__&quot;</highlight><highlight class="normal">===name||</highlight><highlight class="stringliteral">&quot;__proto__&quot;</highlight><highlight class="normal">===name)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$parseMinErr(</highlight><highlight class="stringliteral">&quot;isecfld&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>access<sp/>a<sp/>disallowed<sp/>field<sp/>in<sp/>Angular<sp/>expressions!<sp/>Expression:<sp/>{0}&quot;</highlight><highlight class="normal">,fullExpression);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ensureSafeObject(obj,fullExpression){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj.constructor===obj)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$parseMinErr(</highlight><highlight class="stringliteral">&quot;isecfn&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Referencing<sp/>Function<sp/>in<sp/>Angular<sp/>expressions<sp/>is<sp/>disallowed!<sp/>Expression:<sp/>{0}&quot;</highlight><highlight class="normal">,fullExpression);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj.window===obj)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$parseMinErr(</highlight><highlight class="stringliteral">&quot;isecwindow&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Referencing<sp/>the<sp/>Window<sp/>in<sp/>Angular<sp/>expressions<sp/>is<sp/>disallowed!<sp/>Expression:<sp/>{0}&quot;</highlight><highlight class="normal">,fullExpression);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj.children&amp;&amp;(obj.nodeName||obj.prop&amp;&amp;obj.attr&amp;&amp;obj.find))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$parseMinErr(</highlight><highlight class="stringliteral">&quot;isecdom&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Referencing<sp/>DOM<sp/>nodes<sp/>in<sp/>Angular<sp/>expressions<sp/>is<sp/>disallowed!<sp/>Expression:<sp/>{0}&quot;</highlight><highlight class="normal">,fullExpression);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj===Object)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$parseMinErr(</highlight><highlight class="stringliteral">&quot;isecobj&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Referencing<sp/>Object<sp/>in<sp/>Angular<sp/>expressions<sp/>is<sp/>disallowed!<sp/>Expression:<sp/>{0}&quot;</highlight><highlight class="normal">,fullExpression)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ensureSafeFunction(obj,fullExpression){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj.constructor===obj)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$parseMinErr(</highlight><highlight class="stringliteral">&quot;isecfn&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Referencing<sp/>Function<sp/>in<sp/>Angular<sp/>expressions<sp/>is<sp/>disallowed!<sp/>Expression:<sp/>{0}&quot;</highlight><highlight class="normal">,fullExpression);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj===CALL||obj===APPLY||obj===BIND)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$parseMinErr(</highlight><highlight class="stringliteral">&quot;isecff&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Referencing<sp/>call,<sp/>apply<sp/>or<sp/>bind<sp/>in<sp/>Angular<sp/>expressions<sp/>is<sp/>disallowed!<sp/>Expression:<sp/>{0}&quot;</highlight><highlight class="normal">,fullExpression)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ifDefined(v,d){</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;undefined&quot;</highlight><highlight class="normal">!=typeof<sp/>v?v:d}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>plusFn(l,r){</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;undefined&quot;</highlight><highlight class="normal">==typeof<sp/>l?r:</highlight><highlight class="stringliteral">&quot;undefined&quot;</highlight><highlight class="normal">==typeof<sp/>r?l:l+r}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>isStateless($filter,filterName){var<sp/>fn=$filter(filterName);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!fn.$stateful}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>findConstantAndWatchExpressions(ast,$filter){var<sp/>allConstants,argsToWatch;</highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(ast.type){</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AST.Program:allConstants=!0,forEach(ast.body,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(expr){findConstantAndWatchExpressions(expr.expression,$filter),allConstants=allConstants&amp;&amp;expr.expression.constant}),ast.constant=allConstants;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AST.Literal:ast.constant=!0,ast.toWatch=[];</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AST.UnaryExpression:findConstantAndWatchExpressions(ast.argument,$filter),ast.constant=ast.argument.constant,ast.toWatch=ast.argument.toWatch;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AST.BinaryExpression:findConstantAndWatchExpressions(ast.left,$filter),findConstantAndWatchExpressions(ast.right,$filter),ast.constant=ast.left.constant&amp;&amp;ast.right.constant,ast.toWatch=ast.left.toWatch.concat(ast.right.toWatch);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AST.LogicalExpression:findConstantAndWatchExpressions(ast.left,$filter),findConstantAndWatchExpressions(ast.right,$filter),ast.constant=ast.left.constant&amp;&amp;ast.right.constant,ast.toWatch=ast.constant?[]:[ast];</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AST.ConditionalExpression:findConstantAndWatchExpressions(ast.test,$filter),findConstantAndWatchExpressions(ast.alternate,$filter),findConstantAndWatchExpressions(ast.consequent,$filter),ast.constant=ast.test.constant&amp;&amp;ast.alternate.constant&amp;&amp;ast.consequent.constant,ast.toWatch=ast.constant?[]:[ast];</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AST.Identifier:ast.constant=!1,ast.toWatch=[ast];</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AST.MemberExpression:findConstantAndWatchExpressions(ast.object,$filter),ast.computed&amp;&amp;findConstantAndWatchExpressions(ast.property,$filter),ast.constant=ast.object.constant&amp;&amp;(!ast.computed||ast.property.constant),ast.toWatch=[ast];</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AST.CallExpression:allConstants=ast.filter?isStateless($filter,ast.callee.name):!1,argsToWatch=[],forEach(ast.arguments,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(expr){findConstantAndWatchExpressions(expr,$filter),allConstants=allConstants&amp;&amp;expr.constant,expr.constant||argsToWatch.push.apply(argsToWatch,expr.toWatch)}),ast.constant=allConstants,ast.toWatch=ast.filter&amp;&amp;isStateless($filter,ast.callee.name)?argsToWatch:[ast];</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AST.AssignmentExpression:findConstantAndWatchExpressions(ast.left,$filter),findConstantAndWatchExpressions(ast.right,$filter),ast.constant=ast.left.constant&amp;&amp;ast.right.constant,ast.toWatch=[ast];</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AST.ArrayExpression:allConstants=!0,argsToWatch=[],forEach(ast.elements,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(expr){findConstantAndWatchExpressions(expr,$filter),allConstants=allConstants&amp;&amp;expr.constant,expr.constant||argsToWatch.push.apply(argsToWatch,expr.toWatch)}),ast.constant=allConstants,ast.toWatch=argsToWatch;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AST.ObjectExpression:allConstants=!0,argsToWatch=[],forEach(ast.properties,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(property){findConstantAndWatchExpressions(property.value,$filter),allConstants=allConstants&amp;&amp;property.value.constant,property.value.constant||argsToWatch.push.apply(argsToWatch,property.value.toWatch)}),ast.constant=allConstants,ast.toWatch=argsToWatch;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AST.ThisExpression:ast.constant=!1,ast.toWatch=[]}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getInputs(body){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(1==body.length){var<sp/>lastExpression=body[0].expression,candidate=lastExpression.toWatch;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1!==candidate.length?candidate:candidate[0]!==lastExpression?candidate:undefined}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>isAssignable(ast){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ast.type===AST.Identifier||ast.type===AST.MemberExpression}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>assignableAST(ast){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1===ast.body.length&amp;&amp;isAssignable(ast.body[0].expression)?{type:AST.AssignmentExpression,left:ast.body[0].expression,right:{type:AST.NGValueParameter},</highlight><highlight class="keyword">operator</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">}:</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>0}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>isLiteral(ast){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0===ast.body.length||1===ast.body.length&amp;&amp;(ast.body[0].expression.type===AST.Literal||ast.body[0].expression.type===AST.ArrayExpression||ast.body[0].expression.type===AST.ObjectExpression)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>isConstant(ast){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ast.constant}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ASTCompiler(astBuilder,$filter){this.astBuilder=astBuilder,this.$filter=$filter}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ASTInterpreter(astBuilder,$filter){this.astBuilder=astBuilder,this.$filter=$filter}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>setter(obj,path,setValue,fullExp){ensureSafeObject(obj,fullExp);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>key,element=path.split(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">),i=0;element.length&gt;1;i++){key=ensureSafeMemberName(element.shift(),fullExp);var<sp/>propertyObj=ensureSafeObject(obj[key],fullExp);propertyObj||(propertyObj={},obj[key]=propertyObj),obj=propertyObj}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key=ensureSafeMemberName(element.shift(),fullExp),ensureSafeObject(obj[key],fullExp),obj[key]=setValue,setValue}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>isPossiblyDangerousMemberName(name){</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;constructor&quot;</highlight><highlight class="normal">==name}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getValueOf(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isFunction(value.valueOf)?value.valueOf():objectValueOf.call(value)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$ParseProvider(){var<sp/>cacheDefault=createMap(),cacheExpensive=createMap();this.$get=[</highlight><highlight class="stringliteral">&quot;$filter&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$sniffer&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($filter,$sniffer){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>expressionInputDirtyCheck(newValue,oldValueOfValue){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null==newValue||null==oldValueOfValue?newValue===oldValueOfValue:</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">==typeof<sp/>newValue&amp;&amp;(newValue=getValueOf(newValue),</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">==typeof<sp/>newValue)?!1:newValue===oldValueOfValue||newValue!==newValue&amp;&amp;oldValueOfValue!==oldValueOfValue}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>inputsWatchDelegate(scope,listener,objectEquality,parsedExpression,prettyPrintExpression){var<sp/>lastResult,inputExpressions=parsedExpression.inputs;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(1===inputExpressions.length){var<sp/>oldInputValueOf=expressionInputDirtyCheck;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputExpressions=inputExpressions[0],scope.$watch(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope){var<sp/>newInputValue=inputExpressions(scope);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>expressionInputDirtyCheck(newInputValue,oldInputValueOf)||(lastResult=parsedExpression(scope,undefined,undefined,[newInputValue]),oldInputValueOf=newInputValue&amp;&amp;getValueOf(newInputValue)),lastResult},listener,objectEquality,prettyPrintExpression)}</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>oldInputValueOfValues=[],oldInputValues=[],i=0,ii=inputExpressions.length;ii&gt;i;i++)oldInputValueOfValues[i]=expressionInputDirtyCheck,oldInputValues[i]=null;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scope.$watch(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>changed=!1,i=0,ii=inputExpressions.length;ii&gt;i;i++){var<sp/>newInputValue=inputExpressions[i](scope);(changed||(changed=!expressionInputDirtyCheck(newInputValue,oldInputValueOfValues[i])))&amp;&amp;(oldInputValues[i]=newInputValue,oldInputValueOfValues[i]=newInputValue&amp;&amp;getValueOf(newInputValue))}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>changed&amp;&amp;(lastResult=parsedExpression(scope,undefined,undefined,oldInputValues)),lastResult},listener,objectEquality,prettyPrintExpression)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>oneTimeWatchDelegate(scope,listener,objectEquality,parsedExpression){var<sp/>unwatch,lastValue;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unwatch=scope.$watch(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parsedExpression(scope)},</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,old,scope){lastValue=value,isFunction(listener)&amp;&amp;listener.apply(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,arguments),isDefined(value)&amp;&amp;scope.$$postDigest(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){isDefined(lastValue)&amp;&amp;unwatch()})},objectEquality)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>oneTimeLiteralWatchDelegate(scope,listener,objectEquality,parsedExpression){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>isAllDefined(value){var<sp/>allDefined=!0;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(value,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(val){isDefined(val)||(allDefined=!1)}),allDefined}var<sp/>unwatch,lastValue;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unwatch=scope.$watch(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parsedExpression(scope)},</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,old,scope){lastValue=value,isFunction(listener)&amp;&amp;listener.call(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,value,old,scope),isAllDefined(value)&amp;&amp;scope.$$postDigest(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){isAllDefined(lastValue)&amp;&amp;unwatch()})},objectEquality)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>constantWatchDelegate(scope,listener,objectEquality,parsedExpression){var<sp/>unwatch;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unwatch=scope.$watch(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parsedExpression(scope)},</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,old,scope){isFunction(listener)&amp;&amp;listener.apply(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,arguments),unwatch()},objectEquality)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>addInterceptor(parsedExpression,interceptorFn){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!interceptorFn)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parsedExpression;var<sp/>watchDelegate=parsedExpression.$$watchDelegate,regularWatch=watchDelegate!==oneTimeLiteralWatchDelegate&amp;&amp;watchDelegate!==oneTimeWatchDelegate,fn=regularWatch?</highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope,locals,assign,inputs){var<sp/>value=parsedExpression(scope,locals,assign,inputs);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>interceptorFn(value,scope,locals)}:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope,locals,assign,inputs){var<sp/>value=parsedExpression(scope,locals,assign,inputs),result=interceptorFn(value,scope,locals);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isDefined(value)?result:value};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parsedExpression.$$watchDelegate&amp;&amp;parsedExpression.$$watchDelegate!==inputsWatchDelegate?fn.$$watchDelegate=parsedExpression.$$watchDelegate:interceptorFn.$stateful||(fn.$$watchDelegate=inputsWatchDelegate,fn.inputs=parsedExpression.inputs?parsedExpression.inputs:[parsedExpression]),fn}var<sp/>$parseOptions={csp:$sniffer.csp,expensiveChecks:!1},$parseOptionsExpensive={csp:$sniffer.csp,expensiveChecks:!0};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(exp,interceptorFn,expensiveChecks){var<sp/>parsedExpression,oneTime,cacheKey;</highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(typeof<sp/>exp){</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">:exp=exp.trim(),cacheKey=exp;var<sp/>cache=expensiveChecks?cacheExpensive:cacheDefault;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parsedExpression=cache[cacheKey],!parsedExpression){</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">===exp.charAt(0)&amp;&amp;</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">===exp.charAt(1)&amp;&amp;(oneTime=!0,exp=exp.substring(2));var<sp/>parseOptions=expensiveChecks?$parseOptionsExpensive:$parseOptions,lexer=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Lexer(parseOptions),parser=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Parser(lexer,$filter,parseOptions);parsedExpression=parser.parse(exp),parsedExpression.constant?parsedExpression.$$watchDelegate=constantWatchDelegate:oneTime?parsedExpression.$$watchDelegate=parsedExpression.literal?oneTimeLiteralWatchDelegate:oneTimeWatchDelegate:parsedExpression.inputs&amp;&amp;(parsedExpression.$$watchDelegate=inputsWatchDelegate),cache[cacheKey]=parsedExpression}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>addInterceptor(parsedExpression,interceptorFn);</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>addInterceptor(exp,interceptorFn);</highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>noop}}}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$QProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$rootScope&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$exceptionHandler&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($rootScope,$exceptionHandler){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qFactory(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(callback){$rootScope.$evalAsync(callback)},$exceptionHandler)}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$$QProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$browser&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$exceptionHandler&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($browser,$exceptionHandler){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qFactory(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(callback){$browser.defer(callback)},$exceptionHandler)}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>qFactory(nextTick,exceptionHandler){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>callOnce(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,resolveFn,rejectFn){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>wrap(fn){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){called||(called=!0,fn.call(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,value))}}var<sp/>called=!1;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">[wrap(resolveFn),wrap(rejectFn)]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>Promise(){this.$$state={status:0}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>simpleBind(context,fn){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){fn.call(context,value)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>processQueue(state){var<sp/>fn,deferred,pending;pending=state.pending,state.processScheduled=!1,state.pending=undefined;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0,ii=pending.length;ii&gt;i;++i){deferred=pending[i][0],fn=pending[i][state.status];</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{isFunction(fn)?deferred.resolve(fn(state.value)):1===state.status?deferred.resolve(state.value):deferred.reject(state.value)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){deferred.reject(e),exceptionHandler(e)}}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>scheduleProcessQueue(state){!state.processScheduled&amp;&amp;state.pending&amp;&amp;(state.processScheduled=!0,nextTick(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){processQueue(state)}))}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>Deferred(){this.promise=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Promise,this.resolve=simpleBind(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,this.resolve),this.reject=simpleBind(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,this.reject),this.notify=simpleBind(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,this.notify)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>all(promises){var<sp/>deferred=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Deferred,counter=0,results=isArray(promises)?[]:{};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(promises,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(promise,key){counter++,when(promise).then(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){results.hasOwnProperty(key)||(results[key]=value,--counter||deferred.resolve(results))},</highlight><highlight class="keyword">function</highlight><highlight class="normal">(reason){results.hasOwnProperty(key)||deferred.reject(reason)})}),0===counter&amp;&amp;deferred.resolve(results),deferred.promise}var<sp/>$qMinErr=minErr(</highlight><highlight class="stringliteral">&quot;$q&quot;</highlight><highlight class="normal">,TypeError),defer=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Deferred};Promise.prototype={then:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(onFulfilled,onRejected,progressBack){var<sp/>result=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Deferred;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.$$state.pending=this.$$state.pending||[],this.$$state.pending.push([result,onFulfilled,onRejected,progressBack]),this.$$state.status&gt;0&amp;&amp;scheduleProcessQueue(this.$$state),result.promise},</highlight><highlight class="stringliteral">&quot;catch&quot;</highlight><highlight class="normal">:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(callback){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.then(null,callback)},</highlight><highlight class="stringliteral">&quot;finally&quot;</highlight><highlight class="normal">:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(callback,progressBack){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.then(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handleCallback(value,!0,callback)},</highlight><highlight class="keyword">function</highlight><highlight class="normal">(error){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handleCallback(error,!1,callback)},progressBack)}},Deferred.prototype={resolve:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(val){this.promise.$$state.status||(val===this.promise?this.$$reject($qMinErr(</highlight><highlight class="stringliteral">&quot;qcycle&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Expected<sp/>promise<sp/>to<sp/>be<sp/>resolved<sp/>with<sp/>value<sp/>other<sp/>than<sp/>itself<sp/>&apos;{0}&apos;&quot;</highlight><highlight class="normal">,val)):this.$$resolve(val))},$$resolve:function(val){var<sp/>then,fns;fns=callOnce(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,this.$$resolve,this.$$reject);</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{(isObject(val)||isFunction(val))&amp;&amp;(then=val&amp;&amp;val.then),isFunction(then)?(this.promise.$$state.status=-1,then.call(val,fns[0],fns[1],this.notify)):(this.promise.$$state.value=val,</highlight><highlight class="keyword">this</highlight><highlight class="normal">.promise.$$state.status=1,scheduleProcessQueue(this.promise.$$state))}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){fns[1](e),exceptionHandler(e)}},reject:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(reason){this.promise.$$state.status||this.$$reject(reason)},$$reject:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(reason){this.promise.$$state.value=reason,this.promise.$$state.status=2,scheduleProcessQueue(this.promise.$$state)},notify:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(progress){var<sp/>callbacks=this.promise.$$state.pending;this.promise.$$state.status&lt;=0&amp;&amp;callbacks&amp;&amp;callbacks.length&amp;&amp;nextTick(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>callback,result,i=0,ii=callbacks.length;ii&gt;i;i++){result=callbacks[i][0],callback=callbacks[i][3];try{result.notify(isFunction(callback)?callback(progress):progress)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){exceptionHandler(e)}}})}};var<sp/>reject=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(reason){var<sp/>result=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Deferred;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.reject(reason),result.promise},makePromise=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,resolved){var<sp/>result=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Deferred;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resolved?result.resolve(value):result.reject(value),result.promise},handleCallback=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,isResolved,callback){var<sp/>callbackOutput=null;</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{isFunction(callback)&amp;&amp;(callbackOutput=callback())}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>makePromise(e,!1)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isPromiseLike(callbackOutput)?callbackOutput.then(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>makePromise(value,isResolved)},</highlight><highlight class="keyword">function</highlight><highlight class="normal">(error){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>makePromise(error,!1)}):makePromise(value,isResolved)},when=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,callback,errback,progressBack){var<sp/>result=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Deferred;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.resolve(value),result.promise.then(callback,errback,progressBack)},$Q=</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>Q(resolver){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>resolveFn(value){deferred.resolve(value)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>rejectFn(reason){deferred.reject(reason)}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isFunction(resolver))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$qMinErr(</highlight><highlight class="stringliteral">&quot;norslvr&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Expected<sp/>resolverFn,<sp/>got<sp/>&apos;{0}&apos;&quot;</highlight><highlight class="normal">,resolver);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>instanceof<sp/>Q))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Q(resolver);var<sp/>deferred=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Deferred;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resolver(resolveFn,rejectFn),deferred.promise};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$Q.defer=defer,$Q.reject=reject,$Q.when=when,$Q.all=all,$Q}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$$RAFProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$window&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$timeout&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($window,$timeout){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>flush(){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0;i&lt;taskQueue.length;i++){var<sp/>task=taskQueue[i];task&amp;&amp;(taskQueue[i]=null,task())}taskCount=taskQueue.length=0}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>queueFn(asyncFn){var<sp/>index=taskQueue.length;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>taskCount++,taskQueue.push(asyncFn),0===index&amp;&amp;(cancelLastRAF=rafFn(flush)),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){index&gt;=0&amp;&amp;(taskQueue[index]=null,index=null,0===--taskCount&amp;&amp;cancelLastRAF&amp;&amp;(cancelLastRAF(),cancelLastRAF=null,taskQueue.length=0))}}var<sp/>requestAnimationFrame=$window.requestAnimationFrame||$window.webkitRequestAnimationFrame,cancelAnimationFrame=$window.cancelAnimationFrame||$window.webkitCancelAnimationFrame||$window.webkitCancelRequestAnimationFrame,rafSupported=!!requestAnimationFrame,rafFn=rafSupported?</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn){</highlight></codeline>
<codeline lineno="9"><highlight class="normal">var<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">=requestAnimationFrame(fn);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(){cancelAnimationFrame(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)}}:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn){var<sp/>timer=$timeout(fn,16.66,!1);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(){$timeout.cancel(timer)}};queueFn.supported=rafSupported;var<sp/>cancelLastRAF,taskCount=0,taskQueue=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queueFn}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$RootScopeProvider(){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createChildScopeClass(parent){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ChildScope(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null,this.$$listeners={},this.$$listenerCount={},this.$$watchersCount=0,this.$id=nextUid(),this.$$ChildScope=null}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ChildScope.prototype=parent,ChildScope}var<sp/>TTL=10,$rootScopeMinErr=minErr(</highlight><highlight class="stringliteral">&quot;$rootScope&quot;</highlight><highlight class="normal">),lastDirtyWatch=null,applyAsyncId=null;this.digestTtl=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arguments.length&amp;&amp;(TTL=value),TTL},this.$get=[</highlight><highlight class="stringliteral">&quot;$injector&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$exceptionHandler&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$parse&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$browser&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($injector,$exceptionHandler,$parse,$browser){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>destroyChildScope($event){$event.currentScope.$$destroyed=!0}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>Scope(){this.$id=nextUid(),this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null,this.$root=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,this.$$destroyed=!1,this.$$listeners={},this.$$listenerCount={},this.$$watchersCount=0,this.$$isolateBindings=null}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>beginPhase(phase){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">($rootScope.$$phase)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$rootScopeMinErr(</highlight><highlight class="stringliteral">&quot;inprog&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;{0}<sp/>already<sp/>in<sp/>progress&quot;</highlight><highlight class="normal">,$rootScope.$$phase);$rootScope.$$phase=phase}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>clearPhase(){$rootScope.$$phase=null}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>incrementWatchersCount(current,count){</highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>current.$$watchersCount+=count;</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(current=current.$parent)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>decrementListenerCount(current,count,name){</highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>current.$$listenerCount[name]-=count,0===current.$$listenerCount[name]&amp;&amp;</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>current.$$listenerCount[name];</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(current=current.$parent)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>initWatchVal(){}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>flushApplyAsync(){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;applyAsyncQueue.length;)</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{applyAsyncQueue.shift()()}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){$exceptionHandler(e)}applyAsyncId=null}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>scheduleApplyAsync(){null===applyAsyncId&amp;&amp;(applyAsyncId=$browser.defer(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){$rootScope.$apply(flushApplyAsync)}))}Scope.prototype={constructor:Scope,$new:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(isolate,parent){var<sp/>child;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent=parent||</highlight><highlight class="keyword">this</highlight><highlight class="normal">,isolate?(child=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Scope,child.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=createChildScopeClass(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)),child=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>this.$$ChildScope),child.$parent=parent,child.$$prevSibling=parent.$$childTail,parent.$$childHead?(parent.$$childTail.$$nextSibling=child,parent.$$childTail=child):parent.$$childHead=parent.$$childTail=child,(isolate||parent!=</highlight><highlight class="keyword">this</highlight><highlight class="normal">)&amp;&amp;child.$on(</highlight><highlight class="stringliteral">&quot;$destroy&quot;</highlight><highlight class="normal">,destroyChildScope),child},$watch:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(watchExp,listener,objectEquality,prettyPrintExpression){var<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">=$parse(watchExp);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">get</highlight><highlight class="normal">.$$watchDelegate)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">.$$watchDelegate(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,listener,objectEquality,</highlight><highlight class="keyword">get</highlight><highlight class="normal">,watchExp);var<sp/>scope=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,array=scope.$$watchers,watcher={fn:listener,last:initWatchVal,</highlight><highlight class="keyword">get</highlight><highlight class="normal">:</highlight><highlight class="keyword">get</highlight><highlight class="normal">,exp:prettyPrintExpression||watchExp,eq:!!objectEquality};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastDirtyWatch=null,isFunction(listener)||(watcher.fn=noop),array||(array=scope.$$watchers=[]),array.unshift(watcher),incrementWatchersCount(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,1),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){arrayRemove(array,watcher)&gt;=0&amp;&amp;incrementWatchersCount(scope,-1),lastDirtyWatch=null}},$watchGroup:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(watchExpressions,listener){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>watchGroupAction(){changeReactionScheduled=!1,firstRun?(firstRun=!1,listener(newValues,newValues,</highlight><highlight class="keyword">self</highlight><highlight class="normal">)):listener(newValues,oldValues,</highlight><highlight class="keyword">self</highlight><highlight class="normal">)}var<sp/>oldValues=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Array(watchExpressions.length),newValues=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Array(watchExpressions.length),deregisterFns=[],</highlight><highlight class="keyword">self</highlight><highlight class="normal">=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,changeReactionScheduled=!1,firstRun=!0;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!watchExpressions.length){var<sp/>shouldCall=!0;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.$evalAsync(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){shouldCall&amp;&amp;listener(newValues,newValues,</highlight><highlight class="keyword">self</highlight><highlight class="normal">)}),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){shouldCall=!1}}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1===watchExpressions.length?this.$watch(watchExpressions[0],</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,oldValue,scope){newValues[0]=value,oldValues[0]=oldValue,listener(newValues,value===oldValue?newValues:oldValues,scope)}):(forEach(watchExpressions,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(expr,i){var<sp/>unwatchFn=</highlight><highlight class="keyword">self</highlight><highlight class="normal">.$watch(expr,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,oldValue){newValues[i]=value,oldValues[i]=oldValue,changeReactionScheduled||(changeReactionScheduled=!0,</highlight><highlight class="keyword">self</highlight><highlight class="normal">.$evalAsync(watchGroupAction))});deregisterFns.push(unwatchFn)}),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;deregisterFns.length;)deregisterFns.shift()()})},$watchCollection:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(obj,listener){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$watchCollectionInterceptor(_value){newValue=_value;var<sp/>newLength,key,bothNaN,newItem,oldItem;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isUndefined(newValue)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isObject(newValue))</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isArrayLike(newValue)){oldValue!==internalArray&amp;&amp;(oldValue=internalArray,oldLength=oldValue.length=0,changeDetected++),newLength=newValue.length,oldLength!==newLength&amp;&amp;(changeDetected++,oldValue.length=oldLength=newLength);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0;newLength&gt;i;i++)oldItem=oldValue[i],newItem=newValue[i],bothNaN=oldItem!==oldItem&amp;&amp;newItem!==newItem,bothNaN||oldItem===newItem||(changeDetected++,oldValue[i]=newItem)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{oldValue!==internalObject&amp;&amp;(oldValue=internalObject={},oldLength=0,changeDetected++),newLength=0;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(key<sp/>in<sp/>newValue)newValue.hasOwnProperty(key)&amp;&amp;(newLength++,newItem=newValue[key],oldItem=oldValue[key],key<sp/>in<sp/>oldValue?(bothNaN=oldItem!==oldItem&amp;&amp;newItem!==newItem,bothNaN||oldItem===newItem||(changeDetected++,oldValue[key]=newItem)):(oldLength++,oldValue[key]=newItem,changeDetected++));</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oldLength&gt;newLength){changeDetected++;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(key<sp/>in<sp/>oldValue)newValue.hasOwnProperty(key)||(oldLength--,</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>oldValue[key])}}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>oldValue!==newValue&amp;&amp;(oldValue=newValue,changeDetected++);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>changeDetected}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$watchCollectionAction(){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(initRun?(initRun=!1,listener(newValue,newValue,</highlight><highlight class="keyword">self</highlight><highlight class="normal">)):listener(newValue,veryOldValue,</highlight><highlight class="keyword">self</highlight><highlight class="normal">),trackVeryOldValue)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isObject(newValue))</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isArrayLike(newValue)){veryOldValue=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Array(newValue.length);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0;i&lt;newValue.length;i++)veryOldValue[i]=newValue[i]}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{veryOldValue={};</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>key<sp/>in<sp/>newValue)hasOwnProperty.call(newValue,key)&amp;&amp;(veryOldValue[key]=newValue[key])}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>veryOldValue=newValue}$watchCollectionInterceptor.$stateful=!0;var<sp/>newValue,oldValue,veryOldValue,</highlight><highlight class="keyword">self</highlight><highlight class="normal">=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,trackVeryOldValue=listener.length&gt;1,changeDetected=0,changeDetector=$parse(obj,$watchCollectionInterceptor),internalArray=[],internalObject={},initRun=!0,oldLength=0;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.$watch(changeDetector,$watchCollectionAction)},$digest:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>watch,value,last,watchers,length,dirty,next,current,logIdx,asyncTask,ttl=TTL,target=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,watchLog=[];beginPhase(</highlight><highlight class="stringliteral">&quot;$digest&quot;</highlight><highlight class="normal">),$browser.$$checkUrlChange(),</highlight><highlight class="keyword">this</highlight><highlight class="normal">===$rootScope&amp;&amp;null!==applyAsyncId&amp;&amp;($browser.defer.cancel(applyAsyncId),flushApplyAsync()),lastDirtyWatch=null;</highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dirty=!1,current=target;asyncQueue.length;){</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{asyncTask=asyncQueue.shift(),asyncTask.scope.$eval(asyncTask.expression,asyncTask.locals)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){$exceptionHandler(e)}lastDirtyWatch=null}traverseScopesLoop:</highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(watchers=current.$$watchers)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(length=watchers.length;length--;)</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(watch=watchers[length])</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((value=watch.get(current))===(last=watch.last)||(watch.eq?equals(value,last):</highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal">==typeof<sp/>value&amp;&amp;</highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal">==typeof<sp/>last&amp;&amp;isNaN(value)&amp;&amp;isNaN(last))){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(watch===lastDirtyWatch){dirty=!1;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal"><sp/>traverseScopesLoop}}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>dirty=!0,lastDirtyWatch=watch,watch.last=watch.eq?copy(value,null):value,watch.fn(value,last===initWatchVal?value:last,current),5&gt;ttl&amp;&amp;(logIdx=4-ttl,watchLog[logIdx]||(watchLog[logIdx]=[]),watchLog[logIdx].push({msg:isFunction(watch.exp)?</highlight><highlight class="stringliteral">&quot;fn:<sp/>&quot;</highlight><highlight class="normal">+(watch.exp.name||watch.exp.toString()):watch.exp,newVal:value,oldVal:last}))}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){$exceptionHandler(e)}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(next=current.$$watchersCount&amp;&amp;current.$$childHead||current!==target&amp;&amp;current.$$nextSibling))</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;current!==target&amp;&amp;!(next=current.$$nextSibling);)current=current.$parent}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(current=next);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((dirty||asyncQueue.length)&amp;&amp;!ttl--)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>clearPhase(),$rootScopeMinErr(</highlight><highlight class="stringliteral">&quot;infdig&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;{0}<sp/>$digest()<sp/>iterations<sp/>reached.<sp/>Aborting!\nWatchers<sp/>fired<sp/>in<sp/>the<sp/>last<sp/>5<sp/>iterations:<sp/>{1}&quot;</highlight><highlight class="normal">,TTL,watchLog)}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(dirty||asyncQueue.length);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(clearPhase();postDigestQueue.length;)</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{postDigestQueue.shift()()}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){$exceptionHandler(e)}},$destroy:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!this.$$destroyed){var<sp/>parent=this.$parent;this.$broadcast(</highlight><highlight class="stringliteral">&quot;$destroy&quot;</highlight><highlight class="normal">),this.$$destroyed=!0,</highlight><highlight class="keyword">this</highlight><highlight class="normal">===$rootScope&amp;&amp;$browser.$$applicationDestroyed(),incrementWatchersCount(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,-this.$$watchersCount);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>eventName<sp/>in<sp/>this.$$listenerCount)decrementListenerCount(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,this.$$listenerCount[eventName],eventName);parent&amp;&amp;parent.$$childHead==</highlight><highlight class="keyword">this</highlight><highlight class="normal">&amp;&amp;(parent.$$childHead=this.$$nextSibling),parent&amp;&amp;parent.$$childTail==</highlight><highlight class="keyword">this</highlight><highlight class="normal">&amp;&amp;(parent.$$childTail=</highlight><highlight class="keyword">this</highlight><highlight class="normal">.$$prevSibling),this.$$prevSibling&amp;&amp;(this.$$prevSibling.$$nextSibling=this.$$nextSibling),this.$$nextSibling&amp;&amp;(this.$$nextSibling.$$prevSibling=</highlight><highlight class="keyword">this</highlight><highlight class="normal">.$$prevSibling),this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=noop,this.$on=this.$watch=this.$watchGroup=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>noop},this.$$listeners={},this.$parent=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=this.$root=this.$$watchers=null}},$eval:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(expr,locals){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$parse(expr)(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,locals)},$evalAsync:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(expr,locals){$rootScope.$$phase||asyncQueue.length||$browser.defer(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){asyncQueue.length&amp;&amp;$rootScope.$digest()}),asyncQueue.push({scope:this,expression:expr,locals:locals})},$$postDigest:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn){postDigestQueue.push(fn)},$apply:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(expr){</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>beginPhase(</highlight><highlight class="stringliteral">&quot;$apply&quot;</highlight><highlight class="normal">),this.$eval(expr)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){$exceptionHandler(e)}</highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">{clearPhase();</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{$rootScope.$digest()}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$exceptionHandler(e),e}}},$applyAsync:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(expr){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$applyAsyncExpression(){scope.$eval(expr)}var<sp/>scope=</highlight><highlight class="keyword">this</highlight><highlight class="normal">;expr&amp;&amp;applyAsyncQueue.push($applyAsyncExpression),scheduleApplyAsync()},$on:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(name,listener){var<sp/>namedListeners=this.$$listeners[name];namedListeners||(this.$$listeners[name]=namedListeners=[]),namedListeners.push(listener);var<sp/>current=</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>current.$$listenerCount[name]||(current.$$listenerCount[name]=0),current.$$listenerCount[name]++;</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(current=current.$parent);var<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">=</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>indexOfListener=namedListeners.indexOf(listener);-1!==indexOfListener&amp;&amp;(namedListeners[indexOfListener]=null,decrementListenerCount(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,1,name))}},$emit:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(name,args){var<sp/>namedListeners,i,length,empty=[],scope=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,stopPropagation=!1,</highlight><highlight class="keyword">event</highlight><highlight class="normal">={name:name,targetScope:scope,stopPropagation:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){stopPropagation=!0},preventDefault:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keyword">event</highlight><highlight class="normal">.defaultPrevented=!0},defaultPrevented:!1},listenerArgs=concat([event],arguments,1);</highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(namedListeners=scope.$$listeners[name]||empty,event.currentScope=scope,i=0,length=namedListeners.length;length&gt;i;i++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(namedListeners[i])</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{namedListeners[i].apply(null,listenerArgs)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){$exceptionHandler(e)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>namedListeners.splice(i,1),i--,length--;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stopPropagation)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.currentScope=null,event;scope=scope.$parent}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(scope);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.currentScope=null,</highlight><highlight class="keyword">event</highlight><highlight class="normal">},$broadcast:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(name,args){var<sp/>target=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,current=target,next=target,</highlight><highlight class="keyword">event</highlight><highlight class="normal">={name:name,targetScope:target,preventDefault:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keyword">event</highlight><highlight class="normal">.defaultPrevented=!0},defaultPrevented:!1};</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!target.$$listenerCount[name])</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>event;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>listeners,i,length,listenerArgs=concat([event],arguments,1);current=next;){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(event.currentScope=current,listeners=current.$$listeners[name]||[],i=0,length=listeners.length;length&gt;i;i++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(listeners[i])</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{listeners[i].apply(null,listenerArgs)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){$exceptionHandler(e)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>listeners.splice(i,1),i--,length--;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(next=current.$$listenerCount[name]&amp;&amp;current.$$childHead||current!==target&amp;&amp;current.$$nextSibling))</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;current!==target&amp;&amp;!(next=current.$$nextSibling);)current=current.$parent}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.currentScope=null,</highlight><highlight class="keyword">event</highlight><highlight class="normal">}};var<sp/>$rootScope=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Scope,asyncQueue=$rootScope.$$asyncQueue=[],postDigestQueue=$rootScope.$$postDigestQueue=[],applyAsyncQueue=$rootScope.$$applyAsyncQueue=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$rootScope}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$$SanitizeUriProvider(){var<sp/>aHrefSanitizationWhitelist=/^\s*(https?|ftp|mailto|tel|file):/,imgSrcSanitizationWhitelist=/^\s*((https?|ftp|file|blob):|data:image\/)/;this.aHrefSanitizationWhitelist=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(regexp){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isDefined(regexp)?(aHrefSanitizationWhitelist=regexp,</highlight><highlight class="keyword">this</highlight><highlight class="normal">):aHrefSanitizationWhitelist},this.imgSrcSanitizationWhitelist=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(regexp){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isDefined(regexp)?(imgSrcSanitizationWhitelist=regexp,</highlight><highlight class="keyword">this</highlight><highlight class="normal">):imgSrcSanitizationWhitelist},this.$get=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(uri,isImage){var<sp/>normalizedVal,regex=isImage?imgSrcSanitizationWhitelist:aHrefSanitizationWhitelist;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalizedVal=urlResolve(uri).href,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">===normalizedVal||normalizedVal.match(regex)?uri:</highlight><highlight class="stringliteral">&quot;unsafe:&quot;</highlight><highlight class="normal">+normalizedVal}}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>adjustMatcher(matcher){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;self&quot;</highlight><highlight class="normal">===matcher)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matcher;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isString(matcher)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matcher.indexOf(</highlight><highlight class="stringliteral">&quot;***&quot;</highlight><highlight class="normal">)&gt;-1)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$sceMinErr(</highlight><highlight class="stringliteral">&quot;iwcard&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Illegal<sp/>sequence<sp/>***<sp/>in<sp/>string<sp/>matcher.<sp/><sp/>String:<sp/>{0}&quot;</highlight><highlight class="normal">,matcher);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matcher=escapeForRegexp(matcher).replace(</highlight><highlight class="stringliteral">&quot;\\*\\*&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;.*&quot;</highlight><highlight class="normal">).replace(</highlight><highlight class="stringliteral">&quot;\\*&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;[^:/.?&amp;;]*&quot;</highlight><highlight class="normal">),</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^&quot;</highlight><highlight class="normal">+matcher+</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isRegExp(matcher))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;^&quot;</highlight><highlight class="normal">+matcher.source+</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$sceMinErr(</highlight><highlight class="stringliteral">&quot;imatcher&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Matchers<sp/>may<sp/>only<sp/>be<sp/>&quot;self&quot;,<sp/>string<sp/>patterns<sp/>or<sp/>RegExp<sp/>objects&apos;</highlight><highlight class="normal">)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>adjustMatchers(matchers){var<sp/>adjustedMatchers=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isDefined(matchers)&amp;&amp;forEach(matchers,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(matcher){adjustedMatchers.push(adjustMatcher(matcher))}),adjustedMatchers}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$SceDelegateProvider(){this.SCE_CONTEXTS=SCE_CONTEXTS;var<sp/>resourceUrlWhitelist=[</highlight><highlight class="stringliteral">&quot;self&quot;</highlight><highlight class="normal">],resourceUrlBlacklist=[];this.resourceUrlWhitelist=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arguments.length&amp;&amp;(resourceUrlWhitelist=adjustMatchers(value)),resourceUrlWhitelist},this.resourceUrlBlacklist=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arguments.length&amp;&amp;(resourceUrlBlacklist=adjustMatchers(value)),resourceUrlBlacklist},this.$get=[</highlight><highlight class="stringliteral">&quot;$injector&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($injector){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>matchUrl(matcher,parsedUrl){</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;self&quot;</highlight><highlight class="normal">===matcher?urlIsSameOrigin(parsedUrl):!!matcher.exec(parsedUrl.href)}function<sp/>isResourceUrlAllowedByPolicy(url){var<sp/>i,n,parsedUrl=urlResolve(url.toString()),allowed=!1;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,n=resourceUrlWhitelist.length;n&gt;i;i++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matchUrl(resourceUrlWhitelist[i],parsedUrl)){allowed=!0;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(allowed)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,n=resourceUrlBlacklist.length;n&gt;i;i++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matchUrl(resourceUrlBlacklist[i],parsedUrl)){allowed=!1;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>allowed}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>generateHolderType(Base){var<sp/>holderType=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(trustedValue){this.$$unwrapTrustedValue=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trustedValue}};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Base&amp;&amp;(holderType.prototype=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Base),holderType.prototype.valueOf=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.$$unwrapTrustedValue()},holderType.prototype.toString=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.$$unwrapTrustedValue().toString()},holderType}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>trustAs(type,trustedValue){var<sp/>Constructor=byType.hasOwnProperty(type)?byType[type]:null;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!Constructor)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$sceMinErr(</highlight><highlight class="stringliteral">&quot;icontext&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>trust<sp/>a<sp/>value<sp/>in<sp/>invalid<sp/>context.<sp/>Context:<sp/>{0};<sp/>Value:<sp/>{1}&quot;</highlight><highlight class="normal">,type,trustedValue);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(null===trustedValue||trustedValue===undefined||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">===trustedValue)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trustedValue;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">!=typeof<sp/>trustedValue)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$sceMinErr(</highlight><highlight class="stringliteral">&quot;itype&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>trust<sp/>a<sp/>non-string<sp/>value<sp/>in<sp/>a<sp/>content<sp/>requiring<sp/>a<sp/>string:<sp/>Context:<sp/>{0}&quot;</highlight><highlight class="normal">,type);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Constructor(trustedValue)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>valueOf(maybeTrusted){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maybeTrusted<sp/>instanceof<sp/>trustedValueHolderBase?maybeTrusted.$$unwrapTrustedValue():maybeTrusted}function<sp/>getTrusted(type,maybeTrusted){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(null===maybeTrusted||maybeTrusted===undefined||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">===maybeTrusted)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maybeTrusted;var<sp/>constructor=byType.hasOwnProperty(type)?byType[type]:null;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(constructor&amp;&amp;maybeTrusted<sp/>instanceof<sp/>constructor)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maybeTrusted.$$unwrapTrustedValue();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type===SCE_CONTEXTS.RESOURCE_URL){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isResourceUrlAllowedByPolicy(maybeTrusted))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maybeTrusted;</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$sceMinErr(</highlight><highlight class="stringliteral">&quot;insecurl&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Blocked<sp/>loading<sp/>resource<sp/>from<sp/>url<sp/>not<sp/>allowed<sp/>by<sp/>$sceDelegate<sp/>policy.<sp/><sp/>URL:<sp/>{0}&quot;</highlight><highlight class="normal">,maybeTrusted.toString())}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type===SCE_CONTEXTS.HTML)return<sp/>htmlSanitizer(maybeTrusted);throw<sp/>$sceMinErr(&quot;unsafe&quot;,&quot;Attempting<sp/>to<sp/>use<sp/>an<sp/>unsafe<sp/>value<sp/>in<sp/>a<sp/>safe<sp/>context.&quot;)}var<sp/>htmlSanitizer=function(html){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$sceMinErr(</highlight><highlight class="stringliteral">&quot;unsafe&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>use<sp/>an<sp/>unsafe<sp/>value<sp/>in<sp/>a<sp/>safe<sp/>context.&quot;</highlight><highlight class="normal">)};$injector.has(</highlight><highlight class="stringliteral">&quot;$sanitize&quot;</highlight><highlight class="normal">)&amp;&amp;(htmlSanitizer=$injector.get(</highlight><highlight class="stringliteral">&quot;$sanitize&quot;</highlight><highlight class="normal">));var<sp/>trustedValueHolderBase=generateHolderType(),byType={};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>byType[SCE_CONTEXTS.HTML]=generateHolderType(trustedValueHolderBase),byType[SCE_CONTEXTS.CSS]=generateHolderType(trustedValueHolderBase),byType[SCE_CONTEXTS.URL]=generateHolderType(trustedValueHolderBase),byType[SCE_CONTEXTS.JS]=generateHolderType(trustedValueHolderBase),byType[SCE_CONTEXTS.RESOURCE_URL]=generateHolderType(byType[SCE_CONTEXTS.URL]),{trustAs:trustAs,getTrusted:getTrusted,valueOf:valueOf}}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$SceProvider(){var<sp/>enabled=!0;this.enabled=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arguments.length&amp;&amp;(enabled=!!value),enabled},this.$get=[</highlight><highlight class="stringliteral">&quot;$parse&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$sceDelegate&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($parse,$sceDelegate){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(enabled&amp;&amp;8&gt;msie)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$sceMinErr(</highlight><highlight class="stringliteral">&quot;iequirks&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Strict<sp/>Contextual<sp/>Escaping<sp/>does<sp/>not<sp/>support<sp/>Internet<sp/>Explorer<sp/>version<sp/>&lt;<sp/>11<sp/>in<sp/>quirks<sp/>mode.<sp/><sp/>You<sp/>can<sp/>fix<sp/>this<sp/>by<sp/>adding<sp/>the<sp/>text<sp/>&lt;!doctype<sp/>html&gt;<sp/>to<sp/>the<sp/>top<sp/>of<sp/>your<sp/>HTML<sp/>document.<sp/><sp/>See<sp/>http://docs.angularjs.org/api/ng.$sce<sp/>for<sp/>more<sp/>information.&quot;</highlight><highlight class="normal">);var<sp/>sce=shallowCopy(SCE_CONTEXTS);sce.isEnabled=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>enabled},sce.trustAs=$sceDelegate.trustAs,sce.getTrusted=$sceDelegate.getTrusted,sce.valueOf=$sceDelegate.valueOf,enabled||(sce.trustAs=sce.getTrusted=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(type,value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value},sce.valueOf=identity),sce.parseAs=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(type,expr){var<sp/>parsed=$parse(expr);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parsed.literal&amp;&amp;parsed.constant?parsed:$parse(expr,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sce.getTrusted(type,value)})};var<sp/>parse=sce.parseAs,getTrusted=sce.getTrusted,trustAs=sce.trustAs;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(SCE_CONTEXTS,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(enumValue,name){var<sp/>lName=lowercase(name);sce[camelCase(</highlight><highlight class="stringliteral">&quot;parse_as_&quot;</highlight><highlight class="normal">+lName)]=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(expr){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parse(enumValue,expr)},sce[camelCase(</highlight><highlight class="stringliteral">&quot;get_trusted_&quot;</highlight><highlight class="normal">+lName)]=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTrusted(enumValue,value)},sce[camelCase(</highlight><highlight class="stringliteral">&quot;trust_as_&quot;</highlight><highlight class="normal">+lName)]=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trustAs(enumValue,value)}}),sce}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$SnifferProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$window&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$document&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($window,$document){var<sp/>vendorPrefix,match,eventSupport={},android=toInt((/android<sp/>(\d+)/.exec(lowercase(($window.navigator||{}).userAgent))||[])[1]),boxee=/Boxee/i.test(($window.navigator||{}).userAgent),document=$document[0]||{},vendorRegex=/^(Moz|webkit|ms)(?=[A-Z])/,bodyStyle=document.body&amp;&amp;document.body.style,transitions=!1,animations=!1;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bodyStyle){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>prop<sp/>in<sp/>bodyStyle)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(match=vendorRegex.exec(prop)){vendorPrefix=match[0],vendorPrefix=vendorPrefix.substr(0,1).toUpperCase()+vendorPrefix.substr(1);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">}vendorPrefix||(vendorPrefix=</highlight><highlight class="stringliteral">&quot;WebkitOpacity&quot;</highlight><highlight class="normal">in<sp/>bodyStyle&amp;&amp;</highlight><highlight class="stringliteral">&quot;webkit&quot;</highlight><highlight class="normal">),transitions=!!(</highlight><highlight class="stringliteral">&quot;transition&quot;</highlight><highlight class="normal">in<sp/>bodyStyle||vendorPrefix+</highlight><highlight class="stringliteral">&quot;Transition&quot;</highlight><highlight class="normal">in<sp/>bodyStyle),animations=!!(</highlight><highlight class="stringliteral">&quot;animation&quot;</highlight><highlight class="normal">in<sp/>bodyStyle||vendorPrefix+</highlight><highlight class="stringliteral">&quot;Animation&quot;</highlight><highlight class="normal">in<sp/>bodyStyle),!android||transitions&amp;&amp;animations||(transitions=isString(bodyStyle.webkitTransition),animations=isString(bodyStyle.webkitAnimation))}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{history:!(!$window.history||!$window.history.pushState||4&gt;android||boxee),hasEvent:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(event){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">===event&amp;&amp;11&gt;=msie)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!1;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isUndefined(eventSupport[event])){var<sp/>divElm=document.createElement(</highlight><highlight class="stringliteral">&quot;div&quot;</highlight><highlight class="normal">);eventSupport[event]=</highlight><highlight class="stringliteral">&quot;on&quot;</highlight><highlight class="normal">+</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>in<sp/>divElm}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eventSupport[event]},csp:csp(),vendorPrefix:vendorPrefix,transitions:transitions,animations:animations,android:android}}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$TemplateRequestProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$templateCache&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$http&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$q&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($templateCache,$http,<ref refid="getrss_8php_1abb0f8f809252372e25f48d52b63ef29d" kindref="member">$q</ref>){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>handleRequestFn(tpl,ignoreRequestError){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>handleError(resp){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ignoreRequestError)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$compileMinErr(</highlight><highlight class="stringliteral">&quot;tpload&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>template:<sp/>{0}<sp/>(HTTP<sp/>status:<sp/>{1}<sp/>{2})&quot;</highlight><highlight class="normal">,tpl,resp.status,resp.statusText);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$q.reject(resp)}handleRequestFn.totalPendingRequests++;var<sp/>transformResponse=$http.defaults&amp;&amp;$http.defaults.transformResponse;isArray(transformResponse)?transformResponse=transformResponse.filter(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(transformer){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transformer!==defaultHttpResponseTransform}):transformResponse===defaultHttpResponseTransform&amp;&amp;(transformResponse=null);var<sp/>httpOptions={cache:$templateCache,transformResponse:transformResponse};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$http.get(tpl,httpOptions)[</highlight><highlight class="stringliteral">&quot;finally&quot;</highlight><highlight class="normal">](</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){handleRequestFn.totalPendingRequests--}).then(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(response){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$templateCache.put(tpl,response.data),response.data},handleError)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handleRequestFn.totalPendingRequests=0,handleRequestFn}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$$TestabilityProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$rootScope&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$browser&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$location&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($rootScope,$browser,$location){var<sp/>testability={};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>testability.findBindings=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,expression,opt_exactMatch){var<sp/>bindings=element.getElementsByClassName(</highlight><highlight class="stringliteral">&quot;ng-binding&quot;</highlight><highlight class="normal">),matches=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(bindings,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(binding){var<sp/>dataBinding=angular.element(binding).data(</highlight><highlight class="stringliteral">&quot;$binding&quot;</highlight><highlight class="normal">);dataBinding&amp;&amp;forEach(dataBinding,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(bindingName){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(opt_exactMatch){var<sp/>matcher=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;(^|\\s)&quot;</highlight><highlight class="normal">+escapeForRegexp(expression)+</highlight><highlight class="stringliteral">&quot;(\\s|\\||$)&quot;</highlight><highlight class="normal">);matcher.test(bindingName)&amp;&amp;matches.push(binding)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">-1!=bindingName.indexOf(expression)&amp;&amp;matches.push(binding)})}),matches},testability.findModels=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,expression,opt_exactMatch){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>prefixes=[</highlight><highlight class="stringliteral">&quot;ng-&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;data-ng-&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;ng\\:&quot;</highlight><highlight class="normal">],p=0;p&lt;prefixes.length;++p){var<sp/>attributeEquals=opt_exactMatch?</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;*=&quot;</highlight><highlight class="normal">,selector=</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">+prefixes[p]+</highlight><highlight class="stringliteral">&quot;model&quot;</highlight><highlight class="normal">+attributeEquals+</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">+expression+</highlight><highlight class="stringliteral">&apos;&quot;]&apos;</highlight><highlight class="normal">,elements=element.querySelectorAll(selector);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(elements.length)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elements}},testability.getLocation=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$location.url()},testability.setLocation=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(url){url!==$location.url()&amp;&amp;($location.url(url),$rootScope.$digest())},testability.whenStable=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(callback){$browser.notifyWhenNoOutstandingRequests(callback)},testability}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$TimeoutProvider(){this.$get=[</highlight><highlight class="stringliteral">&quot;$rootScope&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$browser&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$$q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$exceptionHandler&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($rootScope,$browser,<ref refid="getrss_8php_1abb0f8f809252372e25f48d52b63ef29d" kindref="member">$q</ref>,$<ref refid="getrss_8php_1abb0f8f809252372e25f48d52b63ef29d" kindref="member">$q</ref>,$exceptionHandler){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>timeout(fn,delay,invokeApply){isFunction(fn)||(invokeApply=delay,delay=fn,fn=noop);var<sp/>timeoutId,args=sliceArgs(arguments,3),skipApply=isDefined(invokeApply)&amp;&amp;!invokeApply,deferred=(skipApply?$$q:<ref refid="getrss_8php_1abb0f8f809252372e25f48d52b63ef29d" kindref="member">$q</ref>).defer(),promise=deferred.promise;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timeoutId=$browser.defer(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{deferred.resolve(fn.apply(null,args))}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){deferred.reject(e),$exceptionHandler(e)}</highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">{</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>deferreds[promise.$$timeoutId]}skipApply||$rootScope.$apply()},delay),promise.$$timeoutId=timeoutId,deferreds[timeoutId]=deferred,promise}var<sp/>deferreds={};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timeout.cancel=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(promise){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>promise&amp;&amp;promise.$$timeoutId<sp/>in<sp/>deferreds?(deferreds[promise.$$timeoutId].reject(</highlight><highlight class="stringliteral">&quot;canceled&quot;</highlight><highlight class="normal">),</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>deferreds[promise.$$timeoutId],$browser.defer.cancel(promise.$$timeoutId)):!1},timeout}]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>urlResolve(url){var<sp/>href=url;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msie&amp;&amp;(urlParsingNode.setAttribute(</highlight><highlight class="stringliteral">&quot;href&quot;</highlight><highlight class="normal">,href),href=urlParsingNode.href),urlParsingNode.setAttribute(</highlight><highlight class="stringliteral">&quot;href&quot;</highlight><highlight class="normal">,href),{href:urlParsingNode.href,protocol:urlParsingNode.protocol?urlParsingNode.protocol.replace(/:$/,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">):</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,host:urlParsingNode.host,search:urlParsingNode.search?urlParsingNode.search.replace(/^\?/,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">):</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,hash:urlParsingNode.hash?urlParsingNode.hash.replace(/^#/,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">):</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,hostname:urlParsingNode.hostname,port:urlParsingNode.port,pathname:</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">===urlParsingNode.pathname.charAt(0)?urlParsingNode.pathname:</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+urlParsingNode.pathname}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>urlIsSameOrigin(requestUrl){var<sp/>parsed=isString(requestUrl)?urlResolve(requestUrl):requestUrl;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parsed.protocol===originUrl.protocol&amp;&amp;parsed.host===originUrl.host}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$WindowProvider(){this.$get=valueFn(window)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$$CookieReader($document){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>safeDecodeURIComponent(str){</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decodeURIComponent(str)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str}}var<sp/>rawDocument=$document[0]||{},lastCookies={},lastCookieString=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>cookieArray,cookie,i,index,name,currentCookieString=rawDocument.cookie||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentCookieString!==lastCookieString)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(lastCookieString=currentCookieString,cookieArray=lastCookieString.split(</highlight><highlight class="stringliteral">&quot;;<sp/>&quot;</highlight><highlight class="normal">),lastCookies={},i=0;i&lt;cookieArray.length;i++)cookie=cookieArray[i],index=cookie.indexOf(</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">),index&gt;0&amp;&amp;(name=safeDecodeURIComponent(cookie.substring(0,index)),lastCookies[name]===undefined&amp;&amp;(lastCookies[name]=safeDecodeURIComponent(cookie.substring(index+1))));</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastCookies}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$$CookieReaderProvider(){this.$get=$$CookieReader}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>$FilterProvider($provide){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal">(name,factory){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isObject(name)){var<sp/>filters={};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(name,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(filter,key){filters[key]=</highlight><highlight class="keyword">register</highlight><highlight class="normal">(key,filter)}),filters}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$provide.factory(name+suffix,factory)}var<sp/>suffix=</highlight><highlight class="stringliteral">&quot;Filter&quot;</highlight><highlight class="normal">;this.</highlight><highlight class="keyword">register</highlight><highlight class="normal">=</highlight><highlight class="keyword">register</highlight><highlight class="normal">,this.$get=[</highlight><highlight class="stringliteral">&quot;$injector&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($injector){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(name){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$injector.get(name+suffix)}}],</highlight><highlight class="keyword">register</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;currency&quot;</highlight><highlight class="normal">,currencyFilter),</highlight><highlight class="keyword">register</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;date&quot;</highlight><highlight class="normal">,dateFilter),</highlight><highlight class="keyword">register</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;filter&quot;</highlight><highlight class="normal">,filterFilter),</highlight><highlight class="keyword">register</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;json&quot;</highlight><highlight class="normal">,jsonFilter),</highlight><highlight class="keyword">register</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;limitTo&quot;</highlight><highlight class="normal">,limitToFilter),</highlight><highlight class="keyword">register</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;lowercase&quot;</highlight><highlight class="normal">,lowercaseFilter),</highlight><highlight class="keyword">register</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal">,numberFilter),</highlight><highlight class="keyword">register</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;orderBy&quot;</highlight><highlight class="normal">,orderByFilter),</highlight><highlight class="keyword">register</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;uppercase&quot;</highlight><highlight class="normal">,uppercaseFilter)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>filterFilter(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(array,expression,comparator){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isArrayLike(array)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(null==array)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>array;</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>minErr(</highlight><highlight class="stringliteral">&quot;filter&quot;</highlight><highlight class="normal">)(</highlight><highlight class="stringliteral">&quot;notarray&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Expected<sp/>array<sp/>but<sp/>received:<sp/>{0}&quot;</highlight><highlight class="normal">,array)}var<sp/>predicateFn,matchAgainstAnyProp,expressionType=getTypeForFilter(expression);</highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(expressionType){</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">:predicateFn=expression;</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;boolean&quot;</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">:matchAgainstAnyProp=!0;</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">:predicateFn=createPredicateFn(expression,comparator,matchAgainstAnyProp);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>array}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Array.prototype.filter.call(array,predicateFn)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>hasCustomToString(obj){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isFunction(obj.toString)&amp;&amp;obj.toString!==Object.prototype.toString}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createPredicateFn(expression,comparator,matchAgainstAnyProp){var<sp/>predicateFn,shouldMatchPrimitives=isObject(expression)&amp;&amp;</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">in<sp/>expression;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comparator===!0?comparator=equals:isFunction(comparator)||(comparator=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(actual,expected){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isUndefined(actual)?!1:null===actual||null===expected?actual===expected:isObject(expected)||isObject(actual)&amp;&amp;!hasCustomToString(actual)?!1:(actual=lowercase(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">+actual),expected=lowercase(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">+expected),-1!==actual.indexOf(expected))}),predicateFn=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(item){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shouldMatchPrimitives&amp;&amp;!isObject(item)?deepCompare(item,expression.$,comparator,!1):deepCompare(item,expression,comparator,matchAgainstAnyProp)}}function<sp/>deepCompare(actual,expected,comparator,matchAgainstAnyProp,dontMatchWholeObject){var<sp/>actualType=getTypeForFilter(actual),expectedType=getTypeForFilter(expected);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">===expectedType&amp;&amp;</highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal">===expected.charAt(0))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!deepCompare(actual,expected.substring(1),comparator,matchAgainstAnyProp);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isArray(actual))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>actual.some(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(item){return<sp/>deepCompare(item,expected,comparator,matchAgainstAnyProp)});</highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(actualType){</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">:var<sp/>key;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(matchAgainstAnyProp){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(key<sp/>in<sp/>actual)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">!==key.charAt(0)&amp;&amp;deepCompare(actual[key],expected,comparator,!0))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!0;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dontMatchWholeObject?!1:deepCompare(actual,expected,comparator,!1)}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">===expectedType){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(key<sp/>in<sp/>expected){var<sp/>expectedVal=expected[key];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isFunction(expectedVal)&amp;&amp;!isUndefined(expectedVal)){var<sp/>matchAnyProperty=</highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">===key,actualVal=matchAnyProperty?actual:actual[key];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!deepCompare(actualVal,expectedVal,comparator,matchAnyProperty,matchAnyProperty))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!1}}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!0}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comparator(actual,expected);</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!1;</highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comparator(actual,expected)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getTypeForFilter(val){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null===val?</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">:typeof<sp/>val}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>currencyFilter($locale){var<sp/>formats=$locale.NUMBER_FORMATS;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(amount,currencySymbol,fractionSize){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isUndefined(currencySymbol)&amp;&amp;(currencySymbol=formats.CURRENCY_SYM),isUndefined(fractionSize)&amp;&amp;(fractionSize=formats.PATTERNS[1].maxFrac),null==amount?amount:formatNumber(amount,formats.PATTERNS[1],formats.GROUP_SEP,formats.DECIMAL_SEP,fractionSize).replace(/\u00A4/g,currencySymbol)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>numberFilter($locale){var<sp/>formats=$locale.NUMBER_FORMATS;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(number,fractionSize){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null==number?number:formatNumber(number,formats.PATTERNS[0],formats.GROUP_SEP,formats.DECIMAL_SEP,fractionSize)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>formatNumber(number,pattern,groupSep,decimalSep,fractionSize){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isObject(number))</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;var<sp/>isNegative=0&gt;number;number=Math.abs(number);var<sp/>isInfinity=number===1/0;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInfinity&amp;&amp;!isFinite(number))</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;var<sp/>numStr=number+</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,formatedText=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,hasExponent=!1,parts=[];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isInfinity&amp;&amp;(formatedText=</highlight><highlight class="stringliteral">&quot;∞&quot;</highlight><highlight class="normal">),!isInfinity&amp;&amp;-1!==numStr.indexOf(</highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">)){var<sp/>match=numStr.match(/([\d\.]+)e(-?)(\d+)/);match&amp;&amp;</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">==match[2]&amp;&amp;match[3]&gt;fractionSize+1?number=0:(formatedText=numStr,hasExponent=!0)}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isInfinity||hasExponent)fractionSize&gt;0&amp;&amp;1&gt;number&amp;&amp;(formatedText=number.toFixed(fractionSize),number=parseFloat(formatedText));</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{var<sp/>fractionLen=(numStr.split(DECIMAL_SEP)[1]||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).length;isUndefined(fractionSize)&amp;&amp;(fractionSize=Math.min(Math.max(pattern.minFrac,fractionLen),pattern.maxFrac)),number=+(Math.round(+(number.toString()+</highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">+fractionSize)).toString()+</highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">+-fractionSize);var<sp/>fraction=(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">+number).split(DECIMAL_SEP),whole=fraction[0];fraction=fraction[1]||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;var<sp/>i,pos=0,lgroup=pattern.lgSize,group=pattern.gSize;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whole.length&gt;=lgroup+group)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(pos=whole.length-lgroup,i=0;pos&gt;i;i++)(pos-i)%group===0&amp;&amp;0!==i&amp;&amp;(formatedText+=groupSep),formatedText+=whole.charAt(i);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=pos;i&lt;whole.length;i++)(whole.length-i)%lgroup===0&amp;&amp;0!==i&amp;&amp;(formatedText+=groupSep),formatedText+=whole.charAt(i);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;fraction.length&lt;fractionSize;)fraction+=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;fractionSize&amp;&amp;</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">!==fractionSize&amp;&amp;(formatedText+=decimalSep+fraction.substr(0,fractionSize))}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0===number&amp;&amp;(isNegative=!1),parts.push(isNegative?pattern.negPre:pattern.posPre,formatedText,isNegative?pattern.negSuf:pattern.posSuf),parts.join(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>padNumber(num,digits,trim){var<sp/>neg=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(0&gt;num&amp;&amp;(neg=</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,num=-num),num=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">+num;num.length&lt;digits;)num=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">+num;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trim&amp;&amp;(num=num.substr(num.length-digits)),neg+num}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>dateGetter(name,size,offset,trim){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offset=offset||0,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(date){var<sp/>value=date[</highlight><highlight class="stringliteral">&quot;get&quot;</highlight><highlight class="normal">+name]();</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(offset&gt;0||value&gt;-offset)&amp;&amp;(value+=offset),0===value&amp;&amp;-12==offset&amp;&amp;(value=12),padNumber(value,size,trim)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>dateStrGetter(name,shortForm){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(date,formats){var<sp/>value=date[</highlight><highlight class="stringliteral">&quot;get&quot;</highlight><highlight class="normal">+name](),</highlight><highlight class="keyword">get</highlight><highlight class="normal">=uppercase(shortForm?</highlight><highlight class="stringliteral">&quot;SHORT&quot;</highlight><highlight class="normal">+name:name);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>formats[</highlight><highlight class="keyword">get</highlight><highlight class="normal">][value]}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>timeZoneGetter(date,formats,offset){var<sp/>zone=-1*offset,paddedZone=zone&gt;=0?</highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paddedZone+=padNumber(Math[zone&gt;0?</highlight><highlight class="stringliteral">&quot;floor&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;ceil&quot;</highlight><highlight class="normal">](zone/60),2)+padNumber(Math.abs(zone%60),2)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getFirstThursdayOfYear(year){var<sp/>dayOfWeekOnFirst=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Date(year,0,1).getDay();</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Date(year,0,(4&gt;=dayOfWeekOnFirst?5:12)-dayOfWeekOnFirst)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getThursdayThisWeek(datetime){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Date(datetime.getFullYear(),datetime.getMonth(),datetime.getDate()+(4-datetime.getDay()))}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>weekGetter(size){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(date){var<sp/>firstThurs=getFirstThursdayOfYear(date.getFullYear()),thisThurs=getThursdayThisWeek(date),diff=+thisThurs-+firstThurs,result=1+Math.round(diff/6048e5);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>padNumber(result,size)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ampmGetter(date,formats){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>date.getHours()&lt;12?formats.AMPMS[0]:formats.AMPMS[1]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>eraGetter(date,formats){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>date.getFullYear()&lt;=0?formats.ERAS[0]:formats.ERAS[1]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>longEraGetter(date,formats){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>date.getFullYear()&lt;=0?formats.ERANAMES[0]:formats.ERANAMES[1]}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>dateFilter($locale){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>jsonStringToDate(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">){var<sp/>match;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(match=</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.match(R_ISO8601_STR)){var<sp/>date=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Date(0),tzHour=0,tzMin=0,dateSetter=match[8]?date.setUTCFullYear:date.setFullYear,timeSetter=match[8]?date.setUTCHours:date.setHours;match[9]&amp;&amp;(tzHour=toInt(match[9]+match[10]),tzMin=toInt(match[9]+match[11])),dateSetter.call(date,toInt(match[1]),toInt(match[2])-1,toInt(match[3]));var<sp/>h=toInt(match[4]||0)-tzHour,m=toInt(match[5]||0)-tzMin,s=toInt(match[6]||0),ms=Math.round(1e3*parseFloat(</highlight><highlight class="stringliteral">&quot;0.&quot;</highlight><highlight class="normal">+(match[7]||0)));</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timeSetter.call(date,h,m,s,ms),date}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">}var<sp/>R_ISO8601_STR=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(date,format,timezone){var<sp/>fn,match,text=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,parts=[];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(format=format||</highlight><highlight class="stringliteral">&quot;mediumDate&quot;</highlight><highlight class="normal">,format=$locale.DATETIME_FORMATS[format]||format,isString(date)&amp;&amp;(date=NUMBER_STRING.test(date)?toInt(date):jsonStringToDate(date)),isNumber(date)&amp;&amp;(date=new<sp/>Date(date)),!isDate(date)||!isFinite(date.getTime()))return<sp/>date;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;format;)match=DATE_FORMATS_SPLIT.exec(format),match?(parts=concat(parts,match,1),format=parts.pop()):(parts.push(format),format=null);var<sp/>dateTimezoneOffset=date.getTimezoneOffset();</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timezone&amp;&amp;(dateTimezoneOffset=timezoneToOffset(timezone,date.getTimezoneOffset()),date=convertTimezoneToLocal(date,timezone,!0)),forEach(parts,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){fn=DATE_FORMATS[value],text+=fn?fn(date,$locale.DATETIME_FORMATS,dateTimezoneOffset):value.replace(/(^</highlight><highlight class="stringliteral">&apos;|&apos;</highlight><highlight class="normal">$)/g,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).replace(/</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">/g,</highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}),text}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>jsonFilter(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(object,spacing){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isUndefined(spacing)&amp;&amp;(spacing=2),toJson(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,spacing)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>limitToFilter(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(input,limit,begin){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>limit=Math.abs(Number(limit))===1/0?Number(limit):toInt(limit),isNaN(limit)?input:(isNumber(input)&amp;&amp;(input=input.toString()),isArray(input)||isString(input)?(begin=!begin||isNaN(begin)?0:toInt(begin),begin=0&gt;begin&amp;&amp;begin&gt;=-input.length?input.length+begin:begin,limit&gt;=0?input.slice(begin,begin+limit):0===begin?input.slice(limit,input.length):input.slice(Math.max(0,begin+limit),begin)):input)}}function<sp/>orderByFilter($parse){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(array,sortPredicate,reverseOrder){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>comparator(o1,o2){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0;i&lt;sortPredicate.length;i++){var<sp/>comp=sortPredicate[i](o1,o2);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0!==comp)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comp}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>reverseComparator(comp,descending){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>descending?</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a,b){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comp(b,a)}:comp}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>isPrimitive(value){</highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(typeof<sp/>value){</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;boolean&quot;</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">case</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!0;</highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!1}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>objectToString(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null===value?</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">==typeof<sp/>value.valueOf&amp;&amp;(value=value.valueOf(),isPrimitive(value))?value:</highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">==typeof<sp/>value.toString&amp;&amp;(value=value.toString(),isPrimitive(value))?value:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>compare(v1,v2){var<sp/>t1=typeof<sp/>v1,t2=typeof<sp/>v2;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t1===t2&amp;&amp;</highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">===t1&amp;&amp;(v1=objectToString(v1),v2=objectToString(v2)),t1===t2?(</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">===t1&amp;&amp;(v1=v1.toLowerCase(),v2=v2.toLowerCase()),v1===v2?0:v2&gt;v1?-1:1):t2&gt;t1?-1:1}return<sp/>isArrayLike(array)?(sortPredicate=isArray(sortPredicate)?sortPredicate:[sortPredicate],0===sortPredicate.length&amp;&amp;(sortPredicate=[</highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">]),sortPredicate=sortPredicate.map(function(predicate){var<sp/>descending=!1,</highlight><highlight class="keyword">get</highlight><highlight class="normal">=predicate||identity;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isString(predicate)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">==predicate.charAt(0)||</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">==predicate.charAt(0))&amp;&amp;(descending=</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">==predicate.charAt(0),predicate=predicate.substring(1)),</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">===predicate)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reverseComparator(compare,descending);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">get</highlight><highlight class="normal">=$parse(predicate),</highlight><highlight class="keyword">get</highlight><highlight class="normal">.constant){var<sp/>key=</highlight><highlight class="keyword">get</highlight><highlight class="normal">();</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reverseComparator(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a,b){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare(a[key],b[key])},descending)}}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reverseComparator(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a,b){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare(</highlight><highlight class="keyword">get</highlight><highlight class="normal">(a),</highlight><highlight class="keyword">get</highlight><highlight class="normal">(b))},descending)}),slice.call(array).sort(reverseComparator(comparator,reverseOrder))):array}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ngDirective(directive){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isFunction(directive)&amp;&amp;(directive={link:directive}),directive.restrict=directive.restrict||</highlight><highlight class="stringliteral">&quot;AC&quot;</highlight><highlight class="normal">,valueFn(directive)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>nullFormRenameControl(control,name){control.$name=name}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>FormController(element,attrs,$scope,$animate,$interpolate){var<sp/>form=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,controls=[],parentForm=form.$$parentForm=element.parent().controller(</highlight><highlight class="stringliteral">&quot;form&quot;</highlight><highlight class="normal">)||nullFormCtrl;form.$error={},form.$$success={},form.$pending=undefined,form.$name=$interpolate(attrs.name||attrs.ngForm||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)($scope),form.$dirty=!1,form.$pristine=!0,form.$valid=!0,form.$invalid=!1,form.$submitted=!1,parentForm.$addControl(form),form.$rollbackViewValue=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){forEach(controls,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(control){control.$rollbackViewValue()})},form.$commitViewValue=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){forEach(controls,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(control){control.$commitViewValue()})},form.$addControl=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(control){assertNotHasOwnProperty(control.$name,</highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">),controls.push(control),control.$name&amp;&amp;(form[control.$name]=control)},form.$$renameControl=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(control,newName){var<sp/>oldName=control.$name;form[oldName]===control&amp;&amp;</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>form[oldName],form[newName]=control,control.$name=newName},form.$removeControl=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(control){control.$name&amp;&amp;form[control.$name]===control&amp;&amp;</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>form[control.$name],forEach(form.$pending,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,name){form.$setValidity(name,null,control)}),forEach(form.$error,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,name){form.$setValidity(name,null,control)}),forEach(form.$$success,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value,name){form.$setValidity(name,null,control)}),arrayRemove(controls,control)},addSetValidityMethod({ctrl:</highlight><highlight class="keyword">this</highlight><highlight class="normal">,$element:element,set:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(object,property,controller){var<sp/>list=</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[property];</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(list){var<sp/>index=list.indexOf(controller);-1===index&amp;&amp;list.push(controller)}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[property]=[controller]},unset:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(object,property,controller){var<sp/>list=</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[property];list&amp;&amp;(arrayRemove(list,controller),0===list.length&amp;&amp;</highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[property])},parentForm:parentForm,$animate:$animate}),form.$setDirty=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){$animate.removeClass(element,PRISTINE_CLASS),$animate.addClass(element,DIRTY_CLASS),form.$dirty=!0,form.$pristine=!1,parentForm.$setDirty()},form.$setPristine=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){$animate.setClass(element,PRISTINE_CLASS,DIRTY_CLASS+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+SUBMITTED_CLASS),form.$dirty=!1,form.$pristine=!0,form.$submitted=!1,forEach(controls,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(control){control.$setPristine()})},form.$setUntouched=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){forEach(controls,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(control){control.$setUntouched()})},form.$setSubmitted=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){$animate.addClass(element,SUBMITTED_CLASS),form.$submitted=!0,parentForm.$setSubmitted()}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>stringBasedInputType(ctrl){ctrl.$formatters.push(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctrl.$isEmpty(value)?value:value.toString()})}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>textInputType(scope,element,attr,ctrl,$sniffer,$browser){baseInputType(scope,element,attr,ctrl,$sniffer,$browser),stringBasedInputType(ctrl)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>baseInputType(scope,element,attr,ctrl,$sniffer,$browser){var<sp/>type=lowercase(element[0].type);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!$sniffer.android){var<sp/>composing=!1;element.on(</highlight><highlight class="stringliteral">&quot;compositionstart&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(data){composing=!0}),element.on(</highlight><highlight class="stringliteral">&quot;compositionend&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){composing=!1,listener()})}var<sp/>listener=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(ev){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeout&amp;&amp;($browser.defer.cancel(timeout),timeout=null),!composing){var<sp/>value=element.val(),</highlight><highlight class="keyword">event</highlight><highlight class="normal">=ev&amp;&amp;ev.type;</highlight><highlight class="stringliteral">&quot;password&quot;</highlight><highlight class="normal">===type||attr.ngTrim&amp;&amp;</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">===attr.ngTrim||(value=trim(value)),(ctrl.$viewValue!==value||</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">===value&amp;&amp;ctrl.$$hasNativeValidators)&amp;&amp;ctrl.$setViewValue(value,event)}};</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">($sniffer.hasEvent(</highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">))element.on(</highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">,listener);</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{var<sp/>timeout,deferListener=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(ev,input,origValue){timeout||(timeout=$browser.defer(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){timeout=null,input&amp;&amp;input.value===origValue||listener(ev)}))};element.on(</highlight><highlight class="stringliteral">&quot;keydown&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(event){var<sp/>key=</highlight><highlight class="keyword">event</highlight><highlight class="normal">.keyCode;91===key||key&gt;15&amp;&amp;19&gt;key||key&gt;=37&amp;&amp;40&gt;=key||deferListener(event,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,this.value)}),$sniffer.hasEvent(</highlight><highlight class="stringliteral">&quot;paste&quot;</highlight><highlight class="normal">)&amp;&amp;element.on(</highlight><highlight class="stringliteral">&quot;paste<sp/>cut&quot;</highlight><highlight class="normal">,deferListener)}element.on(</highlight><highlight class="stringliteral">&quot;change&quot;</highlight><highlight class="normal">,listener),ctrl.$render=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){element.val(ctrl.$isEmpty(ctrl.$viewValue)?</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:ctrl.$viewValue)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>weekParser(isoWeek,existingDate){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isDate(isoWeek))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isoWeek;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isString(isoWeek)){WEEK_REGEXP.lastIndex=0;var<sp/>parts=WEEK_REGEXP.exec(isoWeek);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parts){var<sp/>year=+parts[1],week=+parts[2],hours=0,minutes=0,seconds=0,milliseconds=0,firstThurs=getFirstThursdayOfYear(year),addDays=7*(week-1);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>existingDate&amp;&amp;(hours=existingDate.getHours(),minutes=existingDate.getMinutes(),seconds=existingDate.getSeconds(),milliseconds=existingDate.getMilliseconds()),</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Date(year,0,firstThurs.getDate()+addDays,hours,minutes,seconds,milliseconds)}}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NaN}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createDateParser(regexp,mapping){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(iso,date){var<sp/>parts,map;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isDate(iso))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iso;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isString(iso)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">==iso.charAt(0)&amp;&amp;</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">==iso.charAt(iso.length-1)&amp;&amp;(iso=iso.substring(1,iso.length-1)),ISO_DATE_REGEXP.test(iso))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Date(iso);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(regexp.lastIndex=0,parts=regexp.exec(iso))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parts.shift(),map=date?{yyyy:date.getFullYear(),MM:date.getMonth()+1,dd:date.getDate(),HH:date.getHours(),mm:date.getMinutes(),ss:date.getSeconds(),sss:date.getMilliseconds()/1e3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},forEach(parts,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(part,index){index&lt;mapping.length&amp;&amp;(map[mapping[index]]=+part)}),</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Date(map.yyyy,map.MM-1,map.dd,map.HH,map.mm,map.ss||0,1e3*map.sss||0)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NaN}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createDateInputType(type,regexp,parseDate,format){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope,element,attr,ctrl,$sniffer,$browser,$filter){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>isValidDate(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value&amp;&amp;!(value.getTime&amp;&amp;value.getTime()!==value.getTime())}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>parseObservedDateValue(val){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isDefined(val)?isDate(val)?val:parseDate(val):undefined}badInputChecker(scope,element,attr,ctrl),baseInputType(scope,element,attr,ctrl,$sniffer,$browser);var<sp/>previousDate,timezone=ctrl&amp;&amp;ctrl.$options&amp;&amp;ctrl.$options.timezone;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ctrl.$$parserName=type,ctrl.$parsers.push(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){if(ctrl.$isEmpty(value))return<sp/>null;if(regexp.test(value)){var<sp/>parsedDate=parseDate(value,previousDate);return<sp/>timezone&amp;&amp;(parsedDate=convertTimezoneToLocal(parsedDate,timezone)),parsedDate}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>undefined}),ctrl.$formatters.push(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){if(value&amp;&amp;!isDate(value))throw<sp/>$ngModelMinErr(</highlight><highlight class="stringliteral">&quot;datefmt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Expected<sp/>`{0}`<sp/>to<sp/>be<sp/>a<sp/>date&quot;</highlight><highlight class="normal">,value);return<sp/>isValidDate(value)?(previousDate=value,previousDate&amp;&amp;timezone&amp;&amp;(previousDate=convertTimezoneToLocal(previousDate,timezone,!0)),$filter(</highlight><highlight class="stringliteral">&quot;date&quot;</highlight><highlight class="normal">)(value,format,timezone)):(previousDate=null,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)}),isDefined(attr.min)||attr.ngMin){var<sp/>minVal;ctrl.$validators.min=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!isValidDate(value)||isUndefined(minVal)||parseDate(value)&gt;=minVal},attr.$observe(</highlight><highlight class="stringliteral">&quot;min&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(val){minVal=parseObservedDateValue(val),ctrl.$validate()})}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isDefined(attr.max)||attr.ngMax){var<sp/>maxVal;ctrl.$validators.max=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!isValidDate(value)||isUndefined(maxVal)||parseDate(value)&lt;=maxVal},attr.$observe(</highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(val){maxVal=parseObservedDateValue(val),ctrl.$validate()})}}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>badInputChecker(scope,element,attr,ctrl){var<sp/>node=element[0],nativeValidation=ctrl.$$hasNativeValidators=isObject(node.validity);nativeValidation&amp;&amp;ctrl.$parsers.push(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){var<sp/>validity=element.prop(VALIDITY_STATE_PROPERTY)||{};</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>validity.badInput&amp;&amp;!validity.typeMismatch?undefined:value})}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>numberInputType(scope,element,attr,ctrl,$sniffer,$browser){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(badInputChecker(scope,element,attr,ctrl),baseInputType(scope,element,attr,ctrl,$sniffer,$browser),ctrl.$$parserName=</highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal">,ctrl.$parsers.push(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctrl.$isEmpty(value)?null:NUMBER_REGEXP.test(value)?parseFloat(value):undefined}),ctrl.$formatters.push(function(value){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!ctrl.$isEmpty(value)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isNumber(value))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$ngModelMinErr(</highlight><highlight class="stringliteral">&quot;numfmt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Expected<sp/>`{0}`<sp/>to<sp/>be<sp/>a<sp/>number&quot;</highlight><highlight class="normal">,value);value=value.toString()}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value}),isDefined(attr.min)||attr.ngMin){var<sp/>minVal;ctrl.$validators.min=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctrl.$isEmpty(value)||isUndefined(minVal)||value&gt;=minVal},attr.$observe(</highlight><highlight class="stringliteral">&quot;min&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(val){isDefined(val)&amp;&amp;!isNumber(val)&amp;&amp;(val=parseFloat(val,10)),minVal=isNumber(val)&amp;&amp;!isNaN(val)?val:undefined,ctrl.$validate()})}</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isDefined(attr.max)||attr.ngMax){var<sp/>maxVal;ctrl.$validators.max=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctrl.$isEmpty(value)||isUndefined(maxVal)||maxVal&gt;=value},attr.$observe(</highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(val){isDefined(val)&amp;&amp;!isNumber(val)&amp;&amp;(val=parseFloat(val,10)),maxVal=isNumber(val)&amp;&amp;!isNaN(val)?val:undefined,ctrl.$validate()})}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>urlInputType(scope,element,attr,ctrl,$sniffer,$browser){baseInputType(scope,element,attr,ctrl,$sniffer,$browser),stringBasedInputType(ctrl),ctrl.$$parserName=</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,ctrl.$validators.url=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(modelValue,viewValue){var<sp/>value=modelValue||viewValue;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctrl.$isEmpty(value)||URL_REGEXP.test(value)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>emailInputType(scope,element,attr,ctrl,$sniffer,$browser){baseInputType(scope,element,attr,ctrl,$sniffer,$browser),stringBasedInputType(ctrl),ctrl.$$parserName=</highlight><highlight class="stringliteral">&quot;email&quot;</highlight><highlight class="normal">,ctrl.$validators.email=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(modelValue,viewValue){var<sp/>value=modelValue||viewValue;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctrl.$isEmpty(value)||EMAIL_REGEXP.test(value)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>radioInputType(scope,element,attr,ctrl){isUndefined(attr.name)&amp;&amp;element.attr(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,nextUid());var<sp/>listener=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(ev){element[0].checked&amp;&amp;ctrl.$setViewValue(attr.value,ev&amp;&amp;ev.type)};element.on(</highlight><highlight class="stringliteral">&quot;click&quot;</highlight><highlight class="normal">,listener),ctrl.$render=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>value=attr.value;element[0].checked=value==ctrl.$viewValue},attr.$observe(</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,ctrl.$render)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>parseConstantExpr($parse,context,name,expression,fallback){var<sp/>parseFn;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isDefined(expression)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parseFn=$parse(expression),!parseFn.constant)</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>minErr(</highlight><highlight class="stringliteral">&quot;ngModel&quot;</highlight><highlight class="normal">)(</highlight><highlight class="stringliteral">&quot;constexpr&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Expected<sp/>constant<sp/>expression<sp/>for<sp/>`{0}`,<sp/>but<sp/>saw<sp/>`{1}`.&quot;</highlight><highlight class="normal">,name,expression);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parseFn(context)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fallback}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>checkboxInputType(scope,element,attr,ctrl,$sniffer,$browser,$filter,$parse){var<sp/>trueValue=parseConstantExpr($parse,scope,</highlight><highlight class="stringliteral">&quot;ngTrueValue&quot;</highlight><highlight class="normal">,attr.ngTrueValue,!0),falseValue=parseConstantExpr($parse,scope,</highlight><highlight class="stringliteral">&quot;ngFalseValue&quot;</highlight><highlight class="normal">,attr.ngFalseValue,!1),listener=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(ev){ctrl.$setViewValue(element[0].checked,ev&amp;&amp;ev.type)};element.on(</highlight><highlight class="stringliteral">&quot;click&quot;</highlight><highlight class="normal">,listener),ctrl.$render=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){element[0].checked=ctrl.$viewValue},ctrl.$isEmpty=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value===!1},ctrl.$formatters.push(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>equals(value,trueValue)}),ctrl.$parsers.push(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){return<sp/>value?trueValue:falseValue})}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>classDirective(name,selector){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name=</highlight><highlight class="stringliteral">&quot;ngClass&quot;</highlight><highlight class="normal">+name,[</highlight><highlight class="stringliteral">&quot;$animate&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($animate){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>arrayDifference(tokens1,tokens2){var<sp/>values=[];outer:</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0;i&lt;tokens1.length;i++){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>token=tokens1[i],j=0;j&lt;tokens2.length;j++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(token==tokens2[j])</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"><sp/>outer;values.push(token)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>values}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>arrayClasses(classVal){var<sp/>classes=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isArray(classVal)?(forEach(classVal,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(v){classes=classes.concat(arrayClasses(v))}),classes):isString(classVal)?classVal.split(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">):isObject(classVal)?(forEach(classVal,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(v,k){v&amp;&amp;(classes=classes.concat(k.split(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)))}),classes):classVal}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{restrict:</highlight><highlight class="stringliteral">&quot;AC&quot;</highlight><highlight class="normal">,link:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(scope,element,attr){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>addClasses(classes){var<sp/>newClasses=digestClassCounts(classes,1);attr.$addClass(newClasses)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>removeClasses(classes){var<sp/>newClasses=digestClassCounts(classes,-1);attr.$removeClass(newClasses)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>digestClassCounts(classes,count){var<sp/>classCounts=element.data(</highlight><highlight class="stringliteral">&quot;$classCounts&quot;</highlight><highlight class="normal">)||createMap(),classesToUpdate=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(classes,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(className){(count&gt;0||classCounts[className])&amp;&amp;(classCounts[className]=(classCounts[className]||0)+count,classCounts[className]===+(count&gt;0)&amp;&amp;classesToUpdate.push(className))}),element.data(</highlight><highlight class="stringliteral">&quot;$classCounts&quot;</highlight><highlight class="normal">,classCounts),classesToUpdate.join(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>updateClasses(oldClasses,newClasses){var<sp/>toAdd=arrayDifference(newClasses,oldClasses),toRemove=arrayDifference(oldClasses,newClasses);toAdd=digestClassCounts(toAdd,1),toRemove=digestClassCounts(toRemove,-1),toAdd&amp;&amp;toAdd.length&amp;&amp;$animate.addClass(element,toAdd),toRemove&amp;&amp;toRemove.length&amp;&amp;$animate.removeClass(element,toRemove)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>ngClassWatchAction(newVal){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(selector===!0||scope.$index%2===selector){var<sp/>newClasses=arrayClasses(newVal||[]);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oldVal){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!equals(newVal,oldVal)){var<sp/>oldClasses=arrayClasses(oldVal);updateClasses(oldClasses,newClasses)}}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>addClasses(newClasses)}oldVal=shallowCopy(newVal)}var<sp/>oldVal;scope.$watch(attr[name],ngClassWatchAction,!0),attr.$observe(</highlight><highlight class="stringliteral">&quot;class&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){ngClassWatchAction(scope.$eval(attr[name]))}),</highlight><highlight class="stringliteral">&quot;ngClass&quot;</highlight><highlight class="normal">!==name&amp;&amp;scope.$watch(</highlight><highlight class="stringliteral">&quot;$index&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($index,old$index){var<sp/>mod=1&amp;$index;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mod!==(1&amp;old$index)){var<sp/>classes=arrayClasses(scope.$eval(attr[name]));mod===selector?addClasses(classes):removeClasses(classes)}})}}}]}function<sp/>addSetValidityMethod(context){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>setValidity(validationErrorKey,state,controller){state===undefined?createAndSet(</highlight><highlight class="stringliteral">&quot;$pending&quot;</highlight><highlight class="normal">,validationErrorKey,controller):unsetAndCleanup(</highlight><highlight class="stringliteral">&quot;$pending&quot;</highlight><highlight class="normal">,validationErrorKey,controller),isBoolean(state)?state?(unset(ctrl.$error,validationErrorKey,controller),set(ctrl.$$success,validationErrorKey,controller)):(set(ctrl.$error,validationErrorKey,controller),unset(ctrl.$$success,validationErrorKey,controller)):(unset(ctrl.$error,validationErrorKey,controller),unset(ctrl.$$success,validationErrorKey,controller)),ctrl.$pending?(cachedToggleClass(PENDING_CLASS,!0),ctrl.$valid=ctrl.$invalid=undefined,toggleValidationCss(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,null)):(cachedToggleClass(PENDING_CLASS,!1),ctrl.$valid=isObjectEmpty(ctrl.$error),ctrl.$invalid=!ctrl.$valid,toggleValidationCss(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,ctrl.$valid));var<sp/>combinedState;combinedState=ctrl.$pending&amp;&amp;ctrl.$pending[validationErrorKey]?undefined:ctrl.$error[validationErrorKey]?!1:ctrl.$$success[validationErrorKey]?!0:null,toggleValidationCss(validationErrorKey,combinedState),parentForm.$setValidity(validationErrorKey,combinedState,ctrl)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createAndSet(name,value,controller){ctrl[name]||(ctrl[name]={}),set(ctrl[name],value,controller)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>unsetAndCleanup(name,value,controller){ctrl[name]&amp;&amp;unset(ctrl[name],value,controller),isObjectEmpty(ctrl[name])&amp;&amp;(ctrl[name]=undefined)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>cachedToggleClass(className,switchValue){switchValue&amp;&amp;!classCache[className]?($animate.addClass($element,className),classCache[className]=!0):!switchValue&amp;&amp;classCache[className]&amp;&amp;($animate.removeClass($element,className),classCache[className]=!1)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>toggleValidationCss(validationErrorKey,isValid){validationErrorKey=validationErrorKey?</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">+snake_case(validationErrorKey,</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">):</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,cachedToggleClass(VALID_CLASS+validationErrorKey,isValid===!0),cachedToggleClass(INVALID_CLASS+validationErrorKey,isValid===!1)}var<sp/>ctrl=context.ctrl,$element=context.$element,classCache={},set=context.set,unset=context.unset,parentForm=context.parentForm,$animate=context.$animate;classCache[INVALID_CLASS]=!(classCache[VALID_CLASS]=$element.hasClass(VALID_CLASS)),ctrl.$setValidity=setValidity}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>isObjectEmpty(obj){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>prop<sp/>in<sp/>obj)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!1;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">!0}var<sp/>REGEX_STRING_REGEXP=/^\/(.+)\/([a-z]*)$/,VALIDITY_STATE_PROPERTY=</highlight><highlight class="stringliteral">&quot;validity&quot;</highlight><highlight class="normal">,lowercase=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(string){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isString(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)?</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.toLowerCase():</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">},hasOwnProperty=Object.prototype.hasOwnProperty,uppercase=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(string){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isString(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)?</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.toUpperCase():</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">},manualLowercase=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(s){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isString(s)?s.replace(/[A-Z]/g,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(ch){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String.fromCharCode(32|ch.charCodeAt(0))}):s},manualUppercase=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(s){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isString(s)?s.replace(/[a-z]/g,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(ch){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String.fromCharCode(-33&amp;ch.charCodeAt(0))}):s};</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">!==</highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal">.toLowerCase()&amp;&amp;(lowercase=manualLowercase,uppercase=manualUppercase);var<sp/>msie,jqLite,jQuery,angularModule,slice=[].slice,splice=[].splice,push=[].push,toString=Object.prototype.toString,getPrototypeOf=Object.getPrototypeOf,ngMinErr=minErr(</highlight><highlight class="stringliteral">&quot;ng&quot;</highlight><highlight class="normal">),angular=window.angular||(window.angular={}),uid=0;msie=document.documentMode,noop.$inject=[],identity.$inject=[];var<sp/>skipDestroyOnNextJQueryCleanData,isArray=Array.isArray,TYPED_ARRAY_REGEXP=/^\[object<sp/>(Uint8(Clamped)?)|(Uint16)|(Uint32)|(Int8)|(Int16)|(Int32)|(Float(32)|(64))Array\]$/,trim=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isString(value)?value.trim():value},escapeForRegexp=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(s){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.replace(/([-()\[\]{}+?*.$\^|,:#&lt;!\\])/g,</highlight><highlight class="stringliteral">&quot;\\$1&quot;</highlight><highlight class="normal">).replace(/\x08/g,</highlight><highlight class="stringliteral">&quot;\\x08&quot;</highlight><highlight class="normal">)},csp=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isDefined(csp.isActive_))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csp.isActive_;var<sp/>active=!(!document.querySelector(</highlight><highlight class="stringliteral">&quot;[ng-csp]&quot;</highlight><highlight class="normal">)&amp;&amp;!document.querySelector(</highlight><highlight class="stringliteral">&quot;[data-ng-csp]&quot;</highlight><highlight class="normal">));</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!active)</highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Function(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e){active=!0}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>csp.isActive_=active},jq=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isDefined(jq.name_))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jq.name_;var<sp/>el,i,prefix,name,ii=ngAttrPrefixes.length;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;ii&gt;i;++i)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prefix=ngAttrPrefixes[i],el=document.querySelector(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">+prefix.replace(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;\\:&quot;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&quot;jq]&quot;</highlight><highlight class="normal">)){name=el.getAttribute(prefix+</highlight><highlight class="stringliteral">&quot;jq&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jq.name_=name},ngAttrPrefixes=[</highlight><highlight class="stringliteral">&quot;ng-&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;data-ng-&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;ng:&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;x-ng-&quot;</highlight><highlight class="normal">],SNAKE_CASE_REGEXP=/[A-Z]/g,bindJQueryFired=!1,NODE_TYPE_ELEMENT=1,NODE_TYPE_ATTRIBUTE=2,NODE_TYPE_TEXT=3,NODE_TYPE_COMMENT=8,NODE_TYPE_DOCUMENT=9,NODE_TYPE_DOCUMENT_FRAGMENT=11,version={full:</highlight><highlight class="stringliteral">&quot;1.4.0&quot;</highlight><highlight class="normal">,major:1,minor:4,dot:0,codeName:</highlight><highlight class="stringliteral">&quot;jaracimrman-existence&quot;</highlight><highlight class="normal">};JQLite.expando=</highlight><highlight class="stringliteral">&quot;ng339&quot;</highlight><highlight class="normal">;var<sp/>jqCache=JQLite.cache={},jqId=1,addEventListenerFn=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,type,fn){element.addEventListener(type,fn,!1)},removeEventListenerFn=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,type,fn){element.removeEventListener(type,fn,!1)};JQLite._data=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(node){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.cache[node[this.expando]]||{}};var<sp/>SPECIAL_CHARS_REGEXP=/([\:\-\_]+(.))/g,MOZ_HACK_REGEXP=/^moz([A-Z])/,MOUSE_EVENT_MAP={mouseleave:</highlight><highlight class="stringliteral">&quot;mouseout&quot;</highlight><highlight class="normal">,mouseenter:</highlight><highlight class="stringliteral">&quot;mouseover&quot;</highlight><highlight class="normal">},jqLiteMinErr=minErr(</highlight><highlight class="stringliteral">&quot;jqLite&quot;</highlight><highlight class="normal">),SINGLE_TAG_REGEXP=/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;|)$/,HTML_REGEXP=/&lt;|&amp;#?\w+;/,TAG_NAME_REGEXP=/&lt;([\w:]+)/,XHTML_TAG_REGEXP=/&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^&gt;]*)\/&gt;/gi,wrapMap={option:[1,</highlight><highlight class="stringliteral">&apos;&lt;select<sp/>multiple=&quot;multiple&quot;&gt;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&lt;/select&gt;&quot;</highlight><highlight class="normal">],thead:[1,</highlight><highlight class="stringliteral">&quot;&lt;table&gt;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&lt;/table&gt;&quot;</highlight><highlight class="normal">],col:[2,</highlight><highlight class="stringliteral">&quot;&lt;table&gt;&lt;colgroup&gt;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&lt;/colgroup&gt;&lt;/table&gt;&quot;</highlight><highlight class="normal">],tr:[2,</highlight><highlight class="stringliteral">&quot;&lt;table&gt;&lt;tbody&gt;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&lt;/tbody&gt;&lt;/table&gt;&quot;</highlight><highlight class="normal">],td:[3,</highlight><highlight class="stringliteral">&quot;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&quot;</highlight><highlight class="normal">],_default:[0,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">]};wrapMap.optgroup=wrapMap.option,wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead,wrapMap.th=wrapMap.td;var<sp/>JQLitePrototype=JQLite.prototype={ready:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>trigger(){fired||(fired=!0,fn())}var<sp/>fired=!1;</highlight><highlight class="stringliteral">&quot;complete&quot;</highlight><highlight class="normal">===document.readyState?setTimeout(trigger):(this.on(</highlight><highlight class="stringliteral">&quot;DOMContentLoaded&quot;</highlight><highlight class="normal">,trigger),JQLite(window).on(</highlight><highlight class="stringliteral">&quot;load&quot;</highlight><highlight class="normal">,trigger))},toString:function(){var<sp/>value=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(e){value.push(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">+e)}),</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">+value.join(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">},eq:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(index){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jqLite(index&gt;=0?</highlight><highlight class="keyword">this</highlight><highlight class="normal">[index]:</highlight><highlight class="keyword">this</highlight><highlight class="normal">[this.length+index])},length:0,push:push,sort:[].sort,splice:[].splice},BOOLEAN_ATTR={};forEach(</highlight><highlight class="stringliteral">&quot;multiple,selected,checked,disabled,readOnly,required,open&quot;</highlight><highlight class="normal">.split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){BOOLEAN_ATTR[lowercase(value)]=value});var<sp/>BOOLEAN_ELEMENTS={};forEach(</highlight><highlight class="stringliteral">&quot;input,select,option,textarea,button,form,details&quot;</highlight><highlight class="normal">.split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){BOOLEAN_ELEMENTS[value]=!0});var<sp/>ALIASED_ATTR={ngMinlength:</highlight><highlight class="stringliteral">&quot;minlength&quot;</highlight><highlight class="normal">,ngMaxlength:</highlight><highlight class="stringliteral">&quot;maxlength&quot;</highlight><highlight class="normal">,ngMin:</highlight><highlight class="stringliteral">&quot;min&quot;</highlight><highlight class="normal">,ngMax:</highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal">,ngPattern:</highlight><highlight class="stringliteral">&quot;pattern&quot;</highlight><highlight class="normal">};forEach({data:jqLiteData,removeData:jqLiteRemoveData},</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn,name){JQLite[name]=fn}),forEach({data:jqLiteData,inheritedData:jqLiteInheritedData,scope:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jqLite.data(element,</highlight><highlight class="stringliteral">&quot;$scope&quot;</highlight><highlight class="normal">)||jqLiteInheritedData(element.parentNode||element,[</highlight><highlight class="stringliteral">&quot;$isolateScope&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$scope&quot;</highlight><highlight class="normal">])},isolateScope:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jqLite.data(element,</highlight><highlight class="stringliteral">&quot;$isolateScope&quot;</highlight><highlight class="normal">)||jqLite.data(element,</highlight><highlight class="stringliteral">&quot;$isolateScopeNoTemplate&quot;</highlight><highlight class="normal">)},controller:jqLiteController,injector:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jqLiteInheritedData(element,</highlight><highlight class="stringliteral">&quot;$injector&quot;</highlight><highlight class="normal">)},removeAttr:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,name){element.removeAttribute(name)},hasClass:jqLiteHasClass,css:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,name,value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name=camelCase(name),isDefined(value)?void(element.style[name]=value):element.style[name]},attr:function(element,name,value){var<sp/>nodeType=element.nodeType;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeType!==NODE_TYPE_TEXT&amp;&amp;nodeType!==NODE_TYPE_ATTRIBUTE&amp;&amp;nodeType!==NODE_TYPE_COMMENT){var<sp/>lowercasedName=lowercase(name);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(BOOLEAN_ATTR[lowercasedName]){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isDefined(value))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>element[name]||(element.attributes.getNamedItem(name)||noop).specified?lowercasedName:undefined;value?(element[name]=!0,element.setAttribute(name,lowercasedName)):(element[name]=!1,element.removeAttribute(lowercasedName))}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isDefined(value))element.setAttribute(name,value);</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(element.getAttribute){var<sp/>ret=element.getAttribute(name,2);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null===ret?undefined:ret}}},prop:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,name,value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isDefined(value)?void(element[name]=value):element[name]},text:function(){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getText(element,value){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isUndefined(value)){var<sp/>nodeType=element.nodeType;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodeType===NODE_TYPE_ELEMENT||nodeType===NODE_TYPE_TEXT?element.textContent:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">}element.textContent=value}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getText.$dv=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,getText}(),val:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,value){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isUndefined(value)){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(element.multiple&amp;&amp;</highlight><highlight class="stringliteral">&quot;select&quot;</highlight><highlight class="normal">===nodeName_(element)){var<sp/>result=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(element.options,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(option){option.selected&amp;&amp;result.push(option.value||option.text)}),0===result.length?null:result}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>element.value}element.value=value},html:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isUndefined(value)?element.innerHTML:(jqLiteDealoc(element,!0),void(element.innerHTML=value))},empty:jqLiteEmpty},</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn,name){JQLite.prototype[name]=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(arg1,arg2){var<sp/>i,key,nodeCount=this.length;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fn!==jqLiteEmpty&amp;&amp;(2==fn.length&amp;&amp;fn!==jqLiteHasClass&amp;&amp;fn!==jqLiteController?arg1:arg2)===undefined){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isObject(arg1)){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;nodeCount&gt;i;i++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fn===jqLiteData)fn(</highlight><highlight class="keyword">this</highlight><highlight class="normal">[i],arg1);</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(key<sp/>in<sp/>arg1)fn(</highlight><highlight class="keyword">this</highlight><highlight class="normal">[i],key,arg1[key]);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">}</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>value=fn.$dv,jj=value===undefined?Math.min(nodeCount,1):nodeCount,j=0;jj&gt;j;j++){var<sp/>nodeValue=fn(</highlight><highlight class="keyword">this</highlight><highlight class="normal">[j],arg1,arg2);value=value?value+nodeValue:nodeValue}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value}</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;nodeCount&gt;i;i++)fn(</highlight><highlight class="keyword">this</highlight><highlight class="normal">[i],arg1,arg2);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">}}),forEach({removeData:jqLiteRemoveData,on:</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>jqLiteOn(element,type,fn,unsupported){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isDefined(unsupported))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>jqLiteMinErr(</highlight><highlight class="stringliteral">&quot;onargs&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;jqLite#on()<sp/>does<sp/>not<sp/>support<sp/>the<sp/>`selector`<sp/>or<sp/>`eventData`<sp/>parameters&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(jqLiteAcceptsData(element)){var<sp/>expandoStore=jqLiteExpandoStore(element,!0),events=expandoStore.events,handle=expandoStore.handle;handle||(handle=expandoStore.handle=createEventHandler(element,events));</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>types=type.indexOf(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)&gt;=0?type.split(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">):[type],i=types.length;i--;){type=types[i];var<sp/>eventFns=events[type];eventFns||(events[type]=[],</highlight><highlight class="stringliteral">&quot;mouseenter&quot;</highlight><highlight class="normal">===type||</highlight><highlight class="stringliteral">&quot;mouseleave&quot;</highlight><highlight class="normal">===type?jqLiteOn(element,MOUSE_EVENT_MAP[type],</highlight><highlight class="keyword">function</highlight><highlight class="normal">(event){var<sp/>target=</highlight><highlight class="keyword">this</highlight><highlight class="normal">,related=</highlight><highlight class="keyword">event</highlight><highlight class="normal">.relatedTarget;(!related||related!==target&amp;&amp;!target.contains(related))&amp;&amp;handle(event,type)}):</highlight><highlight class="stringliteral">&quot;$destroy&quot;</highlight><highlight class="normal">!==type&amp;&amp;addEventListenerFn(element,type,handle),eventFns=events[type]),eventFns.push(fn)}}},off:jqLiteOff,one:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,type,fn){element=jqLite(element),element.on(type,</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>onFn(){element.off(type,fn),element.off(type,onFn)}),element.on(type,fn)},replaceWith:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,replaceNode){var<sp/>index,parent=element.parentNode;jqLiteDealoc(element),forEach(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>JQLite(replaceNode),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(node){index?parent.insertBefore(node,index.nextSibling):parent.replaceChild(node,element),index=node})},children:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element){var<sp/>children=[];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>forEach(element.childNodes,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element){element.nodeType===NODE_TYPE_ELEMENT&amp;&amp;children.push(element)}),children},contents:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>element.contentDocument||element.childNodes||[]},append:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,node){var<sp/>nodeType=element.nodeType;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeType===NODE_TYPE_ELEMENT||nodeType===NODE_TYPE_DOCUMENT_FRAGMENT){node=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>JQLite(node);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0,ii=node.length;ii&gt;i;i++){var<sp/>child=node[i];element.appendChild(child)}}},prepend:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,node){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(element.nodeType===NODE_TYPE_ELEMENT){var<sp/>index=element.firstChild;forEach(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>JQLite(node),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(child){element.insertBefore(child,index)})}},wrap:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,wrapNode){wrapNode=jqLite(wrapNode).eq(0).clone()[0];var<sp/>parent=element.parentNode;parent&amp;&amp;parent.replaceChild(wrapNode,element),wrapNode.appendChild(element)},</highlight><highlight class="keyword">remove</highlight><highlight class="normal">:jqLiteRemove,detach:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element){jqLiteRemove(element,!0)},after:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,newElement){var<sp/>index=element,parent=element.parentNode;newElement=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>JQLite(newElement);</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>i=0,ii=newElement.length;ii&gt;i;i++){var<sp/>node=newElement[i];parent.insertBefore(node,index.nextSibling),index=node}},addClass:jqLiteAddClass,removeClass:jqLiteRemoveClass,toggleClass:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,selector,condition){selector&amp;&amp;forEach(selector.split(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(className){var<sp/>classCondition=condition;isUndefined(classCondition)&amp;&amp;(classCondition=!jqLiteHasClass(element,className)),(classCondition?jqLiteAddClass:jqLiteRemoveClass)(element,className)})},parent:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element){var<sp/>parent=element.parentNode;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent&amp;&amp;parent.nodeType!==NODE_TYPE_DOCUMENT_FRAGMENT?parent:null},next:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>element.nextElementSibling},find:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,selector){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>element.getElementsByTagName?element.getElementsByTagName(selector):[]},clone:jqLiteClone,triggerHandler:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,event,extraParameters){var<sp/>dummyEvent,eventFnsCopy,handlerArgs,eventName=</highlight><highlight class="keyword">event</highlight><highlight class="normal">.type||event,expandoStore=jqLiteExpandoStore(element),events=expandoStore&amp;&amp;expandoStore.events,eventFns=events&amp;&amp;events[eventName];eventFns&amp;&amp;(dummyEvent={preventDefault:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){this.defaultPrevented=!0},isDefaultPrevented:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.defaultPrevented===!0},stopImmediatePropagation:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){this.immediatePropagationStopped=!0},isImmediatePropagationStopped:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.immediatePropagationStopped===!0},stopPropagation:noop,type:eventName,target:element},</highlight><highlight class="keyword">event</highlight><highlight class="normal">.type&amp;&amp;(dummyEvent=extend(dummyEvent,event)),eventFnsCopy=shallowCopy(eventFns),handlerArgs=extraParameters?[dummyEvent].concat(extraParameters):[dummyEvent],forEach(eventFnsCopy,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn){dummyEvent.isImmediatePropagationStopped()||fn.apply(element,handlerArgs)}))}},</highlight><highlight class="keyword">function</highlight><highlight class="normal">(fn,name){JQLite.prototype[name]=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(arg1,arg2,arg3){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(var<sp/>value,i=0,ii=this.length;ii&gt;i;i++)isUndefined(value)?(value=fn(</highlight><highlight class="keyword">this</highlight><highlight class="normal">[i],arg1,arg2,arg3),isDefined(value)&amp;&amp;(value=jqLite(value))):jqLiteAddNodes(value,fn(</highlight><highlight class="keyword">this</highlight><highlight class="normal">[i],arg1,arg2,arg3));</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isDefined(value)?value:</highlight><highlight class="keyword">this</highlight><highlight class="normal">},JQLite.prototype.bind=JQLite.prototype.on,JQLite.prototype.unbind=JQLite.prototype.off}),HashMap.prototype={put:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(key,value){</highlight><highlight class="keyword">this</highlight><highlight class="normal">[hashKey(key,this.nextUid)]=value},</highlight><highlight class="keyword">get</highlight><highlight class="normal">:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(key){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">[hashKey(key,this.nextUid)]},</highlight><highlight class="keyword">remove</highlight><highlight class="normal">:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(key){var<sp/>value=</highlight><highlight class="keyword">this</highlight><highlight class="normal">[key=hashKey(key,this.nextUid)];</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">[key],value}};var<sp/>$$HashMapProvider=[</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){this.$get=[</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HashMap}]}],FN_ARGS=/^function\s*[^\(]*\(\s*([^\)]*)\)/m,FN_ARG_SPLIT=/,/,FN_ARG=/^\s*(_?)(\S+?)\1\s*$/,STRIP_COMMENTS=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,$injectorMinErr=minErr(</highlight><highlight class="stringliteral">&quot;$injector&quot;</highlight><highlight class="normal">);createInjector.$$annotate=annotate;var<sp/>$animateMinErr=minErr(</highlight><highlight class="stringliteral">&quot;$animate&quot;</highlight><highlight class="normal">),ELEMENT_NODE=1,NG_ANIMATE_CLASSNAME=</highlight><highlight class="stringliteral">&quot;ng-animate&quot;</highlight><highlight class="normal">,$$CoreAnimateRunnerProvider=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){this.$get=[</highlight><highlight class="stringliteral">&quot;$q&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$$rAF&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(<ref refid="getrss_8php_1abb0f8f809252372e25f48d52b63ef29d" kindref="member">$q</ref>,$$rAF){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>AnimateRunner(){}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AnimateRunner.all=noop,AnimateRunner.chain=noop,AnimateRunner.prototype={end:noop,cancel:noop,resume:noop,pause:noop,complete:noop,then:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(pass,fail){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getrss_8php_1abb0f8f809252372e25f48d52b63ef29d" kindref="member">$q</ref>(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(resolve){$$rAF(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){resolve()})}).then(pass,fail)}},AnimateRunner}]},$$CoreAnimateQueueProvider=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){var<sp/>postDigestQueue=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HashMap,postDigestElements=[];this.$get=[</highlight><highlight class="stringliteral">&quot;$$AnimateRunner&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$rootScope&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($$AnimateRunner,$rootScope){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>addRemoveClassesPostDigest(element,add,</highlight><highlight class="keyword">remove</highlight><highlight class="normal">){var<sp/>data=postDigestQueue.get(element);data||(postDigestQueue.put(element,data={}),postDigestElements.push(element)),add&amp;&amp;forEach(add.split(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(className){className&amp;&amp;(data[className]=!0)}),</highlight><highlight class="keyword">remove</highlight><highlight class="normal">&amp;&amp;forEach(</highlight><highlight class="keyword">remove</highlight><highlight class="normal">.split(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(className){className&amp;&amp;(data[className]=!1)}),postDigestElements.length&gt;1||$rootScope.$$postDigest(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){forEach(postDigestElements,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element){var<sp/>data=postDigestQueue.get(element);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data){var<sp/>existing=splitClasses(element.attr(</highlight><highlight class="stringliteral">&quot;class&quot;</highlight><highlight class="normal">)),toAdd=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,toRemove=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;forEach(data,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(status,className){var<sp/>hasClass=!!existing[className];status!==hasClass&amp;&amp;(status?toAdd+=(toAdd.length?</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+className:toRemove+=(toRemove.length?</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+className)}),forEach(element,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(elm){toAdd&amp;&amp;jqLiteAddClass(elm,toAdd),toRemove&amp;&amp;jqLiteRemoveClass(elm,toRemove)}),postDigestQueue.remove(element)}}),postDigestElements.length=0})}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{enabled:noop,on:noop,off:noop,pin:noop,push:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,event,options,domOperation){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>domOperation&amp;&amp;domOperation(),options=options||{},options.from&amp;&amp;element.css(options.from),options.to&amp;&amp;element.css(options.to),(options.addClass||options.removeClass)&amp;&amp;addRemoveClassesPostDigest(element,options.addClass,options.removeClass),</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>$$AnimateRunner}}}]},$AnimateProvider=[</highlight><highlight class="stringliteral">&quot;$provide&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($provide){var<sp/>provider=</highlight><highlight class="keyword">this</highlight><highlight class="normal">;this.$$registeredAnimations=Object.create(null),this.</highlight><highlight class="keyword">register</highlight><highlight class="normal">=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(name,factory){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name&amp;&amp;</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">!==name.charAt(0))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$animateMinErr(</highlight><highlight class="stringliteral">&quot;notcsel&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Expecting<sp/>class<sp/>selector<sp/>starting<sp/>with<sp/>&apos;.&apos;<sp/>got<sp/>&apos;{0}&apos;.&quot;</highlight><highlight class="normal">,name);var<sp/>key=name+</highlight><highlight class="stringliteral">&quot;-animation&quot;</highlight><highlight class="normal">;provider.$$registeredAnimations[name.substr(1)]=key,$provide.factory(key,factory)},this.classNameFilter=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(expression){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(1===arguments.length&amp;&amp;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">.$$classNameFilter=expression<sp/>instanceof<sp/>RegExp?expression:null,</highlight><highlight class="keyword">this</highlight><highlight class="normal">.$$classNameFilter)){var<sp/>reservedRegex=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RegExp(</highlight><highlight class="stringliteral">&quot;(\\s+|\\/)&quot;</highlight><highlight class="normal">+NG_ANIMATE_CLASSNAME+</highlight><highlight class="stringliteral">&quot;(\\s+|\\/)&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reservedRegex.test(</highlight><highlight class="keyword">this</highlight><highlight class="normal">.$$classNameFilter.toString()))</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>$animateMinErr(</highlight><highlight class="stringliteral">&quot;nongcls&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;$animateProvider.classNameFilter(regex)<sp/>prohibits<sp/>accepting<sp/>a<sp/>regex<sp/>value<sp/>which<sp/>matches/contains<sp/>the<sp/>&quot;{0}&quot;<sp/>CSS<sp/>class.&apos;</highlight><highlight class="normal">,NG_ANIMATE_CLASSNAME)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.$$classNameFilter},this.$get=[</highlight><highlight class="stringliteral">&quot;$$animateQueue&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">function</highlight><highlight class="normal">($$animateQueue){</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>domInsert(element,parentElement,afterElement){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(afterElement){var<sp/>afterNode=extractElementNode(afterElement);!afterNode||afterNode.parentNode||afterNode.previousElementSibling||(afterElement=null)}afterElement?afterElement.after(element):parentElement.prepend(element)}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">{on:$$animateQueue.on,off:$$animateQueue.off,pin:$$animateQueue.pin,enabled:$$animateQueue.enabled,cancel:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(runner){runner.end&amp;&amp;runner.end()},enter:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,parent,after,options){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent=parent&amp;&amp;jqLite(parent),after=after&amp;&amp;jqLite(after),parent=parent||after.parent(),domInsert(element,parent,after),$$animateQueue.push(element,</highlight><highlight class="stringliteral">&quot;enter&quot;</highlight><highlight class="normal">,prepareAnimateOptions(options))},move:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,parent,after,options){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent=parent&amp;&amp;jqLite(parent),</highlight></codeline>
<codeline lineno="11"><highlight class="normal">after=after&amp;&amp;jqLite(after),parent=parent||after.parent(),domInsert(element,parent,after),$$animateQueue.push(element,</highlight><highlight class="stringliteral">&quot;move&quot;</highlight><highlight class="normal">,prepareAnimateOptions(options))},leave:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,options){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$$animateQueue.push(element,</highlight><highlight class="stringliteral">&quot;leave&quot;</highlight><highlight class="normal">,prepareAnimateOptions(options),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){element.remove()})},addClass:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,className,options){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>options=prepareAnimateOptions(options),options.addClass=mergeClasses(options.addclass,className),$$animateQueue.push(element,</highlight><highlight class="stringliteral">&quot;addClass&quot;</highlight><highlight class="normal">,options)},removeClass:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,className,options){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>options=prepareAnimateOptions(options),options.removeClass=mergeClasses(options.removeClass,className),$$animateQueue.push(element,</highlight><highlight class="stringliteral">&quot;removeClass&quot;</highlight><highlight class="normal">,options)},setClass:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,add,</highlight><highlight class="keyword">remove</highlight><highlight class="normal">,options){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>options=prepareAnimateOptions(options),options.addClass=mergeClasses(options.addClass,add),options.removeClass=mergeClasses(options.removeClass,</highlight><highlight class="keyword">remove</highlight><highlight class="normal">),$$animateQueue.push(element,</highlight><highlight class="stringliteral">&quot;setClass&quot;</highlight><highlight class="normal">,options)},animate:</highlight><highlight class="keyword">function</highlight><highlight class="normal">(element,from,to,className,options){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>options=prepareAnimateOptions(options),options.from=options.from?extend(options.from,from):from,options.to=options.to?extend(options.to,to):to,className=className||</highlight><highlight class="stringliteral">&quot;ng-inline-animate&quot;</highlight><highlight class="normal">,options.tempClasses=mergeClasses(options.tempClasses,className),$$animateQueue.push(element,</highlight><highlight class="stringliteral">&quot;animate&quot;</highlight><highlight class="normal">,options)}}}]}],$compileMinErr=minErr(</highlight><highlight class="stringliteral">&quot;$compile&quot;</highlight><highlight class="normal">);$CompileProvider.$inject=[</highlight><highlight class="stringliteral">&quot;$provide&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;$$sanitizeUriProvider&quot;</highlight><highlight class="normal">];var<sp/>PREFIX_REGEXP=/^((?:x|data)[\:\-_])/i,$controllerMinErr=minErr(</highlight><highlight class="stringliteral">&quot;$controller&quot;</highlight><highlight class="normal">),CNTRL_REG=/^(\S+)(\s+as\s+(\w+))?$/,APPLICATION_JSON=</highlight><highlight class="stringliteral">&quot;application/json&quot;</highlight><highlight class="normal">,CONTENT_TYPE_APPLICATION_JSON={</highlight><highlight class="stringliteral">&quot;Content-Type&quot;</highlight><highlight class="normal">:APPLICATION_JSON+</highlight><highlight class="stringliteral">&quot;;charset=utf-8&quot;</highlight><highlight class="normal">},JSON_START=/^\[|^\{(?!\{)/,JSON_ENDS={</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">:/]$/,</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">:/}$/},JSON_PROTECTION_PREFIX=/^\)\]\}</highlight><highlight class="stringliteral">&apos;,?\n/,$interpolateMinErr=angular.$interpolateMinErr=minErr(&quot;$interpolate&quot;);$interpolateMinErr.throwNoconcat=function(text){throw<sp/>$interpolateMinErr(&quot;noconcat&quot;,&quot;Error<sp/>while<sp/>interpolating:<sp/>{0}\nStrict<sp/>Contextual<sp/>Escaping<sp/>disallows<sp/>interpolations<sp/>that<sp/>concatenate<sp/>multiple<sp/>expressions<sp/>when<sp/>a<sp/>trusted<sp/>value<sp/>is<sp/>required.<sp/><sp/>See<sp/>http://docs.angularjs.org/api/ng.$sce&quot;,text)},$interpolateMinErr.interr=function(text,err){return<sp/>$interpolateMinErr(&quot;interr&quot;,&quot;Can&apos;</highlight><highlight class="normal">t<sp/>interpolate:<sp/>{0}\n{1}</highlight><highlight class="stringliteral">&quot;,text,err.toString())};var<sp/>PATH_MATCH=/^([^\?#]*)(\?([^#]*))?(#(.*))?$/,DEFAULT_PORTS={http:80,https:443,ftp:21},$locationMinErr=minErr(&quot;</highlight><highlight class="normal">$location</highlight><highlight class="stringliteral">&quot;),locationPrototype={$$html5:!1,$$replace:!1,absUrl:locationGetter(&quot;</highlight><highlight class="normal">$$absUrl</highlight><highlight class="stringliteral">&quot;),url:function(url){if(isUndefined(url))return<sp/>this.$$url;var<sp/>match=PATH_MATCH.exec(url);return(match[1]||&quot;</highlight><highlight class="stringliteral">&quot;===url)&amp;&amp;this.path(decodeURIComponent(match[1])),(match[2]||match[1]||&quot;</highlight><highlight class="stringliteral">&quot;===url)&amp;&amp;this.search(match[3]||&quot;</highlight><highlight class="stringliteral">&quot;),this.hash(match[5]||&quot;</highlight><highlight class="stringliteral">&quot;),this},protocol:locationGetter(&quot;</highlight><highlight class="normal">$$protocol</highlight><highlight class="stringliteral">&quot;),host:locationGetter(&quot;</highlight><highlight class="normal">$$host</highlight><highlight class="stringliteral">&quot;),port:locationGetter(&quot;</highlight><highlight class="normal">$$port</highlight><highlight class="stringliteral">&quot;),path:locationGetterSetter(&quot;</highlight><highlight class="normal">$$path</highlight><highlight class="stringliteral">&quot;,function(path){return<sp/>path=null!==path?path.toString():&quot;</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">/</highlight><highlight class="stringliteral">&quot;==path.charAt(0)?path:&quot;</highlight><highlight class="normal">/</highlight><highlight class="stringliteral">&quot;+path}),search:function(search,paramValue){switch(arguments.length){case<sp/>0:return<sp/>this.$$search;case<sp/>1:if(isString(search)||isNumber(search))search=search.toString(),this.$$search=parseKeyValue(search);else{if(!isObject(search))throw<sp/>$locationMinErr(&quot;</highlight><highlight class="normal">isrcharg</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">The<sp/>first<sp/>argument<sp/>of<sp/>the<sp/>`$location#search()`<sp/>call<sp/>must<sp/>be<sp/>a<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>or<sp/>an<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;);search=copy(search,{}),forEach(search,function(value,key){null==value&amp;&amp;delete<sp/>search[key]}),this.$$search=search}break;default:isUndefined(paramValue)||null===paramValue?delete<sp/>this.$$search[search]:this.$$search[search]=paramValue}return<sp/>this.$$compose(),this},hash:locationGetterSetter(&quot;</highlight><highlight class="normal">$$hash</highlight><highlight class="stringliteral">&quot;,function(hash){return<sp/>null!==hash?hash.toString():&quot;</highlight><highlight class="stringliteral">&quot;}),replace:function(){return<sp/>this.$$replace=!0,this}};forEach([LocationHashbangInHtml5Url,LocationHashbangUrl,LocationHtml5Url],function(Location){Location.prototype=Object.create(locationPrototype),Location.prototype.state=function(state){if(!arguments.length)return<sp/>this.$$state;if(Location!==LocationHtml5Url||!this.$$html5)throw<sp/>$locationMinErr(&quot;</highlight><highlight class="normal">nostate</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">History<sp/>API<sp/>state<sp/>support<sp/>is<sp/>available<sp/>only<sp/>in<sp/>HTML5<sp/>mode<sp/>and<sp/>only<sp/>in<sp/>browsers<sp/>supporting<sp/>HTML5<sp/>History<sp/>API</highlight><highlight class="stringliteral">&quot;);return<sp/>this.$$state=isUndefined(state)?null:state,this}});var<sp/>$parseMinErr=minErr(&quot;</highlight><highlight class="normal">$parse</highlight><highlight class="stringliteral">&quot;),CALL=Function.prototype.call,APPLY=Function.prototype.apply,BIND=Function.prototype.bind,OPERATORS=createMap();forEach(&quot;</highlight><highlight class="normal">+<sp/>-<sp/>*<sp/>/<sp/>%<sp/>===<sp/>!==<sp/>==<sp/>!=<sp/>&lt;<sp/>&gt;<sp/>&lt;=<sp/>&gt;=<sp/>&amp;&amp;<sp/>||<sp/>!<sp/>=<sp/>|</highlight><highlight class="stringliteral">&quot;.split(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;),function(operator){OPERATORS[operator]=!0});var<sp/>ESCAPE={n:&quot;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&quot;,f:&quot;</highlight><highlight class="normal">\f</highlight><highlight class="stringliteral">&quot;,r:&quot;</highlight><highlight class="normal">\r</highlight><highlight class="stringliteral">&quot;,t:&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,v:&quot;</highlight><highlight class="normal"></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="stringliteral">&apos;&quot;:&quot;&apos;</highlight><highlight class="stringliteral">&quot;,&apos;&quot;</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="stringliteral">&quot;&apos;},Lexer=function(options){this.options=options};Lexer.prototype={constructor:Lexer,lex:function(text){for(this.text=text,this.index=0,this.tokens=[];this.index&lt;this.text.length;){var<sp/>ch=this.text.charAt(this.index);if(&apos;&quot;</highlight><highlight class="stringliteral">&apos;===ch||&quot;&apos;</highlight><highlight class="stringliteral">&quot;===ch)this.readString(ch);else<sp/>if(this.isNumber(ch)||&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;===ch&amp;&amp;this.isNumber(this.peek()))this.readNumber();else<sp/>if(this.isIdent(ch))this.readIdent();else<sp/>if(this.is(ch,&quot;</highlight><highlight class="normal">(){}[].,;:?</highlight><highlight class="stringliteral">&quot;))this.tokens.push({index:this.index,text:ch}),this.index++;else<sp/>if(this.isWhitespace(ch))this.index++;else{var<sp/>ch2=ch+this.peek(),ch3=ch2+this.peek(2),op1=OPERATORS[ch],op2=OPERATORS[ch2],op3=OPERATORS[ch3];if(op1||op2||op3){var<sp/>token=op3?ch3:op2?ch2:ch;this.tokens.push({index:this.index,text:token,operator:!0}),this.index+=token.length}else<sp/>this.throwError(&quot;</highlight><highlight class="normal">Unexpected<sp/>next<sp/>character<sp/></highlight><highlight class="stringliteral">&quot;,this.index,this.index+1)}}return<sp/>this.tokens},is:function(ch,chars){return-1!==chars.indexOf(ch)},peek:function(i){var<sp/>num=i||1;return<sp/>this.index+num&lt;this.text.length?this.text.charAt(this.index+num):!1},isNumber:function(ch){return<sp/>ch&gt;=&quot;</highlight><highlight class="normal">0</highlight><highlight class="stringliteral">&quot;&amp;&amp;&quot;</highlight><highlight class="normal">9</highlight><highlight class="stringliteral">&quot;&gt;=ch&amp;&amp;&quot;</highlight><highlight class="keywordtype">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>ch},isWhitespace:function(ch){return&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;===ch||&quot;</highlight><highlight class="normal">\r</highlight><highlight class="stringliteral">&quot;===ch||&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;===ch||&quot;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&quot;===ch||&quot;</highlight><highlight class="normal"></highlight><highlight class="stringliteral">&quot;===ch||&quot;</highlight><highlight class="normal"> </highlight><highlight class="stringliteral">&quot;===ch},isIdent:function(ch){return<sp/>ch&gt;=&quot;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&quot;&amp;&amp;&quot;</highlight><highlight class="normal">z</highlight><highlight class="stringliteral">&quot;&gt;=ch||ch&gt;=&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;&amp;&amp;&quot;</highlight><highlight class="normal">Z</highlight><highlight class="stringliteral">&quot;&gt;=ch||&quot;</highlight><highlight class="normal">_</highlight><highlight class="stringliteral">&quot;===ch||&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;===ch},isExpOperator:function(ch){return&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;===ch||&quot;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&quot;===ch||this.isNumber(ch)},throwError:function(error,start,end){end=end||this.index;var<sp/>colStr=isDefined(start)?&quot;</highlight><highlight class="normal">s<sp/></highlight><highlight class="stringliteral">&quot;+start+&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;+this.index+&quot;</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&quot;+this.text.substring(start,end)+&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+end;throw<sp/>$parseMinErr(&quot;</highlight><highlight class="normal">lexerr</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Lexer<sp/>Error:<sp/>{0}<sp/>at<sp/>column{1}<sp/>in<sp/>expression<sp/>[{2}].</highlight><highlight class="stringliteral">&quot;,error,colStr,this.text)},readNumber:function(){for(var<sp/>number=&quot;</highlight><highlight class="stringliteral">&quot;,start=this.index;this.index&lt;this.text.length;){var<sp/>ch=lowercase(this.text.charAt(this.index));if(&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;==ch||this.isNumber(ch))number+=ch;else{var<sp/>peekCh=this.peek();if(&quot;</highlight><highlight class="normal">e</highlight><highlight class="stringliteral">&quot;==ch&amp;&amp;this.isExpOperator(peekCh))number+=ch;else<sp/>if(this.isExpOperator(ch)&amp;&amp;peekCh&amp;&amp;this.isNumber(peekCh)&amp;&amp;&quot;</highlight><highlight class="normal">e</highlight><highlight class="stringliteral">&quot;==number.charAt(number.length-1))number+=ch;else{if(!this.isExpOperator(ch)||peekCh&amp;&amp;this.isNumber(peekCh)||&quot;</highlight><highlight class="normal">e</highlight><highlight class="stringliteral">&quot;!=number.charAt(number.length-1))break;this.throwError(&quot;</highlight><highlight class="normal">Invalid<sp/>exponent</highlight><highlight class="stringliteral">&quot;)}}this.index++}this.tokens.push({index:start,text:number,constant:!0,value:Number(number)})},readIdent:function(){for(var<sp/>start=this.index;this.index&lt;this.text.length;){var<sp/>ch=this.text.charAt(this.index);if(!this.isIdent(ch)&amp;&amp;!this.isNumber(ch))break;this.index++}this.tokens.push({index:start,text:this.text.slice(start,this.index),identifier:!0})},readString:function(quote){var<sp/>start=this.index;this.index++;for(var<sp/>string=&quot;</highlight><highlight class="stringliteral">&quot;,rawString=quote,escape=!1;this.index&lt;this.text.length;){var<sp/>ch=this.text.charAt(this.index);if(rawString+=ch,escape){if(&quot;</highlight><highlight class="normal">u</highlight><highlight class="stringliteral">&quot;===ch){var<sp/>hex=this.text.substring(this.index+1,this.index+5);hex.match(/[\da-f]{4}/i)||this.throwError(&quot;</highlight><highlight class="normal">Invalid<sp/>unicode<sp/>escape<sp/>[\\u</highlight><highlight class="stringliteral">&quot;+hex+&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;),this.index+=4,string+=String.fromCharCode(parseInt(hex,16))}else{var<sp/>rep=ESCAPE[ch];string+=rep||ch}escape=!1}else<sp/>if(&quot;</highlight><highlight class="normal">\\</highlight><highlight class="stringliteral">&quot;===ch)escape=!0;else{if(ch===quote)return<sp/>this.index++,void<sp/>this.tokens.push({index:start,text:rawString,constant:!0,value:string});string+=ch}this.index++}this.throwError(&quot;</highlight><highlight class="normal">Unterminated<sp/>quote</highlight><highlight class="stringliteral">&quot;,start)}};var<sp/>AST=function(lexer,options){this.lexer=lexer,this.options=options};AST.Program=&quot;</highlight><highlight class="normal">Program</highlight><highlight class="stringliteral">&quot;,AST.ExpressionStatement=&quot;</highlight><highlight class="normal">ExpressionStatement</highlight><highlight class="stringliteral">&quot;,AST.AssignmentExpression=&quot;</highlight><highlight class="normal">AssignmentExpression</highlight><highlight class="stringliteral">&quot;,AST.ConditionalExpression=&quot;</highlight><highlight class="normal">ConditionalExpression</highlight><highlight class="stringliteral">&quot;,AST.LogicalExpression=&quot;</highlight><highlight class="normal">LogicalExpression</highlight><highlight class="stringliteral">&quot;,AST.BinaryExpression=&quot;</highlight><highlight class="normal">BinaryExpression</highlight><highlight class="stringliteral">&quot;,AST.UnaryExpression=&quot;</highlight><highlight class="normal">UnaryExpression</highlight><highlight class="stringliteral">&quot;,AST.CallExpression=&quot;</highlight><highlight class="normal">CallExpression</highlight><highlight class="stringliteral">&quot;,AST.MemberExpression=&quot;</highlight><highlight class="normal">MemberExpression</highlight><highlight class="stringliteral">&quot;,AST.Identifier=&quot;</highlight><highlight class="normal">Identifier</highlight><highlight class="stringliteral">&quot;,AST.Literal=&quot;</highlight><highlight class="normal">Literal</highlight><highlight class="stringliteral">&quot;,AST.ArrayExpression=&quot;</highlight><highlight class="normal">ArrayExpression</highlight><highlight class="stringliteral">&quot;,AST.Property=&quot;</highlight><highlight class="normal">Property</highlight><highlight class="stringliteral">&quot;,AST.ObjectExpression=&quot;</highlight><highlight class="normal">ObjectExpression</highlight><highlight class="stringliteral">&quot;,AST.ThisExpression=&quot;</highlight><highlight class="normal">ThisExpression</highlight><highlight class="stringliteral">&quot;,AST.NGValueParameter=&quot;</highlight><highlight class="normal">NGValueParameter</highlight><highlight class="stringliteral">&quot;,AST.prototype={ast:function(text){this.text=text,this.tokens=this.lexer.lex(text);var<sp/>value=this.program();return<sp/>0!==this.tokens.length&amp;&amp;this.throwError(&quot;</highlight><highlight class="normal">is<sp/>an<sp/>unexpected<sp/>token</highlight><highlight class="stringliteral">&quot;,this.tokens[0]),value},program:function(){for(var<sp/>body=[];;)if(this.tokens.length&gt;0&amp;&amp;!this.peek(&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;)&amp;&amp;body.push(this.expressionStatement()),!this.expect(&quot;</highlight><highlight class="normal">;</highlight><highlight class="stringliteral">&quot;))return{type:AST.Program,body:body}},expressionStatement:function(){return{type:AST.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var<sp/>token,left=this.expression();token=this.expect(&quot;</highlight><highlight class="normal">|</highlight><highlight class="stringliteral">&quot;);)left=this.filter(left);return<sp/>left},expression:function(){return<sp/>this.assignment()},assignment:function(){var<sp/>result=this.ternary();return<sp/>this.expect(&quot;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;)&amp;&amp;(result={type:AST.AssignmentExpression,left:result,right:this.assignment(),operator:&quot;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;}),result},ternary:function(){var<sp/>alternate,consequent,test=this.logicalOR();return<sp/>this.expect(&quot;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;)&amp;&amp;(alternate=this.expression(),this.consume(&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;))?(consequent=this.expression(),{type:AST.ConditionalExpression,test:test,alternate:alternate,consequent:consequent}):test},logicalOR:function(){for(var<sp/>left=this.logicalAND();this.expect(&quot;</highlight><highlight class="normal">||</highlight><highlight class="stringliteral">&quot;);)left={type:AST.LogicalExpression,operator:&quot;</highlight><highlight class="normal">||</highlight><highlight class="stringliteral">&quot;,left:left,right:this.logicalAND()};return<sp/>left},logicalAND:function(){for(var<sp/>left=this.equality();this.expect(&quot;</highlight><highlight class="normal">&amp;&amp;</highlight><highlight class="stringliteral">&quot;);)left={type:AST.LogicalExpression,operator:&quot;</highlight><highlight class="normal">&amp;&amp;</highlight><highlight class="stringliteral">&quot;,left:left,right:this.equality()};return<sp/>left},equality:function(){for(var<sp/>token,left=this.relational();token=this.expect(&quot;</highlight><highlight class="normal">==</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">!=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">===</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">!==</highlight><highlight class="stringliteral">&quot;);)left={type:AST.BinaryExpression,operator:token.text,left:left,right:this.relational()};return<sp/>left},relational:function(){for(var<sp/>token,left=this.additive();token=this.expect(&quot;</highlight><highlight class="normal">&lt;</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">&gt;</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">&lt;=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">&gt;=</highlight><highlight class="stringliteral">&quot;);)left={type:AST.BinaryExpression,operator:token.text,left:left,right:this.additive()};return<sp/>left},additive:function(){for(var<sp/>token,left=this.multiplicative();token=this.expect(&quot;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;);)left={type:AST.BinaryExpression,operator:token.text,left:left,right:this.multiplicative()};return<sp/>left},multiplicative:function(){for(var<sp/>token,left=this.unary();token=this.expect(&quot;</highlight><highlight class="normal">*</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">/</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">%</highlight><highlight class="stringliteral">&quot;);)left={type:AST.BinaryExpression,operator:token.text,left:left,right:this.unary()};return<sp/>left},unary:function(){var<sp/>token;return(token=this.expect(&quot;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">!</highlight><highlight class="stringliteral">&quot;))?{type:AST.UnaryExpression,operator:token.text,prefix:!0,argument:this.unary()}:this.primary()},primary:function(){var<sp/>primary;this.expect(&quot;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;)?(primary=this.filterChain(),this.consume(&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;)):this.expect(&quot;</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&quot;)?primary=this.arrayDeclaration():this.expect(&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;)?primary=this.object():this.constants.hasOwnProperty(this.peek().text)?primary=copy(this.constants[this.consume().text]):this.peek().identifier?primary=this.identifier():this.peek().constant?primary=this.constant():this.throwError(&quot;</highlight><highlight class="normal">not<sp/>a<sp/>primary<sp/>expression</highlight><highlight class="stringliteral">&quot;,this.peek());for(var<sp/>next;next=this.expect(&quot;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;);)&quot;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;===next.text?(primary={type:AST.CallExpression,callee:primary,arguments:this.parseArguments()},this.consume(&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;)):&quot;</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&quot;===next.text?(primary={type:AST.MemberExpression,object:primary,property:this.expression(),computed:!0},this.consume(&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;)):&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;===next.text?primary={type:AST.MemberExpression,object:primary,property:this.identifier(),computed:!1}:this.throwError(&quot;</highlight><highlight class="normal">IMPOSSIBLE</highlight><highlight class="stringliteral">&quot;);return<sp/>primary},filter:function(baseExpression){for(var<sp/>args=[baseExpression],result={type:AST.CallExpression,callee:this.identifier(),arguments:args,filter:!0};this.expect(&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;);)args.push(this.expression());return<sp/>result},parseArguments:function(){var<sp/>args=[];if(&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;!==this.peekToken().text)do<sp/>args.push(this.expression());while(this.expect(&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;));return<sp/>args},identifier:function(){var<sp/>token=this.consume();return<sp/>token.identifier||this.throwError(&quot;</highlight><highlight class="normal">is<sp/>not<sp/>a<sp/>valid<sp/>identifier</highlight><highlight class="stringliteral">&quot;,token),{type:AST.Identifier,name:token.text}},constant:function(){return{type:AST.Literal,value:this.consume().value}},arrayDeclaration:function(){var<sp/>elements=[];if(&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;!==this.peekToken().text)do{if(this.peek(&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;))break;elements.push(this.expression())}while(this.expect(&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;));return<sp/>this.consume(&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;),{type:AST.ArrayExpression,elements:elements}},object:function(){var<sp/>property,properties=[];if(&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;!==this.peekToken().text)do{if(this.peek(&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;))break;property={type:AST.Property,kind:&quot;</highlight><highlight class="normal">init</highlight><highlight class="stringliteral">&quot;},this.peek().constant?property.key=this.constant():this.peek().identifier?property.key=this.identifier():this.throwError(&quot;</highlight><highlight class="normal">invalid<sp/>key</highlight><highlight class="stringliteral">&quot;,this.peek()),this.consume(&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;),property.value=this.expression(),properties.push(property)}while(this.expect(&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;));return<sp/>this.consume(&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;),{type:AST.ObjectExpression,properties:properties}},throwError:function(msg,token){throw<sp/>$parseMinErr(&quot;</highlight><highlight class="normal">syntax</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Syntax<sp/>Error:<sp/>Token<sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal"><sp/>{1}<sp/>at<sp/>column<sp/>{2}<sp/>of<sp/>the<sp/>expression<sp/>[{3}]<sp/>starting<sp/>at<sp/>[{4}].</highlight><highlight class="stringliteral">&quot;,token.text,msg,token.index+1,this.text,this.text.substring(token.index))},consume:function(e1){if(0===this.tokens.length)throw<sp/>$parseMinErr(&quot;</highlight><highlight class="normal">ueoe</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Unexpected<sp/>end<sp/>of<sp/>expression:<sp/>{0}</highlight><highlight class="stringliteral">&quot;,this.text);var<sp/>token=this.expect(e1);return<sp/>token||this.throwError(&quot;</highlight><highlight class="normal">is<sp/>unexpected,<sp/>expecting<sp/>[</highlight><highlight class="stringliteral">&quot;+e1+&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;,this.peek()),token},peekToken:function(){if(0===this.tokens.length)throw<sp/>$parseMinErr(&quot;</highlight><highlight class="normal">ueoe</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Unexpected<sp/>end<sp/>of<sp/>expression:<sp/>{0}</highlight><highlight class="stringliteral">&quot;,this.text);return<sp/>this.tokens[0]},peek:function(e1,e2,e3,e4){return<sp/>this.peekAhead(0,e1,e2,e3,e4)},peekAhead:function(i,e1,e2,e3,e4){if(this.tokens.length&gt;i){var<sp/>token=this.tokens[i],t=token.text;if(t===e1||t===e2||t===e3||t===e4||!e1&amp;&amp;!e2&amp;&amp;!e3&amp;&amp;!e4)return<sp/>token}return!1},expect:function(e1,e2,e3,e4){var<sp/>token=this.peek(e1,e2,e3,e4);return<sp/>token?(this.tokens.shift(),token):!1},constants:{&quot;</highlight><highlight class="keyword">true</highlight><highlight class="stringliteral">&quot;:{type:AST.Literal,value:!0},&quot;</highlight><highlight class="keyword">false</highlight><highlight class="stringliteral">&quot;:{type:AST.Literal,value:!1},&quot;</highlight><highlight class="normal">null</highlight><highlight class="stringliteral">&quot;:{type:AST.Literal,value:null},undefined:{type:AST.Literal,value:undefined},&quot;</highlight><highlight class="keyword">this</highlight><highlight class="stringliteral">&quot;:{type:AST.ThisExpression}}},ASTCompiler.prototype={compile:function(expression,expensiveChecks){var<sp/>self=this,ast=this.astBuilder.ast(expression);this.state={nextId:0,filters:{},expensiveChecks:expensiveChecks,fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]},findConstantAndWatchExpressions(ast,self.$filter);var<sp/>assignable,extra=&quot;</highlight><highlight class="stringliteral">&quot;;if(this.stage=&quot;</highlight><highlight class="normal">assign</highlight><highlight class="stringliteral">&quot;,assignable=assignableAST(ast)){this.state.computing=&quot;</highlight><highlight class="normal">assign</highlight><highlight class="stringliteral">&quot;;var<sp/>result=this.nextId();this.recurse(assignable,result),extra=&quot;</highlight><highlight class="normal">fn.assign=</highlight><highlight class="stringliteral">&quot;+this.generateFunction(&quot;</highlight><highlight class="normal">assign</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">s,v,l</highlight><highlight class="stringliteral">&quot;)}var<sp/>toWatch=getInputs(ast.body);self.stage=&quot;</highlight><highlight class="normal">inputs</highlight><highlight class="stringliteral">&quot;,forEach(toWatch,function(watch,key){var<sp/>fnKey=&quot;</highlight><highlight class="normal">fn</highlight><highlight class="stringliteral">&quot;+key;self.state[fnKey]={vars:[],body:[],own:{}},self.state.computing=fnKey;var<sp/>intoId=self.nextId();self.recurse(watch,intoId),self.return_(intoId),self.state.inputs.push(fnKey),watch.watchId=key}),this.state.computing=&quot;</highlight><highlight class="normal">fn</highlight><highlight class="stringliteral">&quot;,this.stage=&quot;</highlight><highlight class="normal">main</highlight><highlight class="stringliteral">&quot;,this.recurse(ast);var<sp/>fnString=&apos;&quot;</highlight><highlight class="stringliteral">&apos;+this.USE+&quot;<sp/>&quot;+this.STRICT+&apos;</highlight><highlight class="stringliteral">&quot;;\n&apos;+this.filterPrefix()+&quot;</highlight><highlight class="normal">var<sp/>fn=</highlight><highlight class="stringliteral">&quot;+this.generateFunction(&quot;</highlight><highlight class="normal">fn</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">s,l,a,i</highlight><highlight class="stringliteral">&quot;)+extra+this.watchFns()+&quot;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fn;</highlight><highlight class="stringliteral">&quot;,fn=new<sp/>Function(&quot;</highlight><highlight class="normal">$filter</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">ensureSafeMemberName</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">ensureSafeObject</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">ensureSafeFunction</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">ifDefined</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">plus</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">text</highlight><highlight class="stringliteral">&quot;,fnString)(this.$filter,ensureSafeMemberName,ensureSafeObject,ensureSafeFunction,ifDefined,plusFn,expression);return<sp/>this.state=this.stage=undefined,fn.literal=isLiteral(ast),fn.constant=isConstant(ast),fn},USE:&quot;</highlight><highlight class="normal">use</highlight><highlight class="stringliteral">&quot;,STRICT:&quot;</highlight><highlight class="normal">strict</highlight><highlight class="stringliteral">&quot;,watchFns:function(){var<sp/>result=[],fns=this.state.inputs,self=this;return<sp/>forEach(fns,function(name){result.push(&quot;</highlight><highlight class="normal">var<sp/></highlight><highlight class="stringliteral">&quot;+name+&quot;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;+self.generateFunction(name,&quot;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&quot;))}),fns.length&amp;&amp;result.push(&quot;</highlight><highlight class="normal">fn.inputs=[</highlight><highlight class="stringliteral">&quot;+fns.join(&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal">];</highlight><highlight class="stringliteral">&quot;),result.join(&quot;</highlight><highlight class="stringliteral">&quot;)},generateFunction:function(name,params){return&quot;</highlight><highlight class="keyword">function</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;+params+&quot;</highlight><highlight class="normal">){</highlight><highlight class="stringliteral">&quot;+this.varsPrefix(name)+this.body(name)+&quot;</highlight><highlight class="normal">};</highlight><highlight class="stringliteral">&quot;},filterPrefix:function(){var<sp/>parts=[],self=this;return<sp/>forEach(this.state.filters,function(id,filter){parts.push(id+&quot;</highlight><highlight class="normal">=$filter(</highlight><highlight class="stringliteral">&quot;+self.escape(filter)+&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;)}),parts.length?&quot;</highlight><highlight class="normal">var<sp/></highlight><highlight class="stringliteral">&quot;+parts.join(&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal">;</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="stringliteral">&quot;},varsPrefix:function(section){return<sp/>this.state[section].vars.length?&quot;</highlight><highlight class="normal">var<sp/></highlight><highlight class="stringliteral">&quot;+this.state[section].vars.join(&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal">;</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="stringliteral">&quot;},body:function(section){return<sp/>this.state[section].body.join(&quot;</highlight><highlight class="stringliteral">&quot;)},recurse:function(ast,intoId,nameId,recursionFn,create,skipWatchIdCheck){var<sp/>left,right,args,expression,self=this;if(recursionFn=recursionFn||noop,!skipWatchIdCheck&amp;&amp;isDefined(ast.watchId))return<sp/>intoId=intoId||this.nextId(),void<sp/>this.if_(&quot;</highlight><highlight class="normal">i</highlight><highlight class="stringliteral">&quot;,this.lazyAssign(intoId,this.computedMember(&quot;</highlight><highlight class="normal">i</highlight><highlight class="stringliteral">&quot;,ast.watchId)),this.lazyRecurse(ast,intoId,nameId,recursionFn,create,!0));switch(ast.type){case<sp/>AST.Program:forEach(ast.body,function(expression,pos){self.recurse(expression.expression,undefined,undefined,function(expr){right=expr}),pos!==ast.body.length-1?self.current().body.push(right,&quot;</highlight><highlight class="normal">;</highlight><highlight class="stringliteral">&quot;):self.return_(right)});break;case<sp/>AST.Literal:expression=this.escape(ast.value),this.assign(intoId,expression),recursionFn(expression);break;case<sp/>AST.UnaryExpression:this.recurse(ast.argument,undefined,undefined,function(expr){right=expr}),expression=ast.operator+&quot;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;+this.ifDefined(right,0)+&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;,this.assign(intoId,expression),recursionFn(expression);break;case<sp/>AST.BinaryExpression:this.recurse(ast.left,undefined,undefined,function(expr){left=expr}),this.recurse(ast.right,undefined,undefined,function(expr){right=expr}),expression=&quot;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&quot;===ast.operator?this.plus(left,right):&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;===ast.operator?this.ifDefined(left,0)+ast.operator+this.ifDefined(right,0):&quot;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;+left+&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;+ast.operator+&quot;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;+right+&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;,this.assign(intoId,expression),recursionFn(expression);break;case<sp/>AST.LogicalExpression:intoId=intoId||this.nextId(),self.recurse(ast.left,intoId),self.if_(&quot;</highlight><highlight class="normal">&amp;&amp;</highlight><highlight class="stringliteral">&quot;===ast.operator?intoId:self.not(intoId),self.lazyRecurse(ast.right,intoId)),recursionFn(intoId);break;case<sp/>AST.ConditionalExpression:intoId=intoId||this.nextId(),self.recurse(ast.test,intoId),self.if_(intoId,self.lazyRecurse(ast.alternate,intoId),self.lazyRecurse(ast.consequent,intoId)),recursionFn(intoId);break;case<sp/>AST.Identifier:intoId=intoId||this.nextId(),nameId&amp;&amp;(nameId.context=&quot;</highlight><highlight class="normal">inputs</highlight><highlight class="stringliteral">&quot;===self.stage?&quot;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&quot;:this.assign(this.nextId(),this.getHasOwnProperty(&quot;</highlight><highlight class="normal">l</highlight><highlight class="stringliteral">&quot;,ast.name)+&quot;</highlight><highlight class="normal">?l:s</highlight><highlight class="stringliteral">&quot;),nameId.computed=!1,nameId.name=ast.name),ensureSafeMemberName(ast.name),self.if_(&quot;</highlight><highlight class="normal">inputs</highlight><highlight class="stringliteral">&quot;===self.stage||self.not(self.getHasOwnProperty(&quot;</highlight><highlight class="normal">l</highlight><highlight class="stringliteral">&quot;,ast.name)),function(){self.if_(&quot;</highlight><highlight class="normal">inputs</highlight><highlight class="stringliteral">&quot;===self.stage||&quot;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&quot;,function(){create&amp;&amp;1!==create&amp;&amp;self.if_(self.not(self.nonComputedMember(&quot;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&quot;,ast.name)),self.lazyAssign(self.nonComputedMember(&quot;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&quot;,ast.name),&quot;</highlight><highlight class="normal">{}</highlight><highlight class="stringliteral">&quot;)),self.assign(intoId,self.nonComputedMember(&quot;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&quot;,ast.name))})},intoId&amp;&amp;self.lazyAssign(intoId,self.nonComputedMember(&quot;</highlight><highlight class="normal">l</highlight><highlight class="stringliteral">&quot;,ast.name))),(self.state.expensiveChecks||isPossiblyDangerousMemberName(ast.name))&amp;&amp;self.addEnsureSafeObject(intoId),recursionFn(intoId);break;case<sp/>AST.MemberExpression:left=nameId&amp;&amp;(nameId.context=this.nextId())||this.nextId(),intoId=intoId||this.nextId(),self.recurse(ast.object,left,undefined,function(){self.if_(self.notNull(left),function(){ast.computed?(right=self.nextId(),self.recurse(ast.property,right),self.addEnsureSafeMemberName(right),create&amp;&amp;1!==create&amp;&amp;self.if_(self.not(self.computedMember(left,right)),self.lazyAssign(self.computedMember(left,right),&quot;</highlight><highlight class="normal">{}</highlight><highlight class="stringliteral">&quot;)),expression=self.ensureSafeObject(self.computedMember(left,right)),self.assign(intoId,expression),nameId&amp;&amp;(nameId.computed=!0,nameId.name=right)):(ensureSafeMemberName(ast.property.name),create&amp;&amp;1!==create&amp;&amp;self.if_(self.not(self.nonComputedMember(left,ast.property.name)),self.lazyAssign(self.nonComputedMember(left,ast.property.name),&quot;</highlight><highlight class="normal">{}</highlight><highlight class="stringliteral">&quot;)),expression=self.nonComputedMember(left,ast.property.name),(self.state.expensiveChecks||isPossiblyDangerousMemberName(ast.property.name))&amp;&amp;(expression=self.ensureSafeObject(expression)),self.assign(intoId,expression),nameId&amp;&amp;(nameId.computed=!1,nameId.name=ast.property.name)),recursionFn(intoId)})},!!create);break;case<sp/>AST.CallExpression:intoId=intoId||this.nextId(),ast.filter?(right=self.filter(ast.callee.name),args=[],forEach(ast.arguments,function(expr){var<sp/>argument=self.nextId();self.recurse(expr,argument),args.push(argument)}),expression=right+&quot;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;+args.join(&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;,self.assign(intoId,expression),recursionFn(intoId)):(right=self.nextId(),left={},args=[],self.recurse(ast.callee,right,left,function(){self.if_(self.notNull(right),function(){self.addEnsureSafeFunction(right),forEach(ast.arguments,function(expr){self.recurse(expr,self.nextId(),undefined,function(argument){args.push(self.ensureSafeObject(argument))})}),left.name?(self.state.expensiveChecks||self.addEnsureSafeObject(left.context),expression=self.member(left.context,left.name,left.computed)+&quot;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;+args.join(&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;):expression=right+&quot;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;+args.join(&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;,expression=self.ensureSafeObject(expression),self.assign(intoId,expression),recursionFn(intoId)})}));break;case<sp/>AST.AssignmentExpression:if(right=this.nextId(),left={},!isAssignable(ast.left))throw<sp/>$parseMinErr(&quot;</highlight><highlight class="normal">lval</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Trying<sp/>to<sp/>assing<sp/>a<sp/>value<sp/>to<sp/>a<sp/>non<sp/>l-value</highlight><highlight class="stringliteral">&quot;);this.recurse(ast.left,undefined,left,function(){self.if_(self.notNull(left.context),function(){self.recurse(ast.right,right),self.addEnsureSafeObject(self.member(left.context,left.name,left.computed)),expression=self.member(left.context,left.name,left.computed)+ast.operator+right,self.assign(intoId,expression),recursionFn(intoId||expression)})},1);break;case<sp/>AST.ArrayExpression:args=[],forEach(ast.elements,function(expr){self.recurse(expr,self.nextId(),undefined,function(argument){args.push(argument)})}),expression=&quot;</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&quot;+args.join(&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;,this.assign(intoId,expression),recursionFn(expression);break;case<sp/>AST.ObjectExpression:args=[],forEach(ast.properties,function(property){self.recurse(property.value,self.nextId(),undefined,function(expr){args.push(self.escape(property.key.type===AST.Identifier?property.key.name:&quot;</highlight><highlight class="stringliteral">&quot;+property.key.value)+&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;+expr)})}),expression=&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;+args.join(&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;,this.assign(intoId,expression),recursionFn(expression);break;case<sp/>AST.ThisExpression:this.assign(intoId,&quot;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&quot;),recursionFn(&quot;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&quot;);break;case<sp/>AST.NGValueParameter:this.assign(intoId,&quot;</highlight><highlight class="normal">v</highlight><highlight class="stringliteral">&quot;),recursionFn(&quot;</highlight><highlight class="normal">v</highlight><highlight class="stringliteral">&quot;)}},getHasOwnProperty:function(element,property){var<sp/>key=element+&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;+property,own=this.current().own;return<sp/>own.hasOwnProperty(key)||(own[key]=this.nextId(!1,element+&quot;</highlight><highlight class="normal">&amp;&amp;(</highlight><highlight class="stringliteral">&quot;+this.escape(property)+&quot;</highlight><highlight class="normal"><sp/>in<sp/></highlight><highlight class="stringliteral">&quot;+element+&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;)),own[key]},assign:function(id,value){return<sp/>id?(this.current().body.push(id,&quot;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;,value,&quot;</highlight><highlight class="normal">;</highlight><highlight class="stringliteral">&quot;),id):void<sp/>0},filter:function(filterName){return<sp/>this.state.filters.hasOwnProperty(filterName)||(this.state.filters[filterName]=this.nextId(!0)),this.state.filters[filterName]},ifDefined:function(id,defaultValue){return&quot;</highlight><highlight class="normal">ifDefined(</highlight><highlight class="stringliteral">&quot;+id+&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;+this.escape(defaultValue)+&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;},plus:function(left,right){return&quot;</highlight><highlight class="normal">plus(</highlight><highlight class="stringliteral">&quot;+left+&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;+right+&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;},return_:function(id){this.current().body.push(&quot;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;,id,&quot;</highlight><highlight class="normal">;</highlight><highlight class="stringliteral">&quot;)},if_:function(test,alternate,consequent){if(test===!0)alternate();else{var<sp/>body=this.current().body;body.push(&quot;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;,test,&quot;</highlight><highlight class="normal">){</highlight><highlight class="stringliteral">&quot;),alternate(),body.push(&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;),consequent&amp;&amp;(body.push(&quot;</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;),consequent(),body.push(&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;))}},not:function(expression){return&quot;</highlight><highlight class="normal">!(</highlight><highlight class="stringliteral">&quot;+expression+&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;},notNull:function(expression){return<sp/>expression+&quot;</highlight><highlight class="normal">!=null</highlight><highlight class="stringliteral">&quot;},nonComputedMember:function(left,right){return<sp/>left+&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;+right},computedMember:function(left,right){return<sp/>left+&quot;</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&quot;+right+&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;},member:function(left,right,computed){return<sp/>computed?this.computedMember(left,right):this.nonComputedMember(left,right)},addEnsureSafeObject:function(item){this.current().body.push(this.ensureSafeObject(item),&quot;</highlight><highlight class="normal">;</highlight><highlight class="stringliteral">&quot;)},addEnsureSafeMemberName:function(item){this.current().body.push(this.ensureSafeMemberName(item),&quot;</highlight><highlight class="normal">;</highlight><highlight class="stringliteral">&quot;)},addEnsureSafeFunction:function(item){this.current().body.push(this.ensureSafeFunction(item),&quot;</highlight><highlight class="normal">;</highlight><highlight class="stringliteral">&quot;)},ensureSafeObject:function(item){return&quot;</highlight><highlight class="normal">ensureSafeObject(</highlight><highlight class="stringliteral">&quot;+item+&quot;</highlight><highlight class="normal">,text)</highlight><highlight class="stringliteral">&quot;},ensureSafeMemberName:function(item){return&quot;</highlight><highlight class="normal">ensureSafeMemberName(</highlight><highlight class="stringliteral">&quot;+item+&quot;</highlight><highlight class="normal">,text)</highlight><highlight class="stringliteral">&quot;},ensureSafeFunction:function(item){return&quot;</highlight><highlight class="normal">ensureSafeFunction(</highlight><highlight class="stringliteral">&quot;+item+&quot;</highlight><highlight class="normal">,text)</highlight><highlight class="stringliteral">&quot;},lazyRecurse:function(ast,intoId,nameId,recursionFn,create,skipWatchIdCheck){var<sp/>self=this;return<sp/>function(){self.recurse(ast,intoId,nameId,recursionFn,create,skipWatchIdCheck)}},lazyAssign:function(id,value){var<sp/>self=this;return<sp/>function(){self.assign(id,value)}},stringEscapeRegex:/[^<sp/>a-zA-Z0-9]/g,stringEscapeFn:function(c){return&quot;</highlight><highlight class="normal">\\u</highlight><highlight class="stringliteral">&quot;+(&quot;</highlight><highlight class="normal">0000</highlight><highlight class="stringliteral">&quot;+c.charCodeAt(0).toString(16)).slice(-4)},escape:function(value){if(isString(value))return&quot;</highlight><highlight class="stringliteral">&apos;&quot;+value.replace(this.stringEscapeRegex,this.stringEscapeFn)+&quot;&apos;</highlight><highlight class="stringliteral">&quot;;if(isNumber(value))return<sp/>value.toString();if(value===!0)return&quot;</highlight><highlight class="keyword">true</highlight><highlight class="stringliteral">&quot;;if(value===!1)return&quot;</highlight><highlight class="keyword">false</highlight><highlight class="stringliteral">&quot;;if(null===value)return&quot;</highlight><highlight class="normal">null</highlight><highlight class="stringliteral">&quot;;if(&quot;</highlight><highlight class="normal">undefined</highlight><highlight class="stringliteral">&quot;==typeof<sp/>value)return&quot;</highlight><highlight class="normal">undefined</highlight><highlight class="stringliteral">&quot;;throw<sp/>$parseMinErr(&quot;</highlight><highlight class="normal">esc</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">IMPOSSIBLE</highlight><highlight class="stringliteral">&quot;)},nextId:function(skip,init){var<sp/>id=&quot;</highlight><highlight class="normal">v</highlight><highlight class="stringliteral">&quot;+this.state.nextId++;return<sp/>skip||this.current().vars.push(id+(init?&quot;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;+init:&quot;</highlight><highlight class="stringliteral">&quot;)),id},current:function(){return<sp/>this.state[this.state.computing]}},ASTInterpreter.prototype={compile:function(expression,expensiveChecks){var<sp/>self=this,ast=this.astBuilder.ast(expression);this.expression=expression,this.expensiveChecks=expensiveChecks,findConstantAndWatchExpressions(ast,self.$filter);var<sp/>assignable,assign;(assignable=assignableAST(ast))&amp;&amp;(assign=this.recurse(assignable));var<sp/>inputs,toWatch=getInputs(ast.body);toWatch&amp;&amp;(inputs=[],forEach(toWatch,function(watch,key){var<sp/>input=self.recurse(watch);watch.input=input,inputs.push(input),watch.watchId=key}));var<sp/>expressions=[];forEach(ast.body,function(expression){expressions.push(self.recurse(expression.expression))});var<sp/>fn=0===ast.body.length?function(){}:1===ast.body.length?expressions[0]:function(scope,locals){var<sp/>lastValue;return<sp/>forEach(expressions,function(exp){lastValue=exp(scope,locals)}),lastValue};return<sp/>assign&amp;&amp;(fn.assign=function(scope,value,locals){return<sp/>assign(scope,locals,value)}),inputs&amp;&amp;(fn.inputs=inputs),fn.literal=isLiteral(ast),fn.constant=isConstant(ast),fn},recurse:function(ast,context,create){var<sp/>left,right,args,self=this;if(ast.input)return<sp/>this.inputs(ast.input,ast.watchId);switch(ast.type){case<sp/>AST.Literal:return<sp/>this.value(ast.value,context);case<sp/>AST.UnaryExpression:return<sp/>right=this.recurse(ast.argument),this[&quot;</highlight><highlight class="normal">unary</highlight><highlight class="stringliteral">&quot;+ast.operator](right,context);case<sp/>AST.BinaryExpression:return<sp/>left=this.recurse(ast.left),right=this.recurse(ast.right),this[&quot;</highlight><highlight class="normal">binary</highlight><highlight class="stringliteral">&quot;+ast.operator](left,right,context);case<sp/>AST.LogicalExpression:return<sp/>left=this.recurse(ast.left),right=this.recurse(ast.right),this[&quot;</highlight><highlight class="normal">binary</highlight><highlight class="stringliteral">&quot;+ast.operator](left,right,context);case<sp/>AST.ConditionalExpression:return<sp/>this[&quot;</highlight><highlight class="normal">ternary?:</highlight><highlight class="stringliteral">&quot;](this.recurse(ast.test),this.recurse(ast.alternate),this.recurse(ast.consequent),context);case<sp/>AST.Identifier:return<sp/>ensureSafeMemberName(ast.name,self.expression),self.identifier(ast.name,self.expensiveChecks||isPossiblyDangerousMemberName(ast.name),context,create,self.expression);case<sp/>AST.MemberExpression:return<sp/>left=this.recurse(ast.object,!1,!!create),ast.computed||(ensureSafeMemberName(ast.property.name,self.expression),right=ast.property.name),ast.computed&amp;&amp;(right=this.recurse(ast.property)),ast.computed?this.computedMember(left,right,context,create,self.expression):this.nonComputedMember(left,right,self.expensiveChecks,context,create,self.expression);case<sp/>AST.CallExpression:return<sp/>args=[],forEach(ast.arguments,function(expr){args.push(self.recurse(expr))}),ast.filter&amp;&amp;(right=this.$filter(ast.callee.name)),ast.filter||(right=this.recurse(ast.callee,!0)),ast.filter?function(scope,locals,assign,inputs){for(var<sp/>values=[],i=0;i&lt;args.length;++i)values.push(args[i](scope,locals,assign,inputs));var<sp/>value=right.apply(undefined,values,inputs);return<sp/>context?{context:undefined,name:undefined,value:value}:value}:function(scope,locals,assign,inputs){var<sp/>value,rhs=right(scope,locals,assign,inputs);if(null!=rhs.value){ensureSafeObject(rhs.context,self.expression),ensureSafeFunction(rhs.value,self.expression);for(var<sp/>values=[],i=0;i&lt;args.length;++i)values.push(ensureSafeObject(args[i](scope,locals,assign,inputs),self.expression));value=ensureSafeObject(rhs.value.apply(rhs.context,values),self.expression)}return<sp/>context?{value:value}:value};case<sp/>AST.AssignmentExpression:return<sp/>left=this.recurse(ast.left,!0,1),right=this.recurse(ast.right),function(scope,locals,assign,inputs){var<sp/>lhs=left(scope,locals,assign,inputs),rhs=right(scope,locals,assign,inputs);return<sp/>ensureSafeObject(lhs.value,self.expression),lhs.context[lhs.name]=rhs,context?{value:rhs}:rhs};case<sp/>AST.ArrayExpression:return<sp/>args=[],forEach(ast.elements,function(expr){args.push(self.recurse(expr))}),function(scope,locals,assign,inputs){for(var<sp/>value=[],i=0;i&lt;args.length;++i)value.push(args[i](scope,locals,assign,inputs));return<sp/>context?{value:value}:value};case<sp/>AST.ObjectExpression:return<sp/>args=[],forEach(ast.properties,function(property){args.push({key:property.key.type===AST.Identifier?property.key.name:&quot;</highlight><highlight class="stringliteral">&quot;+property.key.value,value:self.recurse(property.value)})}),function(scope,locals,assign,inputs){for(var<sp/>value={},i=0;i&lt;args.length;++i)value[args[i].key]=args[i].value(scope,locals,assign,inputs);return<sp/>context?{value:value}:value};case<sp/>AST.ThisExpression:return<sp/>function(scope){return<sp/>context?{value:scope}:scope};case<sp/>AST.NGValueParameter:return<sp/>function(scope,locals,assign,inputs){return<sp/>context?{value:assign}:assign}}},&quot;</highlight><highlight class="normal">unary+</highlight><highlight class="stringliteral">&quot;:function(argument,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=argument(scope,locals,assign,inputs);return<sp/>arg=isDefined(arg)?+arg:0,context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">unary-</highlight><highlight class="stringliteral">&quot;:function(argument,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=argument(scope,locals,assign,inputs);return<sp/>arg=isDefined(arg)?-arg:0,context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">unary!</highlight><highlight class="stringliteral">&quot;:function(argument,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=!argument(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary+</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>lhs=left(scope,locals,assign,inputs),rhs=right(scope,locals,assign,inputs),arg=plusFn(lhs,rhs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary-</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>lhs=left(scope,locals,assign,inputs),rhs=right(scope,locals,assign,inputs),arg=(isDefined(lhs)?lhs:0)-(isDefined(rhs)?rhs:0);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary*</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=left(scope,locals,assign,inputs)*right(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary/</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=left(scope,locals,assign,inputs)/right(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary%</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=left(scope,locals,assign,inputs)%right(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary===</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=left(scope,locals,assign,inputs)===right(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary!==</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=left(scope,locals,assign,inputs)!==right(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary==</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=left(scope,locals,assign,inputs)==right(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary!=</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=left(scope,locals,assign,inputs)!=right(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary&lt;</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=left(scope,locals,assign,inputs)&lt;right(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary&gt;</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=left(scope,locals,assign,inputs)&gt;right(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary&lt;=</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=left(scope,locals,assign,inputs)&lt;=right(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary&gt;=</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=left(scope,locals,assign,inputs)&gt;=right(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary&amp;&amp;</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=left(scope,locals,assign,inputs)&amp;&amp;right(scope,locals,assign,inputs);</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">binary||</highlight><highlight class="stringliteral">&quot;:function(left,right,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=left(scope,locals,assign,inputs)||right(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},&quot;</highlight><highlight class="normal">ternary?:</highlight><highlight class="stringliteral">&quot;:function(test,alternate,consequent,context){return<sp/>function(scope,locals,assign,inputs){var<sp/>arg=test(scope,locals,assign,inputs)?alternate(scope,locals,assign,inputs):consequent(scope,locals,assign,inputs);return<sp/>context?{value:arg}:arg}},value:function(value,context){return<sp/>function(){return<sp/>context?{context:undefined,name:undefined,value:value}:value}},identifier:function(name,expensiveChecks,context,create,expression){return<sp/>function(scope,locals,assign,inputs){var<sp/>base=locals&amp;&amp;name<sp/>in<sp/>locals?locals:scope;create&amp;&amp;1!==create&amp;&amp;base&amp;&amp;!base[name]&amp;&amp;(base[name]={});var<sp/>value=base?base[name]:undefined;return<sp/>expensiveChecks&amp;&amp;ensureSafeObject(value,expression),context?{context:base,name:name,value:value}:value}},computedMember:function(left,right,context,create,expression){return<sp/>function(scope,locals,assign,inputs){var<sp/>rhs,value,lhs=left(scope,locals,assign,inputs);return<sp/>null!=lhs&amp;&amp;(rhs=right(scope,locals,assign,inputs),ensureSafeMemberName(rhs,expression),create&amp;&amp;1!==create&amp;&amp;lhs&amp;&amp;!lhs[rhs]&amp;&amp;(lhs[rhs]={}),value=lhs[rhs],ensureSafeObject(value,expression)),context?{context:lhs,name:rhs,value:value}:value}},nonComputedMember:function(left,right,expensiveChecks,context,create,expression){return<sp/>function(scope,locals,assign,inputs){var<sp/>lhs=left(scope,locals,assign,inputs);create&amp;&amp;1!==create&amp;&amp;lhs&amp;&amp;!lhs[right]&amp;&amp;(lhs[right]={});var<sp/>value=null!=lhs?lhs[right]:undefined;return(expensiveChecks||isPossiblyDangerousMemberName(right))&amp;&amp;ensureSafeObject(value,expression),context?{context:lhs,name:right,value:value}:value}},inputs:function(input,watchId){return<sp/>function(scope,value,locals,inputs){return<sp/>inputs?inputs[watchId]:input(scope,value,locals)}}};var<sp/>Parser=function(lexer,$filter,options){this.lexer=lexer,this.$filter=$filter,this.options=options,this.ast=new<sp/>AST(this.lexer),this.astCompiler=options.csp?new<sp/>ASTInterpreter(this.ast,$filter):new<sp/>ASTCompiler(this.ast,$filter)};Parser.prototype={constructor:Parser,parse:function(text){return<sp/>this.astCompiler.compile(text,this.options.expensiveChecks)}};var<sp/>objectValueOf=(createMap(),createMap(),Object.prototype.valueOf),$sceMinErr=minErr(&quot;</highlight><highlight class="normal">$sce</highlight><highlight class="stringliteral">&quot;),SCE_CONTEXTS={HTML:&quot;</highlight><highlight class="normal">html</highlight><highlight class="stringliteral">&quot;,CSS:&quot;</highlight><highlight class="normal">css</highlight><highlight class="stringliteral">&quot;,URL:&quot;</highlight><highlight class="normal">url</highlight><highlight class="stringliteral">&quot;,RESOURCE_URL:&quot;</highlight><highlight class="normal">resourceUrl</highlight><highlight class="stringliteral">&quot;,JS:&quot;</highlight><highlight class="normal">js</highlight><highlight class="stringliteral">&quot;},$compileMinErr=minErr(&quot;</highlight><highlight class="normal">$compile</highlight><highlight class="stringliteral">&quot;),urlParsingNode=document.createElement(&quot;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&quot;),originUrl=urlResolve(window.location.href);$$CookieReader.$inject=[&quot;</highlight><highlight class="normal">$document</highlight><highlight class="stringliteral">&quot;],$FilterProvider.$inject=[&quot;</highlight><highlight class="normal">$provide</highlight><highlight class="stringliteral">&quot;],currencyFilter.$inject=[&quot;</highlight><highlight class="normal">$locale</highlight><highlight class="stringliteral">&quot;],numberFilter.$inject=[&quot;</highlight><highlight class="normal">$locale</highlight><highlight class="stringliteral">&quot;];var<sp/>DECIMAL_SEP=&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;,DATE_FORMATS={yyyy:dateGetter(&quot;</highlight><highlight class="normal">FullYear</highlight><highlight class="stringliteral">&quot;,4),yy:dateGetter(&quot;</highlight><highlight class="normal">FullYear</highlight><highlight class="stringliteral">&quot;,2,0,!0),y:dateGetter(&quot;</highlight><highlight class="normal">FullYear</highlight><highlight class="stringliteral">&quot;,1),MMMM:dateStrGetter(&quot;</highlight><highlight class="normal">Month</highlight><highlight class="stringliteral">&quot;),MMM:dateStrGetter(&quot;</highlight><highlight class="normal">Month</highlight><highlight class="stringliteral">&quot;,!0),MM:dateGetter(&quot;</highlight><highlight class="normal">Month</highlight><highlight class="stringliteral">&quot;,2,1),M:dateGetter(&quot;</highlight><highlight class="normal">Month</highlight><highlight class="stringliteral">&quot;,1,1),dd:dateGetter(&quot;</highlight><highlight class="normal">Date</highlight><highlight class="stringliteral">&quot;,2),d:dateGetter(&quot;</highlight><highlight class="normal">Date</highlight><highlight class="stringliteral">&quot;,1),HH:dateGetter(&quot;</highlight><highlight class="normal">Hours</highlight><highlight class="stringliteral">&quot;,2),H:dateGetter(&quot;</highlight><highlight class="normal">Hours</highlight><highlight class="stringliteral">&quot;,1),hh:dateGetter(&quot;</highlight><highlight class="normal">Hours</highlight><highlight class="stringliteral">&quot;,2,-12),h:dateGetter(&quot;</highlight><highlight class="normal">Hours</highlight><highlight class="stringliteral">&quot;,1,-12),mm:dateGetter(&quot;</highlight><highlight class="normal">Minutes</highlight><highlight class="stringliteral">&quot;,2),m:dateGetter(&quot;</highlight><highlight class="normal">Minutes</highlight><highlight class="stringliteral">&quot;,1),ss:dateGetter(&quot;</highlight><highlight class="normal">Seconds</highlight><highlight class="stringliteral">&quot;,2),s:dateGetter(&quot;</highlight><highlight class="normal">Seconds</highlight><highlight class="stringliteral">&quot;,1),sss:dateGetter(&quot;</highlight><highlight class="normal">Milliseconds</highlight><highlight class="stringliteral">&quot;,3),EEEE:dateStrGetter(&quot;</highlight><highlight class="normal">Day</highlight><highlight class="stringliteral">&quot;),EEE:dateStrGetter(&quot;</highlight><highlight class="normal">Day</highlight><highlight class="stringliteral">&quot;,!0),a:ampmGetter,Z:timeZoneGetter,ww:weekGetter(2),w:weekGetter(1),G:eraGetter,GG:eraGetter,GGG:eraGetter,GGGG:longEraGetter},DATE_FORMATS_SPLIT=/((?:[^yMdHhmsaZEwG&apos;]+)|(?:&apos;(?:[^&apos;]|&apos;&apos;)*&apos;)|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,NUMBER_STRING=/^\-?\d+$/;dateFilter.$inject=[&quot;</highlight><highlight class="normal">$locale</highlight><highlight class="stringliteral">&quot;];var<sp/>lowercaseFilter=valueFn(lowercase),uppercaseFilter=valueFn(uppercase);orderByFilter.$inject=[&quot;</highlight><highlight class="normal">$parse</highlight><highlight class="stringliteral">&quot;];var<sp/>htmlAnchorDirective=valueFn({restrict:&quot;</highlight><highlight class="normal">E</highlight><highlight class="stringliteral">&quot;,compile:function(element,attr){return<sp/>attr.href||attr.xlinkHref?void<sp/>0:function(scope,element){if(&quot;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&quot;===element[0].nodeName.toLowerCase()){var<sp/>href=&quot;</highlight><highlight class="normal">[</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>SVGAnimatedString]</highlight><highlight class="stringliteral">&quot;===toString.call(element.prop(&quot;</highlight><highlight class="normal">href</highlight><highlight class="stringliteral">&quot;))?&quot;</highlight><highlight class="normal">xlink:href</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">href</highlight><highlight class="stringliteral">&quot;;element.on(&quot;</highlight><highlight class="normal">click</highlight><highlight class="stringliteral">&quot;,function(event){element.attr(href)||event.preventDefault()})}}}}),ngAttributeAliasDirectives={};forEach(BOOLEAN_ATTR,function(propName,attrName){function<sp/>defaultLinkFn(scope,element,attr){scope.$watch(attr[normalized],function(value){attr.$set(attrName,!!value)})}if(&quot;</highlight><highlight class="normal">multiple</highlight><highlight class="stringliteral">&quot;!=propName){var<sp/>normalized=directiveNormalize(&quot;</highlight><highlight class="normal">ng-</highlight><highlight class="stringliteral">&quot;+attrName),linkFn=defaultLinkFn;&quot;</highlight><highlight class="normal">checked</highlight><highlight class="stringliteral">&quot;===propName&amp;&amp;(linkFn=function(scope,element,attr){attr.ngModel!==attr[normalized]&amp;&amp;defaultLinkFn(scope,element,attr)}),ngAttributeAliasDirectives[normalized]=function(){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,priority:100,link:linkFn}}}}),forEach(ALIASED_ATTR,function(htmlAttr,ngAttr){ngAttributeAliasDirectives[ngAttr]=function(){return{priority:100,link:function(scope,element,attr){if(&quot;</highlight><highlight class="normal">ngPattern</highlight><highlight class="stringliteral">&quot;===ngAttr&amp;&amp;&quot;</highlight><highlight class="normal">/</highlight><highlight class="stringliteral">&quot;==attr.ngPattern.charAt(0)){var<sp/>match=attr.ngPattern.match(REGEX_STRING_REGEXP);if(match)return<sp/>void<sp/>attr.$set(&quot;</highlight><highlight class="normal">ngPattern</highlight><highlight class="stringliteral">&quot;,new<sp/>RegExp(match[1],match[2]))}scope.$watch(attr[ngAttr],function(value){attr.$set(ngAttr,value)})}}}}),forEach([&quot;</highlight><highlight class="normal">src</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">srcset</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">href</highlight><highlight class="stringliteral">&quot;],function(attrName){var<sp/>normalized=directiveNormalize(&quot;</highlight><highlight class="normal">ng-</highlight><highlight class="stringliteral">&quot;+attrName);ngAttributeAliasDirectives[normalized]=function(){return{priority:99,link:function(scope,element,attr){var<sp/>propName=attrName,name=attrName;&quot;</highlight><highlight class="normal">href</highlight><highlight class="stringliteral">&quot;===attrName&amp;&amp;&quot;</highlight><highlight class="normal">[</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>SVGAnimatedString]</highlight><highlight class="stringliteral">&quot;===toString.call(element.prop(&quot;</highlight><highlight class="normal">href</highlight><highlight class="stringliteral">&quot;))&amp;&amp;(name=&quot;</highlight><highlight class="normal">xlinkHref</highlight><highlight class="stringliteral">&quot;,attr.$attr[name]=&quot;</highlight><highlight class="normal">xlink:href</highlight><highlight class="stringliteral">&quot;,propName=null),attr.$observe(normalized,function(value){return<sp/>value?(attr.$set(name,value),void(msie&amp;&amp;propName&amp;&amp;element.prop(propName,attr[name]))):void(&quot;</highlight><highlight class="normal">href</highlight><highlight class="stringliteral">&quot;===attrName&amp;&amp;attr.$set(name,null))})}}}});var<sp/>nullFormCtrl={$addControl:noop,$$renameControl:nullFormRenameControl,$removeControl:noop,$setValidity:noop,$setDirty:noop,$setPristine:noop,$setSubmitted:noop},SUBMITTED_CLASS=&quot;</highlight><highlight class="normal">ng-submitted</highlight><highlight class="stringliteral">&quot;;FormController.$inject=[&quot;</highlight><highlight class="normal">$element</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$attrs</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$scope</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$animate</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$interpolate</highlight><highlight class="stringliteral">&quot;];var<sp/>formDirectiveFactory=function(isNgForm){return[&quot;</highlight><highlight class="normal">$timeout</highlight><highlight class="stringliteral">&quot;,function($timeout){var<sp/>formDirective={name:&quot;</highlight><highlight class="normal">form</highlight><highlight class="stringliteral">&quot;,restrict:isNgForm?&quot;</highlight><highlight class="normal">EAC</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">E</highlight><highlight class="stringliteral">&quot;,controller:FormController,compile:function(formElement,attr){formElement.addClass(PRISTINE_CLASS).addClass(VALID_CLASS);var<sp/>nameAttr=attr.name?&quot;</highlight><highlight class="normal">name</highlight><highlight class="stringliteral">&quot;:isNgForm&amp;&amp;attr.ngForm?&quot;</highlight><highlight class="normal">ngForm</highlight><highlight class="stringliteral">&quot;:!1;return{pre:function(scope,formElement,attr,controller){if(!(&quot;</highlight><highlight class="normal">action</highlight><highlight class="stringliteral">&quot;in<sp/>attr)){var<sp/>handleFormSubmission=function(event){scope.$apply(function(){controller.$commitViewValue(),controller.$setSubmitted()}),event.preventDefault()};addEventListenerFn(formElement[0],&quot;</highlight><highlight class="normal">submit</highlight><highlight class="stringliteral">&quot;,handleFormSubmission),formElement.on(&quot;</highlight><highlight class="normal">$destroy</highlight><highlight class="stringliteral">&quot;,function(){$timeout(function(){removeEventListenerFn(formElement[0],&quot;</highlight><highlight class="normal">submit</highlight><highlight class="stringliteral">&quot;,handleFormSubmission)},0,!1)})}var<sp/>parentFormCtrl=controller.$$parentForm;nameAttr&amp;&amp;(setter(scope,controller.$name,controller,controller.$name),attr.$observe(nameAttr,function(newValue){controller.$name!==newValue&amp;&amp;(setter(scope,controller.$name,undefined,controller.$name),parentFormCtrl.$$renameControl(controller,newValue),setter(scope,controller.$name,controller,controller.$name))})),formElement.on(&quot;</highlight><highlight class="normal">$destroy</highlight><highlight class="stringliteral">&quot;,function(){parentFormCtrl.$removeControl(controller),nameAttr&amp;&amp;setter(scope,attr[nameAttr],undefined,controller.$name),extend(controller,nullFormCtrl)})}}}};return<sp/>formDirective}]},formDirective=formDirectiveFactory(),ngFormDirective=formDirectiveFactory(!0),ISO_DATE_REGEXP=/\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)/,URL_REGEXP=/^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&amp;%@!\-\/]))?$/,EMAIL_REGEXP=/^[a-z0-9!#$%&amp;&apos;*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,NUMBER_REGEXP=/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/,DATE_REGEXP=/^(\d{4})-(\d{2})-(\d{2})$/,DATETIMELOCAL_REGEXP=/^(\d{4})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,WEEK_REGEXP=/^(\d{4})-W(\d\d)$/,MONTH_REGEXP=/^(\d{4})-(\d\d)$/,TIME_REGEXP=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,inputType={text:textInputType,date:createDateInputType(&quot;</highlight><highlight class="normal">date</highlight><highlight class="stringliteral">&quot;,DATE_REGEXP,createDateParser(DATE_REGEXP,[&quot;</highlight><highlight class="normal">yyyy</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">MM</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">dd</highlight><highlight class="stringliteral">&quot;]),&quot;</highlight><highlight class="normal">yyyy-MM-dd</highlight><highlight class="stringliteral">&quot;),&quot;</highlight><highlight class="normal">datetime-local</highlight><highlight class="stringliteral">&quot;:createDateInputType(&quot;</highlight><highlight class="normal">datetimelocal</highlight><highlight class="stringliteral">&quot;,DATETIMELOCAL_REGEXP,createDateParser(DATETIMELOCAL_REGEXP,[&quot;</highlight><highlight class="normal">yyyy</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">MM</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">dd</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">HH</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">mm</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">ss</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">sss</highlight><highlight class="stringliteral">&quot;]),&quot;</highlight><highlight class="normal">yyyy-MM-ddTHH:mm:ss.sss</highlight><highlight class="stringliteral">&quot;),time:createDateInputType(&quot;</highlight><highlight class="normal">time</highlight><highlight class="stringliteral">&quot;,TIME_REGEXP,createDateParser(TIME_REGEXP,[&quot;</highlight><highlight class="normal">HH</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">mm</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">ss</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">sss</highlight><highlight class="stringliteral">&quot;]),&quot;</highlight><highlight class="normal">HH:mm:ss.sss</highlight><highlight class="stringliteral">&quot;),week:createDateInputType(&quot;</highlight><highlight class="normal">week</highlight><highlight class="stringliteral">&quot;,WEEK_REGEXP,weekParser,&quot;</highlight><highlight class="normal">yyyy-Www</highlight><highlight class="stringliteral">&quot;),month:createDateInputType(&quot;</highlight><highlight class="normal">month</highlight><highlight class="stringliteral">&quot;,MONTH_REGEXP,createDateParser(MONTH_REGEXP,[&quot;</highlight><highlight class="normal">yyyy</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">MM</highlight><highlight class="stringliteral">&quot;]),&quot;</highlight><highlight class="normal">yyyy-MM</highlight><highlight class="stringliteral">&quot;),number:numberInputType,url:urlInputType,email:emailInputType,radio:radioInputType,checkbox:checkboxInputType,hidden:noop,button:noop,submit:noop,reset:noop,file:noop},inputDirective=[&quot;</highlight><highlight class="normal">$browser</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$sniffer</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$filter</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$parse</highlight><highlight class="stringliteral">&quot;,function($browser,$sniffer,$filter,$parse){return{restrict:&quot;</highlight><highlight class="normal">E</highlight><highlight class="stringliteral">&quot;,require:[&quot;</highlight><highlight class="normal">?ngModel</highlight><highlight class="stringliteral">&quot;],link:{pre:function(scope,element,attr,ctrls){ctrls[0]&amp;&amp;(inputType[lowercase(attr.type)]||inputType.text)(scope,element,attr,ctrls[0],$sniffer,$browser,$filter,$parse)}}}}],CONSTANT_VALUE_REGEXP=/^(true|false|\d+)$/,ngValueDirective=function(){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,priority:100,compile:function(tpl,tplAttr){return<sp/>CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)?function(scope,elm,attr){attr.$set(&quot;</highlight><highlight class="normal">value</highlight><highlight class="stringliteral">&quot;,scope.$eval(attr.ngValue))}:function(scope,elm,attr){scope.$watch(attr.ngValue,function(value){attr.$set(&quot;</highlight><highlight class="normal">value</highlight><highlight class="stringliteral">&quot;,value)})}}}},ngBindDirective=[&quot;</highlight><highlight class="normal">$compile</highlight><highlight class="stringliteral">&quot;,function($compile){return{restrict:&quot;</highlight><highlight class="normal">AC</highlight><highlight class="stringliteral">&quot;,compile:function(templateElement){return<sp/>$compile.$$addBindingClass(templateElement),function(scope,element,attr){$compile.$$addBindingInfo(element,attr.ngBind),element=element[0],scope.$watch(attr.ngBind,function(value){element.textContent=value===undefined?&quot;</highlight><highlight class="stringliteral">&quot;:value})}}}}],ngBindTemplateDirective=[&quot;</highlight><highlight class="normal">$interpolate</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$compile</highlight><highlight class="stringliteral">&quot;,function($interpolate,$compile){return{compile:function(templateElement){return<sp/>$compile.$$addBindingClass(templateElement),function(scope,element,attr){var<sp/>interpolateFn=$interpolate(element.attr(attr.$attr.ngBindTemplate));$compile.$$addBindingInfo(element,interpolateFn.expressions),element=element[0],attr.$observe(&quot;</highlight><highlight class="normal">ngBindTemplate</highlight><highlight class="stringliteral">&quot;,function(value){element.textContent=value===undefined?&quot;</highlight><highlight class="stringliteral">&quot;:value})}}}}],ngBindHtmlDirective=[&quot;</highlight><highlight class="normal">$sce</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$parse</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$compile</highlight><highlight class="stringliteral">&quot;,function($sce,$parse,$compile){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,compile:function(tElement,tAttrs){var<sp/>ngBindHtmlGetter=$parse(tAttrs.ngBindHtml),ngBindHtmlWatch=$parse(tAttrs.ngBindHtml,function(value){return(value||&quot;</highlight><highlight class="stringliteral">&quot;).toString()});return<sp/>$compile.$$addBindingClass(tElement),function(scope,element,attr){$compile.$$addBindingInfo(element,attr.ngBindHtml),scope.$watch(ngBindHtmlWatch,function(){element.html($sce.getTrustedHtml(ngBindHtmlGetter(scope))||&quot;</highlight><highlight class="stringliteral">&quot;)})}}}}],ngChangeDirective=valueFn({restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,require:&quot;</highlight><highlight class="normal">ngModel</highlight><highlight class="stringliteral">&quot;,link:function(scope,element,attr,ctrl){ctrl.$viewChangeListeners.push(function(){scope.$eval(attr.ngChange)})}}),ngClassDirective=classDirective(&quot;</highlight><highlight class="stringliteral">&quot;,!0),ngClassOddDirective=classDirective(&quot;</highlight><highlight class="normal">Odd</highlight><highlight class="stringliteral">&quot;,0),ngClassEvenDirective=classDirective(&quot;</highlight><highlight class="normal">Even</highlight><highlight class="stringliteral">&quot;,1),ngCloakDirective=ngDirective({compile:function(element,attr){attr.$set(&quot;</highlight><highlight class="normal">ngCloak</highlight><highlight class="stringliteral">&quot;,undefined),element.removeClass(&quot;</highlight><highlight class="normal">ng-cloak</highlight><highlight class="stringliteral">&quot;)}}),ngControllerDirective=[function(){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,scope:!0,controller:&quot;</highlight><highlight class="stringliteral">@&quot;,priority:500}}],ngEventDirectives={},forceAsyncEvents={blur:!0,focus:!0};forEach(&quot;</highlight><highlight class="normal">click<sp/>dblclick<sp/>mousedown<sp/>mouseup<sp/>mouseover<sp/>mouseout<sp/>mousemove<sp/>mouseenter<sp/>mouseleave<sp/>keydown<sp/>keyup<sp/>keypress<sp/>submit<sp/>focus<sp/>blur<sp/>copy<sp/>cut<sp/>paste</highlight><highlight class="stringliteral">&quot;.split(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;),function(eventName){var<sp/>directiveName=directiveNormalize(&quot;</highlight><highlight class="normal">ng-</highlight><highlight class="stringliteral">&quot;+eventName);ngEventDirectives[directiveName]=[&quot;</highlight><highlight class="normal">$parse</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$rootScope</highlight><highlight class="stringliteral">&quot;,function($parse,$rootScope){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,compile:function($element,attr){var<sp/>fn=$parse(attr[directiveName],null,!0);return<sp/>function(scope,element){element.on(eventName,function(event){var<sp/>callback=function(){fn(scope,{$event:event})};forceAsyncEvents[eventName]&amp;&amp;$rootScope.$$phase?scope.$evalAsync(callback):scope.$apply(callback)})}}}}]});var<sp/>ngIfDirective=[&quot;</highlight><highlight class="normal">$animate</highlight><highlight class="stringliteral">&quot;,function($animate){return{multiElement:!0,transclude:&quot;</highlight><highlight class="normal">element</highlight><highlight class="stringliteral">&quot;,priority:600,terminal:!0,restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,$$tlb:!0,link:function($scope,$element,$attr,ctrl,$transclude){var<sp/>block,childScope,previousElements;$scope.$watch($attr.ngIf,function(value){value?childScope||$transclude(function(clone,newScope){childScope=newScope,clone[clone.length++]=document.createComment(&quot;</highlight><highlight class="normal"><sp/>end<sp/>ngIf:<sp/></highlight><highlight class="stringliteral">&quot;+$attr.ngIf+&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;),block={clone:clone},$animate.enter(clone,$element.parent(),$element)}):(previousElements&amp;&amp;(previousElements.remove(),previousElements=null),childScope&amp;&amp;(childScope.$destroy(),childScope=null),block&amp;&amp;(previousElements=getBlockNodes(block.clone),$animate.leave(previousElements).then(function(){previousElements=null}),block=null))})}}}],ngIncludeDirective=[&quot;</highlight><highlight class="normal">$templateRequest</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$anchorScroll</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$animate</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$sce</highlight><highlight class="stringliteral">&quot;,function($templateRequest,$anchorScroll,$animate,$sce){return{restrict:&quot;</highlight><highlight class="normal">ECA</highlight><highlight class="stringliteral">&quot;,priority:400,terminal:!0,transclude:&quot;</highlight><highlight class="normal">element</highlight><highlight class="stringliteral">&quot;,controller:angular.noop,compile:function(element,attr){var<sp/>srcExp=attr.ngInclude||attr.src,onloadExp=attr.onload||&quot;</highlight><highlight class="stringliteral">&quot;,autoScrollExp=attr.autoscroll;return<sp/>function(scope,$element,$attr,ctrl,$transclude){var<sp/>currentScope,previousElement,currentElement,changeCounter=0,cleanupLastIncludeContent=function(){previousElement&amp;&amp;(previousElement.remove(),previousElement=null),currentScope&amp;&amp;(currentScope.$destroy(),currentScope=null),currentElement&amp;&amp;($animate.leave(currentElement).then(function(){previousElement=null}),previousElement=currentElement,currentElement=null)};scope.$watch($sce.parseAsResourceUrl(srcExp),function(src){var<sp/>afterAnimation=function(){!isDefined(autoScrollExp)||autoScrollExp&amp;&amp;!scope.$eval(autoScrollExp)||$anchorScroll()},thisChangeId=++changeCounter;src?($templateRequest(src,!0).then(function(response){if(thisChangeId===changeCounter){var<sp/>newScope=scope.$new();ctrl.template=response;var<sp/>clone=$transclude(newScope,function(clone){cleanupLastIncludeContent(),$animate.enter(clone,null,$element).then(afterAnimation)});currentScope=newScope,currentElement=clone,currentScope.$emit(&quot;</highlight><highlight class="normal">$includeContentLoaded</highlight><highlight class="stringliteral">&quot;,src),scope.$eval(onloadExp)}},function(){thisChangeId===changeCounter&amp;&amp;(cleanupLastIncludeContent(),scope.$emit(&quot;</highlight><highlight class="normal">$includeContentError</highlight><highlight class="stringliteral">&quot;,src))}),scope.$emit(&quot;</highlight><highlight class="normal">$includeContentRequested</highlight><highlight class="stringliteral">&quot;,src)):(cleanupLastIncludeContent(),ctrl.template=null)})}}}}],ngIncludeFillContentDirective=[&quot;</highlight><highlight class="normal">$compile</highlight><highlight class="stringliteral">&quot;,function($compile){return{restrict:&quot;</highlight><highlight class="normal">ECA</highlight><highlight class="stringliteral">&quot;,priority:-400,require:&quot;</highlight><highlight class="normal">ngInclude</highlight><highlight class="stringliteral">&quot;,link:function(scope,$element,$attr,ctrl){return/SVG/.test($element[0].toString())?($element.empty(),void<sp/>$compile(jqLiteBuildFragment(ctrl.template,document).childNodes)(scope,function(clone){$element.append(clone)},{futureParentElement:$element})):($element.html(ctrl.template),void<sp/>$compile($element.contents())(scope))}}}],ngInitDirective=ngDirective({priority:450,compile:function(){return{pre:function(scope,element,attrs){scope.$eval(attrs.ngInit)}}}}),ngListDirective=function(){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,priority:100,require:&quot;</highlight><highlight class="normal">ngModel</highlight><highlight class="stringliteral">&quot;,link:function(scope,element,attr,ctrl){var<sp/>ngList=element.attr(attr.$attr.ngList)||&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;,trimValues=&quot;</highlight><highlight class="keyword">false</highlight><highlight class="stringliteral">&quot;!==attr.ngTrim,separator=trimValues?trim(ngList):ngList,parse=function(viewValue){if(!isUndefined(viewValue)){var<sp/>list=[];return<sp/>viewValue&amp;&amp;forEach(viewValue.split(separator),function(value){value&amp;&amp;list.push(trimValues?trim(value):value)}),list}};ctrl.$parsers.push(parse),ctrl.$formatters.push(function(value){return<sp/>isArray(value)?value.join(ngList):undefined}),ctrl.$isEmpty=function(value){return!value||!value.length}}}},VALID_CLASS=&quot;</highlight><highlight class="normal">ng-valid</highlight><highlight class="stringliteral">&quot;,INVALID_CLASS=&quot;</highlight><highlight class="normal">ng-invalid</highlight><highlight class="stringliteral">&quot;,PRISTINE_CLASS=&quot;</highlight><highlight class="normal">ng-pristine</highlight><highlight class="stringliteral">&quot;,DIRTY_CLASS=&quot;</highlight><highlight class="normal">ng-dirty</highlight><highlight class="stringliteral">&quot;,UNTOUCHED_CLASS=&quot;</highlight><highlight class="normal">ng-untouched</highlight><highlight class="stringliteral">&quot;,TOUCHED_CLASS=&quot;</highlight><highlight class="normal">ng-touched</highlight><highlight class="stringliteral">&quot;,PENDING_CLASS=&quot;</highlight><highlight class="normal">ng-pending</highlight><highlight class="stringliteral">&quot;,$ngModelMinErr=new<sp/>minErr(&quot;</highlight><highlight class="normal">ngModel</highlight><highlight class="stringliteral">&quot;),NgModelController=[&quot;</highlight><highlight class="normal">$scope</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$exceptionHandler</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$attrs</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$element</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$parse</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$animate</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$timeout</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$rootScope</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$q</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$interpolate</highlight><highlight class="stringliteral">&quot;,function($scope,$exceptionHandler,$attr,$element,$parse,$animate,$timeout,$rootScope,$q,$interpolate){this.$viewValue=Number.NaN,this.$modelValue=Number.NaN,this.$$rawModelValue=undefined,this.$validators={},this.$asyncValidators={},this.$parsers=[],this.$formatters=[],this.$viewChangeListeners=[],this.$untouched=!0,this.$touched=!1,this.$pristine=!0,this.$dirty=!1,this.$valid=!0,this.$invalid=!1,this.$error={},this.$$success={},this.$pending=undefined,this.$name=$interpolate($attr.name||&quot;</highlight><highlight class="stringliteral">&quot;,!1)($scope);var<sp/>parserValid,parsedNgModel=$parse($attr.ngModel),parsedNgModelAssign=parsedNgModel.assign,ngModelGet=parsedNgModel,ngModelSet=parsedNgModelAssign,pendingDebounce=null,ctrl=this;this.$$setOptions=function(options){if(ctrl.$options=options,options&amp;&amp;options.getterSetter){var<sp/>invokeModelGetter=$parse($attr.ngModel+&quot;</highlight><highlight class="normal">()</highlight><highlight class="stringliteral">&quot;),invokeModelSetter=$parse($attr.ngModel+&quot;</highlight><highlight class="normal">($$$p)</highlight><highlight class="stringliteral">&quot;);ngModelGet=function($scope){var<sp/>modelValue=parsedNgModel($scope);return<sp/>isFunction(modelValue)&amp;&amp;(modelValue=invokeModelGetter($scope)),modelValue},ngModelSet=function($scope,newValue){isFunction(parsedNgModel($scope))?invokeModelSetter($scope,{$$$p:ctrl.$modelValue}):parsedNgModelAssign($scope,ctrl.$modelValue)}}else<sp/>if(!parsedNgModel.assign)throw<sp/>$ngModelMinErr(&quot;</highlight><highlight class="normal">nonassign</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Expression<sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal"><sp/>is<sp/>non-assignable.<sp/>Element:<sp/>{1}</highlight><highlight class="stringliteral">&quot;,$attr.ngModel,startingTag($element))},this.$render=noop,this.$isEmpty=function(value){return<sp/>isUndefined(value)||&quot;</highlight><highlight class="stringliteral">&quot;===value||null===value||value!==value};var<sp/>parentForm=$element.inheritedData(&quot;</highlight><highlight class="normal">$formController</highlight><highlight class="stringliteral">&quot;)||nullFormCtrl,currentValidationRunId=0;addSetValidityMethod({ctrl:this,$element:$element,set:function(object,property){object[property]=!0},unset:function(object,property){delete<sp/>object[property]},parentForm:parentForm,$animate:$animate}),this.$setPristine=function(){ctrl.$dirty=!1,ctrl.$pristine=!0,$animate.removeClass($element,DIRTY_CLASS),$animate.addClass($element,PRISTINE_CLASS)},this.$setDirty=function(){ctrl.$dirty=!0,ctrl.$pristine=!1,$animate.removeClass($element,PRISTINE_CLASS),$animate.addClass($element,DIRTY_CLASS),parentForm.$setDirty()},this.$setUntouched=function(){ctrl.$touched=!1,ctrl.$untouched=!0,$animate.setClass($element,UNTOUCHED_CLASS,TOUCHED_CLASS)},this.$setTouched=function(){ctrl.$touched=!0,ctrl.$untouched=!1,$animate.setClass($element,TOUCHED_CLASS,UNTOUCHED_CLASS)},this.$rollbackViewValue=function(){$timeout.cancel(pendingDebounce),ctrl.$viewValue=ctrl.$$lastCommittedViewValue,ctrl.$render()},this.$validate=function(){if(!isNumber(ctrl.$modelValue)||!isNaN(ctrl.$modelValue)){var<sp/>viewValue=ctrl.$$lastCommittedViewValue,modelValue=ctrl.$$rawModelValue,prevValid=ctrl.$valid,prevModelValue=ctrl.$modelValue,allowInvalid=ctrl.$options&amp;&amp;ctrl.$options.allowInvalid;ctrl.$$runValidators(modelValue,viewValue,function(allValid){allowInvalid||prevValid===allValid||(ctrl.$modelValue=allValid?modelValue:undefined,ctrl.$modelValue!==prevModelValue&amp;&amp;ctrl.$$writeModelToScope())})}},this.$$runValidators=function(modelValue,viewValue,doneCallback){function<sp/>processParseErrors(){var<sp/>errorKey=ctrl.$$parserName||&quot;</highlight><highlight class="normal">parse</highlight><highlight class="stringliteral">&quot;;return<sp/>parserValid!==undefined?(parserValid||(forEach(ctrl.$validators,function(v,name){setValidity(name,null)}),forEach(ctrl.$asyncValidators,function(v,name){setValidity(name,null)})),setValidity(errorKey,parserValid),parserValid):(setValidity(errorKey,null),!0)}function<sp/>processSyncValidators(){var<sp/>syncValidatorsValid=!0;return<sp/>forEach(ctrl.$validators,function(validator,name){var<sp/>result=validator(modelValue,viewValue);syncValidatorsValid=syncValidatorsValid&amp;&amp;result,setValidity(name,result)}),syncValidatorsValid?!0:(forEach(ctrl.$asyncValidators,function(v,name){setValidity(name,null)}),!1)}function<sp/>processAsyncValidators(){var<sp/>validatorPromises=[],allValid=!0;forEach(ctrl.$asyncValidators,function(validator,name){var<sp/>promise=validator(modelValue,viewValue);if(!isPromiseLike(promise))throw<sp/>$ngModelMinErr(&quot;</highlight><highlight class="normal">$asyncValidators</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Expected<sp/>asynchronous<sp/>validator<sp/>to<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>promise<sp/>but<sp/>got<sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal"><sp/>instead.</highlight><highlight class="stringliteral">&quot;,promise);setValidity(name,undefined),validatorPromises.push(promise.then(function(){setValidity(name,!0)},function(error){allValid=!1,setValidity(name,!1)}))}),validatorPromises.length?$q.all(validatorPromises).then(function(){validationDone(allValid)},noop):validationDone(!0)}function<sp/>setValidity(name,isValid){localValidationRunId===currentValidationRunId&amp;&amp;ctrl.$setValidity(name,isValid)}function<sp/>validationDone(allValid){localValidationRunId===currentValidationRunId&amp;&amp;doneCallback(allValid)}currentValidationRunId++;var<sp/>localValidationRunId=currentValidationRunId;return<sp/>processParseErrors()&amp;&amp;processSyncValidators()?void<sp/>processAsyncValidators():void<sp/>validationDone(!1)},this.$commitViewValue=function(){var<sp/>viewValue=ctrl.$viewValue;$timeout.cancel(pendingDebounce),(ctrl.$$lastCommittedViewValue!==viewValue||&quot;</highlight><highlight class="stringliteral">&quot;===viewValue&amp;&amp;ctrl.$$hasNativeValidators)&amp;&amp;(ctrl.$$lastCommittedViewValue=viewValue,ctrl.$pristine&amp;&amp;this.$setDirty(),this.$$parseAndValidate())},this.$$parseAndValidate=function(){function<sp/>writeToModelIfNeeded(){ctrl.$modelValue!==prevModelValue&amp;&amp;ctrl.$$writeModelToScope()}var<sp/>viewValue=ctrl.$$lastCommittedViewValue,modelValue=viewValue;if(parserValid=isUndefined(modelValue)?undefined:!0)for(var<sp/>i=0;i&lt;ctrl.$parsers.length;i++)if(modelValue=ctrl.$parsers[i](modelValue),isUndefined(modelValue)){parserValid=!1;break}isNumber(ctrl.$modelValue)&amp;&amp;isNaN(ctrl.$modelValue)&amp;&amp;(ctrl.$modelValue=ngModelGet($scope));var<sp/>prevModelValue=ctrl.$modelValue,allowInvalid=ctrl.$options&amp;&amp;ctrl.$options.allowInvalid;ctrl.$$rawModelValue=modelValue,allowInvalid&amp;&amp;(ctrl.$modelValue=modelValue,writeToModelIfNeeded()),ctrl.$$runValidators(modelValue,ctrl.$$lastCommittedViewValue,function(allValid){allowInvalid||(ctrl.$modelValue=allValid?modelValue:undefined,writeToModelIfNeeded())})},this.$$writeModelToScope=function(){ngModelSet($scope,ctrl.$modelValue),forEach(ctrl.$viewChangeListeners,function(listener){try{listener()}catch(e){$exceptionHandler(e)}})},this.$setViewValue=function(value,trigger){ctrl.$viewValue=value,(!ctrl.$options||ctrl.$options.updateOnDefault)&amp;&amp;ctrl.$$debounceViewValueCommit(trigger)},this.$$debounceViewValueCommit=function(trigger){var<sp/>debounce,debounceDelay=0,options=ctrl.$options;options&amp;&amp;isDefined(options.debounce)&amp;&amp;(debounce=options.debounce,isNumber(debounce)?debounceDelay=debounce:isNumber(debounce[trigger])?debounceDelay=debounce[trigger]:isNumber(debounce[&quot;</highlight><highlight class="normal">default</highlight><highlight class="stringliteral">&quot;])&amp;&amp;(debounceDelay=debounce[&quot;</highlight><highlight class="keywordflow">default</highlight><highlight class="stringliteral">&quot;])),$timeout.cancel(pendingDebounce),debounceDelay?pendingDebounce=$timeout(function(){ctrl.$commitViewValue()},debounceDelay):$rootScope.$$phase?ctrl.$commitViewValue():$scope.$apply(function(){ctrl.$commitViewValue()})},$scope.$watch(function(){var<sp/>modelValue=ngModelGet($scope);if(modelValue!==ctrl.$modelValue&amp;&amp;(ctrl.$modelValue===ctrl.$modelValue||modelValue===modelValue)){ctrl.$modelValue=ctrl.$$rawModelValue=modelValue,parserValid=undefined;for(var<sp/>formatters=ctrl.$formatters,idx=formatters.length,viewValue=modelValue;idx--;)viewValue=formatters[idx](viewValue);ctrl.$viewValue!==viewValue&amp;&amp;(ctrl.$viewValue=ctrl.$$lastCommittedViewValue=viewValue,ctrl.$render(),ctrl.$$runValidators(modelValue,viewValue,noop))}return<sp/>modelValue})}],ngModelDirective=[&quot;</highlight><highlight class="normal">$rootScope</highlight><highlight class="stringliteral">&quot;,function($rootScope){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,require:[&quot;</highlight><highlight class="normal">ngModel</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">^?form</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">^?ngModelOptions</highlight><highlight class="stringliteral">&quot;],controller:NgModelController,priority:1,compile:function(element){return<sp/>element.addClass(PRISTINE_CLASS).addClass(UNTOUCHED_CLASS).addClass(VALID_CLASS),{pre:function(scope,element,attr,ctrls){var<sp/>modelCtrl=ctrls[0],formCtrl=ctrls[1]||nullFormCtrl;modelCtrl.$$setOptions(ctrls[2]&amp;&amp;ctrls[2].$options),formCtrl.$addControl(modelCtrl),attr.$observe(&quot;</highlight><highlight class="normal">name</highlight><highlight class="stringliteral">&quot;,function(newValue){modelCtrl.$name!==newValue&amp;&amp;formCtrl.$$renameControl(modelCtrl,newValue)}),scope.$on(&quot;</highlight><highlight class="normal">$destroy</highlight><highlight class="stringliteral">&quot;,function(){formCtrl.$removeControl(modelCtrl)})},post:function(scope,element,attr,ctrls){var<sp/>modelCtrl=ctrls[0];modelCtrl.$options&amp;&amp;modelCtrl.$options.updateOn&amp;&amp;element.on(modelCtrl.$options.updateOn,function(ev){modelCtrl.$$debounceViewValueCommit(ev&amp;&amp;ev.type)}),element.on(&quot;</highlight><highlight class="normal">blur</highlight><highlight class="stringliteral">&quot;,function(ev){modelCtrl.$touched||($rootScope.$$phase?scope.$evalAsync(modelCtrl.$setTouched):scope.$apply(modelCtrl.$setTouched))})}}}}}],DEFAULT_REGEXP=/(\s+|^)default(\s+|$)/,ngModelOptionsDirective=function(){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,controller:[&quot;</highlight><highlight class="normal">$scope</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$attrs</highlight><highlight class="stringliteral">&quot;,function($scope,$attrs){var<sp/>that=this;this.$options=copy($scope.$eval($attrs.ngModelOptions)),this.$options.updateOn!==undefined?(this.$options.updateOnDefault=!1,this.$options.updateOn=trim(this.$options.updateOn.replace(DEFAULT_REGEXP,function(){return<sp/>that.$options.updateOnDefault=!0,&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;}))):this.$options.updateOnDefault=!0}]}},ngNonBindableDirective=ngDirective({terminal:!0,priority:1e3}),ngOptionsMinErr=minErr(&quot;</highlight><highlight class="normal">ngOptions</highlight><highlight class="stringliteral">&quot;),NG_OPTIONS_REGEXP=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,ngOptionsDirective=[&quot;</highlight><highlight class="normal">$compile</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$parse</highlight><highlight class="stringliteral">&quot;,function($compile,$parse){function<sp/>parseOptionsExpression(optionsExp,selectElement,scope){function<sp/>Option(selectValue,viewValue,label,group,disabled){this.selectValue=selectValue,this.viewValue=viewValue,this.label=label,this.group=group,this.disabled=disabled}var<sp/>match=optionsExp.match(NG_OPTIONS_REGEXP);if(!match)throw<sp/>ngOptionsMinErr(&quot;</highlight><highlight class="normal">iexp</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Expected<sp/>expression<sp/>in<sp/>form<sp/>of<sp/></highlight><highlight class="stringliteral">&apos;_select_<sp/>(as<sp/>_label_)?<sp/>for<sp/>(_key_,)?_value_<sp/>in<sp/>_collection_&apos;</highlight><highlight class="normal"><sp/>but<sp/>got<sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal">.<sp/>Element:<sp/>{1}</highlight><highlight class="stringliteral">&quot;,optionsExp,startingTag(selectElement));var<sp/>valueName=match[5]||match[7],keyName=match[6],selectAs=/<sp/>as<sp/>/.test(match[0])&amp;&amp;match[1],trackBy=match[9],valueFn=$parse(match[2]?match[1]:valueName),selectAsFn=selectAs&amp;&amp;$parse(selectAs),viewValueFn=selectAsFn||valueFn,trackByFn=trackBy&amp;&amp;$parse(trackBy),getTrackByValueFn=trackBy?function(value,locals){return<sp/>trackByFn(scope,locals)}:function(value){return<sp/>hashKey(value)},getTrackByValue=function(value,key){return<sp/>getTrackByValueFn(value,getLocals(value,key))},displayFn=$parse(match[2]||match[1]),groupByFn=$parse(match[3]||&quot;</highlight><highlight class="stringliteral">&quot;),disableWhenFn=$parse(match[4]||&quot;</highlight><highlight class="stringliteral">&quot;),valuesFn=$parse(match[8]),locals={},getLocals=keyName?function(value,key){return<sp/>locals[keyName]=key,locals[valueName]=value,locals}:function(value){return<sp/>locals[valueName]=value,locals};return{trackBy:trackBy,getTrackByValue:getTrackByValue,getWatchables:$parse(valuesFn,function(values){var<sp/>watchedArray=[];return<sp/>values=values||[],Object.keys(values).forEach(function(key){var<sp/>locals=getLocals(values[key],key),selectValue=getTrackByValueFn(values[key],locals);if(watchedArray.push(selectValue),match[2]||match[1]){var<sp/>label=displayFn(scope,locals);watchedArray.push(label)}if(match[4]){var<sp/>disableWhen=disableWhenFn(scope,locals);watchedArray.push(disableWhen)}}),watchedArray}),getOptions:function(){var<sp/>optionValuesKeys,optionItems=[],selectValueMap={},optionValues=valuesFn(scope)||[];if(!keyName&amp;&amp;isArrayLike(optionValues))optionValuesKeys=optionValues;else{optionValuesKeys=[];for(var<sp/>itemKey<sp/>in<sp/>optionValues)optionValues.hasOwnProperty(itemKey)&amp;&amp;&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;!==itemKey.charAt(0)&amp;&amp;optionValuesKeys.push(itemKey)}for(var<sp/>optionValuesLength=optionValuesKeys.length,index=0;optionValuesLength&gt;index;index++){var<sp/>key=optionValues===optionValuesKeys?index:optionValuesKeys[index],value=optionValues[key],locals=getLocals(value,key),viewValue=viewValueFn(scope,locals),selectValue=getTrackByValueFn(viewValue,locals),label=displayFn(scope,locals),group=groupByFn(scope,locals),disabled=disableWhenFn(scope,locals),optionItem=new<sp/>Option(selectValue,viewValue,label,group,disabled);optionItems.push(optionItem),selectValueMap[selectValue]=optionItem}return{items:optionItems,selectValueMap:selectValueMap,getOptionFromViewValue:function(value){return<sp/>selectValueMap[getTrackByValue(value)]},getViewValueFromOption:function(option){return<sp/>trackBy?angular.copy(option.viewValue):option.viewValue}}}}}var<sp/>optionTemplate=document.createElement(&quot;</highlight><highlight class="normal">option</highlight><highlight class="stringliteral">&quot;),optGroupTemplate=document.createElement(&quot;</highlight><highlight class="normal">optgroup</highlight><highlight class="stringliteral">&quot;);return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,terminal:!0,require:[&quot;</highlight><highlight class="normal">select</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">?ngModel</highlight><highlight class="stringliteral">&quot;],link:function(scope,selectElement,attr,ctrls){function<sp/>updateOptionElement(option,element){option.element=element,element.disabled=option.disabled,option.value!==element.value&amp;&amp;(element.value=option.selectValue),option.label!==element.label&amp;&amp;(element.label=option.label,element.textContent=option.label)}function<sp/>addOrReuseElement(parent,current,type,templateElement){var<sp/>element;return<sp/>current&amp;&amp;lowercase(current.nodeName)===type?element=current:(element=templateElement.cloneNode(!1),current?parent.insertBefore(element,current):parent.appendChild(element)),element}function<sp/>removeExcessElements(current){for(var<sp/>next;current;)next=current.nextSibling,jqLiteRemove(current),current=next}function<sp/>skipEmptyAndUnknownOptions(current){var<sp/>emptyOption_=emptyOption&amp;&amp;emptyOption[0],unknownOption_=unknownOption&amp;&amp;unknownOption[0];if(emptyOption_||unknownOption_)for(;current&amp;&amp;(current===emptyOption_||current===unknownOption_);)current=current.nextSibling;return<sp/>current}function<sp/>updateOptions(){var<sp/>previousValue=options&amp;&amp;selectCtrl.readValue();options=ngOptions.getOptions();var<sp/>groupMap={},currentElement=selectElement[0].firstChild;if(providedEmptyOption&amp;&amp;selectElement.prepend(emptyOption),currentElement=skipEmptyAndUnknownOptions(currentElement),options.items.forEach(function(option){var<sp/>group,groupElement,optionElement;option.group?(group=groupMap[option.group],group||(groupElement=addOrReuseElement(selectElement[0],currentElement,&quot;</highlight><highlight class="normal">optgroup</highlight><highlight class="stringliteral">&quot;,optGroupTemplate),currentElement=groupElement.nextSibling,groupElement.label=option.group,group=groupMap[option.group]={groupElement:groupElement,currentOptionElement:groupElement.firstChild}),optionElement=addOrReuseElement(group.groupElement,group.currentOptionElement,&quot;</highlight><highlight class="normal">option</highlight><highlight class="stringliteral">&quot;,optionTemplate),updateOptionElement(option,optionElement),group.currentOptionElement=optionElement.nextSibling):(optionElement=addOrReuseElement(selectElement[0],currentElement,&quot;</highlight><highlight class="normal">option</highlight><highlight class="stringliteral">&quot;,optionTemplate),updateOptionElement(option,optionElement),currentElement=optionElement.nextSibling)}),Object.keys(groupMap).forEach(function(key){removeExcessElements(groupMap[key].currentOptionElement)}),removeExcessElements(currentElement),ngModelCtrl.$render(),!ngModelCtrl.$isEmpty(previousValue)){var<sp/>nextValue=selectCtrl.readValue();(ngOptions.trackBy&amp;&amp;!equals(previousValue,nextValue)||previousValue!==nextValue)&amp;&amp;(ngModelCtrl.$setViewValue(nextValue),ngModelCtrl.$render())}}var<sp/>ngModelCtrl=ctrls[1];if(ngModelCtrl){for(var<sp/>emptyOption,selectCtrl=ctrls[0],multiple=attr.multiple,i=0,children=selectElement.children(),ii=children.length;ii&gt;i;i++)if(&quot;</highlight><highlight class="stringliteral">&quot;===children[i].value){emptyOption=children.eq(i);break}var<sp/>providedEmptyOption=!!emptyOption,unknownOption=jqLite(optionTemplate.cloneNode(!1));unknownOption.val(&quot;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;);var<sp/>options,ngOptions=parseOptionsExpression(attr.ngOptions,selectElement,scope),renderEmptyOption=function(){providedEmptyOption||selectElement.prepend(emptyOption),selectElement.val(&quot;</highlight><highlight class="stringliteral">&quot;),emptyOption.prop(&quot;</highlight><highlight class="normal">selected</highlight><highlight class="stringliteral">&quot;,!0),emptyOption.attr(&quot;</highlight><highlight class="normal">selected</highlight><highlight class="stringliteral">&quot;,!0)},removeEmptyOption=function(){providedEmptyOption||emptyOption.remove()},renderUnknownOption=function(){selectElement.prepend(unknownOption),selectElement.val(&quot;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;),unknownOption.prop(&quot;</highlight><highlight class="normal">selected</highlight><highlight class="stringliteral">&quot;,!0),unknownOption.attr(&quot;</highlight><highlight class="normal">selected</highlight><highlight class="stringliteral">&quot;,!0)},removeUnknownOption=function(){unknownOption.remove()};multiple?(ngModelCtrl.$isEmpty=function(value){return!value||0===value.length},selectCtrl.writeValue=function(value){options.items.forEach(function(option){option.element.selected=!1}),value&amp;&amp;value.forEach(function(item){var<sp/>option=options.getOptionFromViewValue(item);option&amp;&amp;!option.disabled&amp;&amp;(option.element.selected=!0)})},selectCtrl.readValue=function(){var<sp/>selectedValues=selectElement.val()||[],selections=[];return<sp/>forEach(selectedValues,function(value){var<sp/>option=options.selectValueMap[value];option.disabled||selections.push(options.getViewValueFromOption(option))}),selections},ngOptions.trackBy&amp;&amp;scope.$watchCollection(function(){return<sp/>isArray(ngModelCtrl.$viewValue)?ngModelCtrl.$viewValue.map(function(value){return<sp/>ngOptions.getTrackByValue(value)}):void<sp/>0},function(){ngModelCtrl.$render()})):(selectCtrl.writeValue=function(value){var<sp/>option=options.getOptionFromViewValue(value);option&amp;&amp;!option.disabled?selectElement[0].value!==option.selectValue&amp;&amp;(removeUnknownOption(),removeEmptyOption(),selectElement[0].value=option.selectValue,</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">option.element.selected=!0,option.element.setAttribute(&quot;</highlight><highlight class="normal">selected</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">selected</highlight><highlight class="stringliteral">&quot;)):null===value||providedEmptyOption?(removeUnknownOption(),renderEmptyOption()):(removeEmptyOption(),renderUnknownOption())},selectCtrl.readValue=function(){var<sp/>selectedOption=options.selectValueMap[selectElement.val()];return<sp/>selectedOption&amp;&amp;!selectedOption.disabled?(removeEmptyOption(),removeUnknownOption(),options.getViewValueFromOption(selectedOption)):null},ngOptions.trackBy&amp;&amp;scope.$watch(function(){return<sp/>ngOptions.getTrackByValue(ngModelCtrl.$viewValue)},function(){ngModelCtrl.$render()})),providedEmptyOption?(emptyOption.remove(),$compile(emptyOption)(scope),emptyOption.removeClass(&quot;</highlight><highlight class="normal">ng-scope</highlight><highlight class="stringliteral">&quot;)):emptyOption=jqLite(optionTemplate.cloneNode(!1)),updateOptions(),scope.$watchCollection(ngOptions.getWatchables,updateOptions)}}}}],ngPluralizeDirective=[&quot;</highlight><highlight class="normal">$locale</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$interpolate</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$log</highlight><highlight class="stringliteral">&quot;,function($locale,$interpolate,$log){var<sp/>BRACE=/{}/g,IS_WHEN=/^when(Minus)?(.+)$/;return{link:function(scope,element,attr){function<sp/>updateElementText(newText){element.text(newText||&quot;</highlight><highlight class="stringliteral">&quot;)}var<sp/>lastCount,numberExp=attr.count,whenExp=attr.$attr.when&amp;&amp;element.attr(attr.$attr.when),offset=attr.offset||0,whens=scope.$eval(whenExp)||{},whensExpFns={},startSymbol=$interpolate.startSymbol(),endSymbol=$interpolate.endSymbol(),braceReplacement=startSymbol+numberExp+&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;+offset+endSymbol,watchRemover=angular.noop;forEach(attr,function(expression,attributeName){var<sp/>tmpMatch=IS_WHEN.exec(attributeName);if(tmpMatch){var<sp/>whenKey=(tmpMatch[1]?&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="stringliteral">&quot;)+lowercase(tmpMatch[2]);whens[whenKey]=element.attr(attr.$attr[attributeName])}}),forEach(whens,function(expression,key){whensExpFns[key]=$interpolate(expression.replace(BRACE,braceReplacement))}),scope.$watch(numberExp,function(newVal){var<sp/>count=parseFloat(newVal),countIsNaN=isNaN(count);if(countIsNaN||count<sp/>in<sp/>whens||(count=$locale.pluralCat(count-offset)),count!==lastCount&amp;&amp;!(countIsNaN&amp;&amp;isNumber(lastCount)&amp;&amp;isNaN(lastCount))){watchRemover();var<sp/>whenExpFn=whensExpFns[count];isUndefined(whenExpFn)?(null!=newVal&amp;&amp;$log.debug(&quot;</highlight><highlight class="normal">ngPluralize:<sp/>no<sp/>rule<sp/>defined<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;&quot;+count+&quot;&apos;</highlight><highlight class="normal"><sp/>in<sp/></highlight><highlight class="stringliteral">&quot;+whenExp),watchRemover=noop,updateElementText()):watchRemover=scope.$watch(whenExpFn,updateElementText),lastCount=count}})}}}],ngRepeatDirective=[&quot;</highlight><highlight class="normal">$parse</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$animate</highlight><highlight class="stringliteral">&quot;,function($parse,$animate){var<sp/>NG_REMOVED=&quot;</highlight><highlight class="normal">$$NG_REMOVED</highlight><highlight class="stringliteral">&quot;,ngRepeatMinErr=minErr(&quot;</highlight><highlight class="normal">ngRepeat</highlight><highlight class="stringliteral">&quot;),updateScope=function(scope,index,valueIdentifier,value,keyIdentifier,key,arrayLength){scope[valueIdentifier]=value,keyIdentifier&amp;&amp;(scope[keyIdentifier]=key),scope.$index=index,scope.$first=0===index,scope.$last=index===arrayLength-1,scope.$middle=!(scope.$first||scope.$last),scope.$odd=!(scope.$even=0===(1&amp;index))},getBlockStart=function(block){return<sp/>block.clone[0]},getBlockEnd=function(block){return<sp/>block.clone[block.clone.length-1]};return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,multiElement:!0,transclude:&quot;</highlight><highlight class="normal">element</highlight><highlight class="stringliteral">&quot;,priority:1e3,terminal:!0,$$tlb:!0,compile:function($element,$attr){var<sp/>expression=$attr.ngRepeat,ngRepeatEndComment=document.createComment(&quot;</highlight><highlight class="normal"><sp/>end<sp/>ngRepeat:<sp/></highlight><highlight class="stringliteral">&quot;+expression+&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;),match=expression.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!match)throw<sp/>ngRepeatMinErr(&quot;</highlight><highlight class="normal">iexp</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Expected<sp/>expression<sp/>in<sp/>form<sp/>of<sp/></highlight><highlight class="stringliteral">&apos;_item_<sp/>in<sp/>_collection_[<sp/>track<sp/>by<sp/>_id_]&apos;</highlight><highlight class="normal"><sp/>but<sp/>got<sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;,expression);var<sp/>lhs=match[1],rhs=match[2],aliasAs=match[3],trackByExp=match[4];if(match=lhs.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/),!match)throw<sp/>ngRepeatMinErr(&quot;</highlight><highlight class="normal">iidexp</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="stringliteral">&apos;_item_&apos;</highlight><highlight class="normal"><sp/>in<sp/></highlight><highlight class="stringliteral">&apos;_item_<sp/>in<sp/>_collection_&apos;</highlight><highlight class="normal"><sp/>should<sp/>be<sp/>an<sp/>identifier<sp/>or<sp/></highlight><highlight class="stringliteral">&apos;(_key_,<sp/>_value_)&apos;</highlight><highlight class="normal"><sp/>expression,<sp/>but<sp/>got<sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;,lhs);var<sp/>valueIdentifier=match[3]||match[1],keyIdentifier=match[2];if(aliasAs&amp;&amp;(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(aliasAs)||/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(aliasAs)))throw<sp/>ngRepeatMinErr(&quot;</highlight><highlight class="normal">badident</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">alias<sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal"><sp/>is<sp/>invalid<sp/>---<sp/>must<sp/>be<sp/>a<sp/>valid<sp/>JS<sp/>identifier<sp/>which<sp/>is<sp/>not<sp/>a<sp/>reserved<sp/>name.</highlight><highlight class="stringliteral">&quot;,aliasAs);var<sp/>trackByExpGetter,trackByIdExpFn,trackByIdArrayFn,trackByIdObjFn,hashFnLocals={$id:hashKey};return<sp/>trackByExp?trackByExpGetter=$parse(trackByExp):(trackByIdArrayFn=function(key,value){return<sp/>hashKey(value)},trackByIdObjFn=function(key){return<sp/>key}),function($scope,$element,$attr,ctrl,$transclude){trackByExpGetter&amp;&amp;(trackByIdExpFn=function(key,value,index){return<sp/>keyIdentifier&amp;&amp;(hashFnLocals[keyIdentifier]=key),hashFnLocals[valueIdentifier]=value,hashFnLocals.$index=index,trackByExpGetter($scope,hashFnLocals)});var<sp/>lastBlockMap=createMap();$scope.$watchCollection(rhs,function(collection){var<sp/>index,length,nextNode,collectionLength,key,value,trackById,trackByIdFn,collectionKeys,block,nextBlockOrder,elementsToRemove,previousNode=$element[0],nextBlockMap=createMap();if(aliasAs&amp;&amp;($scope[aliasAs]=collection),isArrayLike(collection))collectionKeys=collection,trackByIdFn=trackByIdExpFn||trackByIdArrayFn;else{trackByIdFn=trackByIdExpFn||trackByIdObjFn,collectionKeys=[];for(var<sp/>itemKey<sp/>in<sp/>collection)collection.hasOwnProperty(itemKey)&amp;&amp;&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;!==itemKey.charAt(0)&amp;&amp;collectionKeys.push(itemKey)}for(collectionLength=collectionKeys.length,nextBlockOrder=new<sp/>Array(collectionLength),index=0;collectionLength&gt;index;index++)if(key=collection===collectionKeys?index:collectionKeys[index],value=collection[key],trackById=trackByIdFn(key,value,index),lastBlockMap[trackById])block=lastBlockMap[trackById],delete<sp/>lastBlockMap[trackById],nextBlockMap[trackById]=block,nextBlockOrder[index]=block;else{if(nextBlockMap[trackById])throw<sp/>forEach(nextBlockOrder,function(block){block&amp;&amp;block.scope&amp;&amp;(lastBlockMap[block.id]=block)}),ngRepeatMinErr(&quot;</highlight><highlight class="normal">dupes</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Duplicates<sp/>in<sp/>a<sp/>repeater<sp/>are<sp/>not<sp/>allowed.<sp/>Use<sp/></highlight><highlight class="stringliteral">&apos;track<sp/>by&apos;</highlight><highlight class="normal"><sp/>expression<sp/>to<sp/>specify<sp/>unique<sp/>keys.<sp/>Repeater:<sp/>{0},<sp/>Duplicate<sp/>key:<sp/>{1},<sp/>Duplicate<sp/>value:<sp/>{2}</highlight><highlight class="stringliteral">&quot;,expression,trackById,value);nextBlockOrder[index]={id:trackById,scope:undefined,clone:undefined},nextBlockMap[trackById]=!0}for(var<sp/>blockKey<sp/>in<sp/>lastBlockMap){if(block=lastBlockMap[blockKey],elementsToRemove=getBlockNodes(block.clone),$animate.leave(elementsToRemove),elementsToRemove[0].parentNode)for(index=0,length=elementsToRemove.length;length&gt;index;index++)elementsToRemove[index][NG_REMOVED]=!0;block.scope.$destroy()}for(index=0;collectionLength&gt;index;index++)if(key=collection===collectionKeys?index:collectionKeys[index],value=collection[key],block=nextBlockOrder[index],block.scope){nextNode=previousNode;do<sp/>nextNode=nextNode.nextSibling;while(nextNode&amp;&amp;nextNode[NG_REMOVED]);getBlockStart(block)!=nextNode&amp;&amp;$animate.move(getBlockNodes(block.clone),null,jqLite(previousNode)),previousNode=getBlockEnd(block),updateScope(block.scope,index,valueIdentifier,value,keyIdentifier,key,collectionLength)}else<sp/>$transclude(function(clone,scope){block.scope=scope;var<sp/>endNode=ngRepeatEndComment.cloneNode(!1);clone[clone.length++]=endNode,$animate.enter(clone,null,jqLite(previousNode)),previousNode=endNode,block.clone=clone,nextBlockMap[block.id]=block,updateScope(block.scope,index,valueIdentifier,value,keyIdentifier,key,collectionLength)});lastBlockMap=nextBlockMap})}}}}],NG_HIDE_CLASS=&quot;</highlight><highlight class="normal">ng-hide</highlight><highlight class="stringliteral">&quot;,NG_HIDE_IN_PROGRESS_CLASS=&quot;</highlight><highlight class="normal">ng-hide-animate</highlight><highlight class="stringliteral">&quot;,ngShowDirective=[&quot;</highlight><highlight class="normal">$animate</highlight><highlight class="stringliteral">&quot;,function($animate){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,multiElement:!0,link:function(scope,element,attr){scope.$watch(attr.ngShow,function(value){$animate[value?&quot;</highlight><highlight class="normal">removeClass</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">addClass</highlight><highlight class="stringliteral">&quot;](element,NG_HIDE_CLASS,{tempClasses:NG_HIDE_IN_PROGRESS_CLASS})})}}}],ngHideDirective=[&quot;</highlight><highlight class="normal">$animate</highlight><highlight class="stringliteral">&quot;,function($animate){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,multiElement:!0,link:function(scope,element,attr){scope.$watch(attr.ngHide,function(value){$animate[value?&quot;</highlight><highlight class="normal">addClass</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">removeClass</highlight><highlight class="stringliteral">&quot;](element,NG_HIDE_CLASS,{tempClasses:NG_HIDE_IN_PROGRESS_CLASS})})}}}],ngStyleDirective=ngDirective(function(scope,element,attr){scope.$watch(attr.ngStyle,function(newStyles,oldStyles){oldStyles&amp;&amp;newStyles!==oldStyles&amp;&amp;forEach(oldStyles,function(val,style){element.css(style,&quot;</highlight><highlight class="stringliteral">&quot;)}),newStyles&amp;&amp;element.css(newStyles)},!0)}),ngSwitchDirective=[&quot;</highlight><highlight class="normal">$animate</highlight><highlight class="stringliteral">&quot;,function($animate){return{require:&quot;</highlight><highlight class="normal">ngSwitch</highlight><highlight class="stringliteral">&quot;,controller:[&quot;</highlight><highlight class="normal">$scope</highlight><highlight class="stringliteral">&quot;,function(){this.cases={}}],link:function(scope,element,attr,ngSwitchController){var<sp/>watchExpr=attr.ngSwitch||attr.on,selectedTranscludes=[],selectedElements=[],previousLeaveAnimations=[],selectedScopes=[],spliceFactory=function(array,index){return<sp/>function(){array.splice(index,1)}};scope.$watch(watchExpr,function(value){var<sp/>i,ii;for(i=0,ii=previousLeaveAnimations.length;ii&gt;i;++i)$animate.cancel(previousLeaveAnimations[i]);for(previousLeaveAnimations.length=0,i=0,ii=selectedScopes.length;ii&gt;i;++i){var<sp/>selected=getBlockNodes(selectedElements[i].clone);selectedScopes[i].$destroy();var<sp/>promise=previousLeaveAnimations[i]=$animate.leave(selected);promise.then(spliceFactory(previousLeaveAnimations,i))}selectedElements.length=0,selectedScopes.length=0,(selectedTranscludes=ngSwitchController.cases[&quot;</highlight><highlight class="normal">!</highlight><highlight class="stringliteral">&quot;+value]||ngSwitchController.cases[&quot;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;])&amp;&amp;forEach(selectedTranscludes,function(selectedTransclude){selectedTransclude.transclude(function(caseElement,selectedScope){selectedScopes.push(selectedScope);var<sp/>anchor=selectedTransclude.element;caseElement[caseElement.length++]=document.createComment(&quot;</highlight><highlight class="normal"><sp/>end<sp/>ngSwitchWhen:<sp/></highlight><highlight class="stringliteral">&quot;);var<sp/>block={clone:caseElement};selectedElements.push(block),$animate.enter(caseElement,anchor.parent(),anchor)})})})}}}],ngSwitchWhenDirective=ngDirective({transclude:&quot;</highlight><highlight class="normal">element</highlight><highlight class="stringliteral">&quot;,priority:1200,require:&quot;</highlight><highlight class="normal">^ngSwitch</highlight><highlight class="stringliteral">&quot;,multiElement:!0,link:function(scope,element,attrs,ctrl,$transclude){ctrl.cases[&quot;</highlight><highlight class="normal">!</highlight><highlight class="stringliteral">&quot;+attrs.ngSwitchWhen]=ctrl.cases[&quot;</highlight><highlight class="normal">!</highlight><highlight class="stringliteral">&quot;+attrs.ngSwitchWhen]||[],ctrl.cases[&quot;</highlight><highlight class="normal">!</highlight><highlight class="stringliteral">&quot;+attrs.ngSwitchWhen].push({transclude:$transclude,element:element})}}),ngSwitchDefaultDirective=ngDirective({transclude:&quot;</highlight><highlight class="normal">element</highlight><highlight class="stringliteral">&quot;,priority:1200,require:&quot;</highlight><highlight class="normal">^ngSwitch</highlight><highlight class="stringliteral">&quot;,multiElement:!0,link:function(scope,element,attr,ctrl,$transclude){ctrl.cases[&quot;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;]=ctrl.cases[&quot;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;]||[],ctrl.cases[&quot;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;].push({transclude:$transclude,element:element})}}),ngTranscludeDirective=ngDirective({restrict:&quot;</highlight><highlight class="normal">EAC</highlight><highlight class="stringliteral">&quot;,link:function($scope,$element,$attrs,controller,$transclude){if(!$transclude)throw<sp/>minErr(&quot;</highlight><highlight class="normal">ngTransclude</highlight><highlight class="stringliteral">&quot;)(&quot;</highlight><highlight class="normal">orphan</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Illegal<sp/>use<sp/>of<sp/>ngTransclude<sp/>directive<sp/>in<sp/>the<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">!<sp/>No<sp/>parent<sp/>directive<sp/>that<sp/>requires<sp/>a<sp/>transclusion<sp/>found.<sp/>Element:<sp/>{0}</highlight><highlight class="stringliteral">&quot;,startingTag($element));$transclude(function(clone){$element.empty(),$element.append(clone)})}}),scriptDirective=[&quot;</highlight><highlight class="normal">$templateCache</highlight><highlight class="stringliteral">&quot;,function($templateCache){return{restrict:&quot;</highlight><highlight class="normal">E</highlight><highlight class="stringliteral">&quot;,terminal:!0,compile:function(element,attr){if(&quot;</highlight><highlight class="normal">text/ng-</highlight><highlight class="keyword">template</highlight><highlight class="stringliteral">&quot;==attr.type){var<sp/>templateUrl=attr.id,text=element[0].text;$templateCache.put(templateUrl,text)}}}}],noopNgModelController={$setViewValue:noop,$render:noop},SelectController=[&quot;</highlight><highlight class="normal">$element</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$scope</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$attrs</highlight><highlight class="stringliteral">&quot;,function($element,$scope,$attrs){var<sp/>self=this,optionsMap=new<sp/>HashMap;self.ngModelCtrl=noopNgModelController,self.unknownOption=jqLite(document.createElement(&quot;</highlight><highlight class="normal">option</highlight><highlight class="stringliteral">&quot;)),self.renderUnknownOption=function(val){var<sp/>unknownVal=&quot;</highlight><highlight class="normal">?<sp/></highlight><highlight class="stringliteral">&quot;+hashKey(val)+&quot;</highlight><highlight class="normal"><sp/>?</highlight><highlight class="stringliteral">&quot;;self.unknownOption.val(unknownVal),$element.prepend(self.unknownOption),$element.val(unknownVal)},$scope.$on(&quot;</highlight><highlight class="normal">$destroy</highlight><highlight class="stringliteral">&quot;,function(){self.renderUnknownOption=noop}),self.removeUnknownOption=function(){self.unknownOption.parent()&amp;&amp;self.unknownOption.remove()},self.readValue=function(){return<sp/>self.removeUnknownOption(),$element.val()},self.writeValue=function(value){self.hasOption(value)?(self.removeUnknownOption(),$element.val(value),&quot;</highlight><highlight class="stringliteral">&quot;===value&amp;&amp;self.emptyOption.prop(&quot;</highlight><highlight class="normal">selected</highlight><highlight class="stringliteral">&quot;,!0)):null==value&amp;&amp;self.emptyOption?(self.removeUnknownOption(),$element.val(&quot;</highlight><highlight class="stringliteral">&quot;)):self.renderUnknownOption(value)},self.addOption=function(value,element){assertNotHasOwnProperty(value,&apos;&quot;</highlight><highlight class="normal">option<sp/>value</highlight><highlight class="stringliteral">&quot;&apos;),&quot;</highlight><highlight class="stringliteral">&quot;===value&amp;&amp;(self.emptyOption=element);var<sp/>count=optionsMap.get(value)||0;optionsMap.put(value,count+1)},self.removeOption=function(value){var<sp/>count=optionsMap.get(value);count&amp;&amp;(1===count?(optionsMap.remove(value),&quot;</highlight><highlight class="stringliteral">&quot;===value&amp;&amp;(self.emptyOption=undefined)):optionsMap.put(value,count-1))},self.hasOption=function(value){return!!optionsMap.get(value)}}],selectDirective=function(){return{restrict:&quot;</highlight><highlight class="normal">E</highlight><highlight class="stringliteral">&quot;,require:[&quot;</highlight><highlight class="normal">select</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">?ngModel</highlight><highlight class="stringliteral">&quot;],controller:SelectController,link:function(scope,element,attr,ctrls){var<sp/>ngModelCtrl=ctrls[1];if(ngModelCtrl){var<sp/>selectCtrl=ctrls[0];if(selectCtrl.ngModelCtrl=ngModelCtrl,ngModelCtrl.$render=function(){selectCtrl.writeValue(ngModelCtrl.$viewValue)},element.on(&quot;</highlight><highlight class="normal">change</highlight><highlight class="stringliteral">&quot;,function(){scope.$apply(function(){ngModelCtrl.$setViewValue(selectCtrl.readValue())})}),attr.multiple){selectCtrl.readValue=function(){var<sp/>array=[];return<sp/>forEach(element.find(&quot;</highlight><highlight class="normal">option</highlight><highlight class="stringliteral">&quot;),function(option){option.selected&amp;&amp;array.push(option.value)}),array},selectCtrl.writeValue=function(value){var<sp/>items=new<sp/>HashMap(value);forEach(element.find(&quot;</highlight><highlight class="normal">option</highlight><highlight class="stringliteral">&quot;),function(option){option.selected=isDefined(items.get(option.value))})};var<sp/>lastView,lastViewRef=NaN;scope.$watch(function(){lastViewRef!==ngModelCtrl.$viewValue||equals(lastView,ngModelCtrl.$viewValue)||(lastView=shallowCopy(ngModelCtrl.$viewValue),ngModelCtrl.$render()),lastViewRef=ngModelCtrl.$viewValue}),ngModelCtrl.$isEmpty=function(value){return!value||0===value.length}}}}}},optionDirective=[&quot;</highlight><highlight class="normal">$interpolate</highlight><highlight class="stringliteral">&quot;,function($interpolate){function<sp/>chromeHack(optionElement){optionElement[0].hasAttribute(&quot;</highlight><highlight class="normal">selected</highlight><highlight class="stringliteral">&quot;)&amp;&amp;(optionElement[0].selected=!0)}return{restrict:&quot;</highlight><highlight class="normal">E</highlight><highlight class="stringliteral">&quot;,priority:100,compile:function(element,attr){if(isUndefined(attr.value)){var<sp/>interpolateFn=$interpolate(element.text(),!0);interpolateFn||attr.$set(&quot;</highlight><highlight class="normal">value</highlight><highlight class="stringliteral">&quot;,element.text())}return<sp/>function(scope,element,attr){var<sp/>selectCtrlName=&quot;</highlight><highlight class="normal">$selectController</highlight><highlight class="stringliteral">&quot;,parent=element.parent(),selectCtrl=parent.data(selectCtrlName)||parent.parent().data(selectCtrlName);selectCtrl&amp;&amp;selectCtrl.ngModelCtrl&amp;&amp;(interpolateFn?scope.$watch(interpolateFn,function(newVal,oldVal){attr.$set(&quot;</highlight><highlight class="normal">value</highlight><highlight class="stringliteral">&quot;,newVal),oldVal!==newVal&amp;&amp;selectCtrl.removeOption(oldVal),selectCtrl.addOption(newVal,element),selectCtrl.ngModelCtrl.$render(),chromeHack(element)}):(selectCtrl.addOption(attr.value,element),selectCtrl.ngModelCtrl.$render(),chromeHack(element)),element.on(&quot;</highlight><highlight class="normal">$destroy</highlight><highlight class="stringliteral">&quot;,function(){selectCtrl.removeOption(attr.value),selectCtrl.ngModelCtrl.$render()}))}}}}],styleDirective=valueFn({restrict:&quot;</highlight><highlight class="normal">E</highlight><highlight class="stringliteral">&quot;,terminal:!1}),requiredDirective=function(){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,require:&quot;</highlight><highlight class="normal">?ngModel</highlight><highlight class="stringliteral">&quot;,link:function(scope,elm,attr,ctrl){ctrl&amp;&amp;(attr.required=!0,ctrl.$validators.required=function(modelValue,viewValue){return!attr.required||!ctrl.$isEmpty(viewValue)},attr.$observe(&quot;</highlight><highlight class="normal">required</highlight><highlight class="stringliteral">&quot;,function(){ctrl.$validate()}))}}},patternDirective=function(){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,require:&quot;</highlight><highlight class="normal">?ngModel</highlight><highlight class="stringliteral">&quot;,link:function(scope,elm,attr,ctrl){if(ctrl){var<sp/>regexp,patternExp=attr.ngPattern||attr.pattern;attr.$observe(&quot;</highlight><highlight class="normal">pattern</highlight><highlight class="stringliteral">&quot;,function(regex){if(isString(regex)&amp;&amp;regex.length&gt;0&amp;&amp;(regex=new<sp/>RegExp(&quot;</highlight><highlight class="normal">^</highlight><highlight class="stringliteral">&quot;+regex+&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;)),regex&amp;&amp;!regex.test)throw<sp/>minErr(&quot;</highlight><highlight class="normal">ngPattern</highlight><highlight class="stringliteral">&quot;)(&quot;</highlight><highlight class="normal">noregexp</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Expected<sp/>{0}<sp/>to<sp/>be<sp/>a<sp/>RegExp<sp/>but<sp/>was<sp/>{1}.<sp/>Element:<sp/>{2}</highlight><highlight class="stringliteral">&quot;,patternExp,regex,startingTag(elm));regexp=regex||undefined,ctrl.$validate()}),ctrl.$validators.pattern=function(value){return<sp/>ctrl.$isEmpty(value)||isUndefined(regexp)||regexp.test(value)}}}}},maxlengthDirective=function(){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,require:&quot;</highlight><highlight class="normal">?ngModel</highlight><highlight class="stringliteral">&quot;,link:function(scope,elm,attr,ctrl){if(ctrl){var<sp/>maxlength=-1;attr.$observe(&quot;</highlight><highlight class="normal">maxlength</highlight><highlight class="stringliteral">&quot;,function(value){var<sp/>intVal=toInt(value);maxlength=isNaN(intVal)?-1:intVal,ctrl.$validate()}),ctrl.$validators.maxlength=function(modelValue,viewValue){return<sp/>0&gt;maxlength||ctrl.$isEmpty(viewValue)||viewValue.length&lt;=maxlength}}}}},minlengthDirective=function(){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,require:&quot;</highlight><highlight class="normal">?ngModel</highlight><highlight class="stringliteral">&quot;,link:function(scope,elm,attr,ctrl){if(ctrl){var<sp/>minlength=0;attr.$observe(&quot;</highlight><highlight class="normal">minlength</highlight><highlight class="stringliteral">&quot;,function(value){minlength=toInt(value)||0,ctrl.$validate()}),ctrl.$validators.minlength=function(modelValue,viewValue){return<sp/>ctrl.$isEmpty(viewValue)||viewValue.length&gt;=minlength}}}}};return<sp/>window.angular.bootstrap?void<sp/>console.log(&quot;</highlight><highlight class="normal">WARNING:<sp/>Tried<sp/>to<sp/>load<sp/>angular<sp/>more<sp/>than<sp/>once.</highlight><highlight class="stringliteral">&quot;):(bindJQuery(),publishExternalAPI(angular),void<sp/>jqLite(document).ready(function(){angularInit(document,bootstrap)}))}(window,document),!window.angular.$$csp()&amp;&amp;window.angular.element(document).find(&quot;</highlight><highlight class="normal">head</highlight><highlight class="stringliteral">&quot;).prepend(&apos;&lt;style<sp/>type=&quot;</highlight><highlight class="normal">text/css</highlight><highlight class="stringliteral">&quot;&gt;@charset<sp/>&quot;</highlight><highlight class="normal">UTF-8</highlight><highlight class="stringliteral">&quot;;[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none<sp/>!important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}&lt;/style&gt;&apos;),&quot;</highlight><highlight class="normal">undefined</highlight><highlight class="stringliteral">&quot;==typeof<sp/>jQuery)throw<sp/>new<sp/>Error(&quot;</highlight><highlight class="normal">Bootstrap</highlight><highlight class="stringliteral">&apos;s<sp/>JavaScript<sp/>requires<sp/>jQuery&quot;);+function($){&quot;use<sp/>strict&quot;;var<sp/>version=$.fn.jquery.split(&quot;<sp/>&quot;)[0].split(&quot;.&quot;);if(version[0]&lt;2&amp;&amp;version[1]&lt;9||1==version[0]&amp;&amp;9==version[1]&amp;&amp;version[2]&lt;1)throw<sp/>new<sp/>Error(&quot;Bootstrap&apos;</highlight><highlight class="normal">s<sp/>JavaScript<sp/>requires<sp/>jQuery<sp/>version<sp/>1.9.1<sp/>or<sp/>higher</highlight><highlight class="stringliteral">&quot;)}(jQuery),+function($){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>transitionEnd(){var<sp/>el=document.createElement(&quot;</highlight><highlight class="normal">bootstrap</highlight><highlight class="stringliteral">&quot;),transEndEventNames={WebkitTransition:&quot;</highlight><highlight class="normal">webkitTransitionEnd</highlight><highlight class="stringliteral">&quot;,MozTransition:&quot;</highlight><highlight class="normal">transitionend</highlight><highlight class="stringliteral">&quot;,OTransition:&quot;</highlight><highlight class="normal">oTransitionEnd<sp/>otransitionend</highlight><highlight class="stringliteral">&quot;,transition:&quot;</highlight><highlight class="normal">transitionend</highlight><highlight class="stringliteral">&quot;};for(var<sp/>name<sp/>in<sp/>transEndEventNames)if(void<sp/>0!==el.style[name])return{end:transEndEventNames[name]};return!1}$.fn.emulateTransitionEnd=function(duration){var<sp/>called=!1,$el=this;$(this).one(&quot;</highlight><highlight class="normal">bsTransitionEnd</highlight><highlight class="stringliteral">&quot;,function(){called=!0});var<sp/>callback=function(){called||$($el).trigger($.support.transition.end)};return<sp/>setTimeout(callback,duration),this},$(function(){$.support.transition=transitionEnd(),$.support.transition&amp;&amp;($.event.special.bsTransitionEnd={bindType:$.support.transition.end,delegateType:$.support.transition.end,handle:function(e){return<sp/>$(e.target).is(this)?e.handleObj.handler.apply(this,arguments):void<sp/>0}})})}(jQuery),+function($){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>Plugin(option){return<sp/>this.each(function(){var<sp/>$this=$(this),data=$this.data(&quot;</highlight><highlight class="normal">bs.alert</highlight><highlight class="stringliteral">&quot;);data||$this.data(&quot;</highlight><highlight class="normal">bs.alert</highlight><highlight class="stringliteral">&quot;,data=new<sp/>Alert(this)),&quot;</highlight><highlight class="keywordtype">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;data[option].call($this)})}var<sp/>dismiss=&apos;[data-dismiss=&quot;</highlight><highlight class="normal">alert</highlight><highlight class="stringliteral">&quot;]&apos;,Alert=function(el){$(el).on(&quot;</highlight><highlight class="normal">click</highlight><highlight class="stringliteral">&quot;,dismiss,this.close)};Alert.VERSION=&quot;</highlight><highlight class="normal">3.3.4</highlight><highlight class="stringliteral">&quot;,Alert.TRANSITION_DURATION=150,Alert.prototype.close=function(e){function<sp/>removeElement(){$parent.detach().trigger(&quot;</highlight><highlight class="normal">closed.bs.alert</highlight><highlight class="stringliteral">&quot;).remove()}var<sp/>$this=$(this),selector=$this.attr(&quot;</highlight><highlight class="normal">data-target</highlight><highlight class="stringliteral">&quot;);selector||(selector=$this.attr(&quot;</highlight><highlight class="normal">href</highlight><highlight class="stringliteral">&quot;),selector=selector&amp;&amp;selector.replace(/.*(?=#[^\s]*$)/,&quot;</highlight><highlight class="stringliteral">&quot;));var<sp/>$parent=$(selector);e&amp;&amp;e.preventDefault(),$parent.length||($parent=$this.closest(&quot;</highlight><highlight class="normal">.alert</highlight><highlight class="stringliteral">&quot;)),$parent.trigger(e=$.Event(&quot;</highlight><highlight class="normal">close.bs.alert</highlight><highlight class="stringliteral">&quot;)),e.isDefaultPrevented()||($parent.removeClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;),$.support.transition&amp;&amp;$parent.hasClass(&quot;</highlight><highlight class="normal">fade</highlight><highlight class="stringliteral">&quot;)?$parent.one(&quot;</highlight><highlight class="normal">bsTransitionEnd</highlight><highlight class="stringliteral">&quot;,removeElement).emulateTransitionEnd(Alert.TRANSITION_DURATION):removeElement())};var<sp/>old=$.fn.alert;$.fn.alert=Plugin,$.fn.alert.Constructor=Alert,$.fn.alert.noConflict=function(){return<sp/>$.fn.alert=old,this},$(document).on(&quot;</highlight><highlight class="normal">click.bs.alert.data-api</highlight><highlight class="stringliteral">&quot;,dismiss,Alert.prototype.close)}(jQuery),+function($){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>Plugin(option){return<sp/>this.each(function(){var<sp/>$this=$(this),data=$this.data(&quot;</highlight><highlight class="normal">bs.button</highlight><highlight class="stringliteral">&quot;),options=&quot;</highlight><highlight class="keywordtype">object</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;option;data||$this.data(&quot;</highlight><highlight class="normal">bs.button</highlight><highlight class="stringliteral">&quot;,data=new<sp/>Button(this,options)),&quot;</highlight><highlight class="normal">toggle</highlight><highlight class="stringliteral">&quot;==option?data.toggle():option&amp;&amp;data.setState(option)})}var<sp/>Button=function(element,options){this.$element=$(element),this.options=$.extend({},Button.DEFAULTS,options),this.isLoading=!1};Button.VERSION=&quot;</highlight><highlight class="normal">3.3.4</highlight><highlight class="stringliteral">&quot;,Button.DEFAULTS={loadingText:&quot;</highlight><highlight class="normal">loading...</highlight><highlight class="stringliteral">&quot;},Button.prototype.setState=function(state){var<sp/>d=&quot;</highlight><highlight class="normal">disabled</highlight><highlight class="stringliteral">&quot;,$el=this.$element,val=$el.is(&quot;</highlight><highlight class="normal">input</highlight><highlight class="stringliteral">&quot;)?&quot;</highlight><highlight class="normal">val</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">html</highlight><highlight class="stringliteral">&quot;,data=$el.data();state+=&quot;</highlight><highlight class="normal">Text</highlight><highlight class="stringliteral">&quot;,null==data.resetText&amp;&amp;$el.data(&quot;</highlight><highlight class="normal">resetText</highlight><highlight class="stringliteral">&quot;,$el[val]()),setTimeout($.proxy(function(){$el[val](null==data[state]?this.options[state]:data[state]),&quot;</highlight><highlight class="normal">loadingText</highlight><highlight class="stringliteral">&quot;==state?(this.isLoading=!0,$el.addClass(d).attr(d,d)):this.isLoading&amp;&amp;(this.isLoading=!1,$el.removeClass(d).removeAttr(d))},this),0)},Button.prototype.toggle=function(){var<sp/>changed=!0,$parent=this.$element.closest(&apos;[data-toggle=&quot;</highlight><highlight class="normal">buttons</highlight><highlight class="stringliteral">&quot;]&apos;);if($parent.length){var<sp/>$input=this.$element.find(&quot;</highlight><highlight class="normal">input</highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal">radio</highlight><highlight class="stringliteral">&quot;==$input.prop(&quot;</highlight><highlight class="normal">type</highlight><highlight class="stringliteral">&quot;)&amp;&amp;($input.prop(&quot;</highlight><highlight class="normal">checked</highlight><highlight class="stringliteral">&quot;)&amp;&amp;this.$element.hasClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;)?changed=!1:$parent.find(&quot;</highlight><highlight class="normal">.active</highlight><highlight class="stringliteral">&quot;).removeClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;)),changed&amp;&amp;$input.prop(&quot;</highlight><highlight class="normal">checked</highlight><highlight class="stringliteral">&quot;,!this.$element.hasClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;)).trigger(&quot;</highlight><highlight class="normal">change</highlight><highlight class="stringliteral">&quot;)}else<sp/>this.$element.attr(&quot;</highlight><highlight class="normal">aria-pressed</highlight><highlight class="stringliteral">&quot;,!this.$element.hasClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;));changed&amp;&amp;this.$element.toggleClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;)};var<sp/>old=$.fn.button;$.fn.button=Plugin,$.fn.button.Constructor=Button,$.fn.button.noConflict=function(){return<sp/>$.fn.button=old,this},$(document).on(&quot;</highlight><highlight class="normal">click.bs.button.data-api</highlight><highlight class="stringliteral">&quot;,&apos;[data-toggle^=&quot;</highlight><highlight class="normal">button</highlight><highlight class="stringliteral">&quot;]&apos;,function(e){var<sp/>$btn=$(e.target);$btn.hasClass(&quot;</highlight><highlight class="normal">btn</highlight><highlight class="stringliteral">&quot;)||($btn=$btn.closest(&quot;</highlight><highlight class="normal">.btn</highlight><highlight class="stringliteral">&quot;)),Plugin.call($btn,&quot;</highlight><highlight class="normal">toggle</highlight><highlight class="stringliteral">&quot;),e.preventDefault()}).on(&quot;</highlight><highlight class="normal">focus.bs.button.data-api<sp/>blur.bs.button.data-api</highlight><highlight class="stringliteral">&quot;,&apos;[data-toggle^=&quot;</highlight><highlight class="normal">button</highlight><highlight class="stringliteral">&quot;]&apos;,function(e){$(e.target).closest(&quot;</highlight><highlight class="normal">.btn</highlight><highlight class="stringliteral">&quot;).toggleClass(&quot;</highlight><highlight class="normal">focus</highlight><highlight class="stringliteral">&quot;,/^focus(in)?$/.test(e.type))})}(jQuery),+function($){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>Plugin(option){return<sp/>this.each(function(){var<sp/>$this=$(this),data=$this.data(&quot;</highlight><highlight class="normal">bs.carousel</highlight><highlight class="stringliteral">&quot;),options=$.extend({},Carousel.DEFAULTS,$this.data(),&quot;</highlight><highlight class="keywordtype">object</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;option),action=&quot;</highlight><highlight class="keywordtype">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option?option:options.slide;data||$this.data(&quot;</highlight><highlight class="normal">bs.carousel</highlight><highlight class="stringliteral">&quot;,data=new<sp/>Carousel(this,options)),&quot;</highlight><highlight class="normal">number</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option?data.to(option):action?data[action]():options.interval&amp;&amp;data.pause().cycle()})}var<sp/>Carousel=function(element,options){this.$element=$(element),this.$indicators=this.$element.find(&quot;</highlight><highlight class="normal">.carousel-indicators</highlight><highlight class="stringliteral">&quot;),this.options=options,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&amp;&amp;this.$element.on(&quot;</highlight><highlight class="normal">keydown.bs.carousel</highlight><highlight class="stringliteral">&quot;,$.proxy(this.keydown,this)),&quot;</highlight><highlight class="normal">hover</highlight><highlight class="stringliteral">&quot;==this.options.pause&amp;&amp;!(&quot;</highlight><highlight class="normal">ontouchstart</highlight><highlight class="stringliteral">&quot;in<sp/>document.documentElement)&amp;&amp;this.$element.on(&quot;</highlight><highlight class="normal">mouseenter.bs.carousel</highlight><highlight class="stringliteral">&quot;,$.proxy(this.pause,this)).on(&quot;</highlight><highlight class="normal">mouseleave.bs.carousel</highlight><highlight class="stringliteral">&quot;,$.proxy(this.cycle,this))};Carousel.VERSION=&quot;</highlight><highlight class="normal">3.3.4</highlight><highlight class="stringliteral">&quot;,Carousel.TRANSITION_DURATION=600,Carousel.DEFAULTS={interval:5e3,pause:&quot;</highlight><highlight class="normal">hover</highlight><highlight class="stringliteral">&quot;,wrap:!0,keyboard:!0},Carousel.prototype.keydown=function(e){if(!/input|textarea/i.test(e.target.tagName)){switch(e.which){case<sp/>37:this.prev();break;case<sp/>39:this.next();break;default:return}e.preventDefault()}},Carousel.prototype.cycle=function(e){return<sp/>e||(this.paused=!1),this.interval&amp;&amp;clearInterval(this.interval),this.options.interval&amp;&amp;!this.paused&amp;&amp;(this.interval=setInterval($.proxy(this.next,this),this.options.interval)),this},Carousel.prototype.getItemIndex=function(item){return<sp/>this.$items=item.parent().children(&quot;</highlight><highlight class="normal">.item</highlight><highlight class="stringliteral">&quot;),this.$items.index(item||this.$active)},Carousel.prototype.getItemForDirection=function(direction,active){var<sp/>activeIndex=this.getItemIndex(active),willWrap=&quot;</highlight><highlight class="normal">prev</highlight><highlight class="stringliteral">&quot;==direction&amp;&amp;0===activeIndex||&quot;</highlight><highlight class="normal">next</highlight><highlight class="stringliteral">&quot;==direction&amp;&amp;activeIndex==this.$items.length-1;if(willWrap&amp;&amp;!this.options.wrap)return<sp/>active;var<sp/>delta=&quot;</highlight><highlight class="normal">prev</highlight><highlight class="stringliteral">&quot;==direction?-1:1,itemIndex=(activeIndex+delta)%this.$items.length;return<sp/>this.$items.eq(itemIndex)},Carousel.prototype.to=function(pos){var<sp/>that=this,activeIndex=this.getItemIndex(this.$active=this.$element.find(&quot;</highlight><highlight class="normal">.item.active</highlight><highlight class="stringliteral">&quot;));return<sp/>pos&gt;this.$items.length-1||0&gt;pos?void<sp/>0:this.sliding?this.$element.one(&quot;</highlight><highlight class="normal">slid.bs.carousel</highlight><highlight class="stringliteral">&quot;,function(){that.to(pos)}):activeIndex==pos?this.pause().cycle():this.slide(pos&gt;activeIndex?&quot;</highlight><highlight class="normal">next</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">prev</highlight><highlight class="stringliteral">&quot;,this.$items.eq(pos))},Carousel.prototype.pause=function(e){return<sp/>e||(this.paused=!0),this.$element.find(&quot;</highlight><highlight class="normal">.next,<sp/>.prev</highlight><highlight class="stringliteral">&quot;).length&amp;&amp;$.support.transition&amp;&amp;(this.$element.trigger($.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},Carousel.prototype.next=function(){return<sp/>this.sliding?void<sp/>0:this.slide(&quot;</highlight><highlight class="normal">next</highlight><highlight class="stringliteral">&quot;)},Carousel.prototype.prev=function(){return<sp/>this.sliding?void<sp/>0:this.slide(&quot;</highlight><highlight class="normal">prev</highlight><highlight class="stringliteral">&quot;)},Carousel.prototype.slide=function(type,next){var<sp/>$active=this.$element.find(&quot;</highlight><highlight class="normal">.item.active</highlight><highlight class="stringliteral">&quot;),$next=next||this.getItemForDirection(type,$active),isCycling=this.interval,direction=&quot;</highlight><highlight class="normal">next</highlight><highlight class="stringliteral">&quot;==type?&quot;</highlight><highlight class="normal">left</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">right</highlight><highlight class="stringliteral">&quot;,that=this;if($next.hasClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;))return<sp/>this.sliding=!1;var<sp/>relatedTarget=$next[0],slideEvent=$.Event(&quot;</highlight><highlight class="normal">slide.bs.carousel</highlight><highlight class="stringliteral">&quot;,{relatedTarget:relatedTarget,direction:direction});if(this.$element.trigger(slideEvent),!slideEvent.isDefaultPrevented()){if(this.sliding=!0,isCycling&amp;&amp;this.pause(),this.$indicators.length){this.$indicators.find(&quot;</highlight><highlight class="normal">.active</highlight><highlight class="stringliteral">&quot;).removeClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;);var<sp/>$nextIndicator=$(this.$indicators.children()[this.getItemIndex($next)]);$nextIndicator&amp;&amp;$nextIndicator.addClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;)}var<sp/>slidEvent=$.Event(&quot;</highlight><highlight class="normal">slid.bs.carousel</highlight><highlight class="stringliteral">&quot;,{relatedTarget:relatedTarget,direction:direction});return<sp/>$.support.transition&amp;&amp;this.$element.hasClass(&quot;</highlight><highlight class="normal">slide</highlight><highlight class="stringliteral">&quot;)?($next.addClass(type),$next[0].offsetWidth,$active.addClass(direction),$next.addClass(direction),$active.one(&quot;</highlight><highlight class="normal">bsTransitionEnd</highlight><highlight class="stringliteral">&quot;,function(){$next.removeClass([type,direction].join(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;)).addClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;),$active.removeClass([&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;,direction].join(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;)),that.sliding=!1,setTimeout(function(){that.$element.trigger(slidEvent)},0)}).emulateTransitionEnd(Carousel.TRANSITION_DURATION)):($active.removeClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;),$next.addClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;),this.sliding=!1,this.$element.trigger(slidEvent)),isCycling&amp;&amp;this.cycle(),this}};var<sp/>old=$.fn.carousel;$.fn.carousel=Plugin,$.fn.carousel.Constructor=Carousel,$.fn.carousel.noConflict=function(){return<sp/>$.fn.carousel=old,this};var<sp/>clickHandler=function(e){var<sp/>href,$this=$(this),$target=$($this.attr(&quot;</highlight><highlight class="normal">data-target</highlight><highlight class="stringliteral">&quot;)||(href=$this.attr(&quot;</highlight><highlight class="normal">href</highlight><highlight class="stringliteral">&quot;))&amp;&amp;href.replace(/.*(?=#[^\s]+$)/,&quot;</highlight><highlight class="stringliteral">&quot;));if($target.hasClass(&quot;</highlight><highlight class="normal">carousel</highlight><highlight class="stringliteral">&quot;)){var<sp/>options=$.extend({},$target.data(),$this.data()),slideIndex=$this.attr(&quot;</highlight><highlight class="normal">data-slide-to</highlight><highlight class="stringliteral">&quot;);slideIndex&amp;&amp;(options.interval=!1),Plugin.call($target,options),slideIndex&amp;&amp;$target.data(&quot;</highlight><highlight class="normal">bs.carousel</highlight><highlight class="stringliteral">&quot;).to(slideIndex),e.preventDefault()}};$(document).on(&quot;</highlight><highlight class="normal">click.bs.carousel.data-api</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">[data-slide]</highlight><highlight class="stringliteral">&quot;,clickHandler).on(&quot;</highlight><highlight class="normal">click.bs.carousel.data-api</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">[data-slide-to]</highlight><highlight class="stringliteral">&quot;,clickHandler),$(window).on(&quot;</highlight><highlight class="normal">load</highlight><highlight class="stringliteral">&quot;,function(){$(&apos;[data-ride=&quot;</highlight><highlight class="normal">carousel</highlight><highlight class="stringliteral">&quot;]&apos;).each(function(){var<sp/>$carousel=$(this);Plugin.call($carousel,$carousel.data())})})}(jQuery),+function($){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>getTargetFromTrigger($trigger){var<sp/>href,target=$trigger.attr(&quot;</highlight><highlight class="normal">data-target</highlight><highlight class="stringliteral">&quot;)||(href=$trigger.attr(&quot;</highlight><highlight class="normal">href</highlight><highlight class="stringliteral">&quot;))&amp;&amp;href.replace(/.*(?=#[^\s]+$)/,&quot;</highlight><highlight class="stringliteral">&quot;);return<sp/>$(target)}function<sp/>Plugin(option){return<sp/>this.each(function(){var<sp/>$this=$(this),data=$this.data(&quot;</highlight><highlight class="normal">bs.collapse</highlight><highlight class="stringliteral">&quot;),options=$.extend({},Collapse.DEFAULTS,$this.data(),&quot;</highlight><highlight class="keywordtype">object</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;option);!data&amp;&amp;options.toggle&amp;&amp;/show|hide/.test(option)&amp;&amp;(options.toggle=!1),data||$this.data(&quot;</highlight><highlight class="normal">bs.collapse</highlight><highlight class="stringliteral">&quot;,data=new<sp/>Collapse(this,options)),&quot;</highlight><highlight class="keywordtype">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;data[option]()})}var<sp/>Collapse=function(element,options){this.$element=$(element),this.options=$.extend({},Collapse.DEFAULTS,options),this.$trigger=$(&apos;[data-toggle=&quot;</highlight><highlight class="normal">collapse</highlight><highlight class="stringliteral">&quot;][href=&quot;</highlight><highlight class="normal">#</highlight><highlight class="stringliteral">&apos;+element.id+&apos;</highlight><highlight class="stringliteral">&quot;],[data-toggle=&quot;</highlight><highlight class="normal">collapse</highlight><highlight class="stringliteral">&quot;][data-target=&quot;</highlight><highlight class="normal">#</highlight><highlight class="stringliteral">&apos;+element.id+&apos;</highlight><highlight class="stringliteral">&quot;]&apos;),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&amp;&amp;this.toggle()};Collapse.VERSION=&quot;</highlight><highlight class="normal">3.3.4</highlight><highlight class="stringliteral">&quot;,Collapse.TRANSITION_DURATION=350,Collapse.DEFAULTS={toggle:!0},Collapse.prototype.dimension=function(){var<sp/>hasWidth=this.$element.hasClass(&quot;</highlight><highlight class="normal">width</highlight><highlight class="stringliteral">&quot;);return<sp/>hasWidth?&quot;</highlight><highlight class="normal">width</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">height</highlight><highlight class="stringliteral">&quot;},Collapse.prototype.show=function(){if(!this.transitioning&amp;&amp;!this.$element.hasClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;)){var<sp/>activesData,actives=this.$parent&amp;&amp;this.$parent.children(&quot;</highlight><highlight class="normal">.panel</highlight><highlight class="stringliteral">&quot;).children(&quot;</highlight><highlight class="normal">.in,<sp/>.collapsing</highlight><highlight class="stringliteral">&quot;);if(!(actives&amp;&amp;actives.length&amp;&amp;(activesData=actives.data(&quot;</highlight><highlight class="normal">bs.collapse</highlight><highlight class="stringliteral">&quot;),activesData&amp;&amp;activesData.transitioning))){var<sp/>startEvent=$.Event(&quot;</highlight><highlight class="normal">show.bs.collapse</highlight><highlight class="stringliteral">&quot;);if(this.$element.trigger(startEvent),!startEvent.isDefaultPrevented()){actives&amp;&amp;actives.length&amp;&amp;(Plugin.call(actives,&quot;</highlight><highlight class="normal">hide</highlight><highlight class="stringliteral">&quot;),activesData||actives.data(&quot;</highlight><highlight class="normal">bs.collapse</highlight><highlight class="stringliteral">&quot;,null));var<sp/>dimension=this.dimension();this.$element.removeClass(&quot;</highlight><highlight class="normal">collapse</highlight><highlight class="stringliteral">&quot;).addClass(&quot;</highlight><highlight class="normal">collapsing</highlight><highlight class="stringliteral">&quot;)[dimension](0).attr(&quot;</highlight><highlight class="normal">aria-expanded</highlight><highlight class="stringliteral">&quot;,!0),this.$trigger.removeClass(&quot;</highlight><highlight class="normal">collapsed</highlight><highlight class="stringliteral">&quot;).attr(&quot;</highlight><highlight class="normal">aria-expanded</highlight><highlight class="stringliteral">&quot;,!0),this.transitioning=1;var<sp/>complete=function(){this.$element.removeClass(&quot;</highlight><highlight class="normal">collapsing</highlight><highlight class="stringliteral">&quot;).addClass(&quot;</highlight><highlight class="normal">collapse<sp/>in</highlight><highlight class="stringliteral">&quot;)[dimension](&quot;</highlight><highlight class="stringliteral">&quot;),this.transitioning=0,this.$element.trigger(&quot;</highlight><highlight class="normal">shown.bs.collapse</highlight><highlight class="stringliteral">&quot;)};if(!$.support.transition)return<sp/>complete.call(this);var<sp/>scrollSize=$.camelCase([&quot;</highlight><highlight class="normal">scroll</highlight><highlight class="stringliteral">&quot;,dimension].join(&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;));this.$element.one(&quot;</highlight><highlight class="normal">bsTransitionEnd</highlight><highlight class="stringliteral">&quot;,$.proxy(complete,this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])}}}},Collapse.prototype.hide=function(){if(!this.transitioning&amp;&amp;this.$element.hasClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;)){var<sp/>startEvent=$.Event(&quot;</highlight><highlight class="normal">hide.bs.collapse</highlight><highlight class="stringliteral">&quot;);if(this.$element.trigger(startEvent),!startEvent.isDefaultPrevented()){var<sp/>dimension=this.dimension();this.$element[dimension](this.$element[dimension]())[0].offsetHeight,this.$element.addClass(&quot;</highlight><highlight class="normal">collapsing</highlight><highlight class="stringliteral">&quot;).removeClass(&quot;</highlight><highlight class="normal">collapse<sp/>in</highlight><highlight class="stringliteral">&quot;).attr(&quot;</highlight><highlight class="normal">aria-expanded</highlight><highlight class="stringliteral">&quot;,!1),this.$trigger.addClass(&quot;</highlight><highlight class="normal">collapsed</highlight><highlight class="stringliteral">&quot;).attr(&quot;</highlight><highlight class="normal">aria-expanded</highlight><highlight class="stringliteral">&quot;,!1),this.transitioning=1;var<sp/>complete=function(){this.transitioning=0,this.$element.removeClass(&quot;</highlight><highlight class="normal">collapsing</highlight><highlight class="stringliteral">&quot;).addClass(&quot;</highlight><highlight class="normal">collapse</highlight><highlight class="stringliteral">&quot;).trigger(&quot;</highlight><highlight class="normal">hidden.bs.collapse</highlight><highlight class="stringliteral">&quot;)};return<sp/>$.support.transition?void<sp/>this.$element[dimension](0).one(&quot;</highlight><highlight class="normal">bsTransitionEnd</highlight><highlight class="stringliteral">&quot;,$.proxy(complete,this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION):complete.call(this)}}},Collapse.prototype.toggle=function(){this[this.$element.hasClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;)?&quot;</highlight><highlight class="normal">hide</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">show</highlight><highlight class="stringliteral">&quot;]()},Collapse.prototype.getParent=function(){return<sp/>$(this.options.parent).find(&apos;[data-toggle=&quot;</highlight><highlight class="normal">collapse</highlight><highlight class="stringliteral">&quot;][data-parent=&quot;</highlight><highlight class="stringliteral">&apos;+this.options.parent+&apos;</highlight><highlight class="stringliteral">&quot;]&apos;).each($.proxy(function(i,element){var<sp/>$element=$(element);this.addAriaAndCollapsedClass(getTargetFromTrigger($element),$element)},this)).end()},Collapse.prototype.addAriaAndCollapsedClass=function($element,$trigger){var<sp/>isOpen=$element.hasClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;);$element.attr(&quot;</highlight><highlight class="normal">aria-expanded</highlight><highlight class="stringliteral">&quot;,isOpen),$trigger.toggleClass(&quot;</highlight><highlight class="normal">collapsed</highlight><highlight class="stringliteral">&quot;,!isOpen).attr(&quot;</highlight><highlight class="normal">aria-expanded</highlight><highlight class="stringliteral">&quot;,isOpen)};var<sp/>old=$.fn.collapse;$.fn.collapse=Plugin,$.fn.collapse.Constructor=Collapse,$.fn.collapse.noConflict=function(){return<sp/>$.fn.collapse=old,this},$(document).on(&quot;</highlight><highlight class="normal">click.bs.collapse.data-api</highlight><highlight class="stringliteral">&quot;,&apos;[data-toggle=&quot;</highlight><highlight class="normal">collapse</highlight><highlight class="stringliteral">&quot;]&apos;,function(e){var<sp/>$this=$(this);$this.attr(&quot;</highlight><highlight class="normal">data-target</highlight><highlight class="stringliteral">&quot;)||e.preventDefault();var<sp/>$target=getTargetFromTrigger($this),data=$target.data(&quot;</highlight><highlight class="normal">bs.collapse</highlight><highlight class="stringliteral">&quot;),option=data?&quot;</highlight><highlight class="normal">toggle</highlight><highlight class="stringliteral">&quot;:$this.data();Plugin.call($target,option)})}(jQuery),+function($){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>clearMenus(e){e&amp;&amp;3===e.which||($(backdrop).remove(),$(toggle).each(function(){var<sp/>$this=$(this),$parent=getParent($this),relatedTarget={relatedTarget:this};$parent.hasClass(&quot;</highlight><highlight class="normal">open</highlight><highlight class="stringliteral">&quot;)&amp;&amp;($parent.trigger(e=$.Event(&quot;</highlight><highlight class="normal">hide.bs.dropdown</highlight><highlight class="stringliteral">&quot;,relatedTarget)),e.isDefaultPrevented()||($this.attr(&quot;</highlight><highlight class="normal">aria-expanded</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="keyword">false</highlight><highlight class="stringliteral">&quot;),$parent.removeClass(&quot;</highlight><highlight class="normal">open</highlight><highlight class="stringliteral">&quot;).trigger(&quot;</highlight><highlight class="normal">hidden.bs.dropdown</highlight><highlight class="stringliteral">&quot;,relatedTarget)))}))}function<sp/>getParent($this){var<sp/>selector=$this.attr(&quot;</highlight><highlight class="normal">data-target</highlight><highlight class="stringliteral">&quot;);selector||(selector=$this.attr(&quot;</highlight><highlight class="normal">href</highlight><highlight class="stringliteral">&quot;),selector=selector&amp;&amp;/#[A-Za-z]/.test(selector)&amp;&amp;selector.replace(/.*(?=#[^\s]*$)/,&quot;</highlight><highlight class="stringliteral">&quot;));var<sp/>$parent=selector&amp;&amp;$(selector);return<sp/>$parent&amp;&amp;$parent.length?$parent:$this.parent()}function<sp/>Plugin(option){return<sp/>this.each(function(){var<sp/>$this=$(this),data=$this.data(&quot;</highlight><highlight class="normal">bs.dropdown</highlight><highlight class="stringliteral">&quot;);data||$this.data(&quot;</highlight><highlight class="normal">bs.dropdown</highlight><highlight class="stringliteral">&quot;,data=new<sp/>Dropdown(this)),&quot;</highlight><highlight class="keywordtype">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;data[option].call($this)})}var<sp/>backdrop=&quot;</highlight><highlight class="normal">.dropdown-backdrop</highlight><highlight class="stringliteral">&quot;,toggle=&apos;[data-toggle=&quot;</highlight><highlight class="normal">dropdown</highlight><highlight class="stringliteral">&quot;]&apos;,Dropdown=function(element){$(element).on(&quot;</highlight><highlight class="normal">click.bs.dropdown</highlight><highlight class="stringliteral">&quot;,this.toggle)};Dropdown.VERSION=&quot;</highlight><highlight class="normal">3.3.4</highlight><highlight class="stringliteral">&quot;,Dropdown.prototype.toggle=function(e){var<sp/>$this=$(this);if(!$this.is(&quot;</highlight><highlight class="normal">.disabled,<sp/>:disabled</highlight><highlight class="stringliteral">&quot;)){var<sp/>$parent=getParent($this),isActive=$parent.hasClass(&quot;</highlight><highlight class="normal">open</highlight><highlight class="stringliteral">&quot;);if(clearMenus(),!isActive){&quot;</highlight><highlight class="normal">ontouchstart</highlight><highlight class="stringliteral">&quot;in<sp/>document.documentElement&amp;&amp;!$parent.closest(&quot;</highlight><highlight class="normal">.navbar-nav</highlight><highlight class="stringliteral">&quot;).length&amp;&amp;$(&apos;&lt;div<sp/>class=&quot;</highlight><highlight class="normal">dropdown-backdrop</highlight><highlight class="stringliteral">&quot;/&gt;&apos;).insertAfter($(this)).on(&quot;</highlight><highlight class="normal">click</highlight><highlight class="stringliteral">&quot;,clearMenus);var<sp/>relatedTarget={relatedTarget:this};if($parent.trigger(e=$.Event(&quot;</highlight><highlight class="normal">show.bs.dropdown</highlight><highlight class="stringliteral">&quot;,relatedTarget)),e.isDefaultPrevented())return;$this.trigger(&quot;</highlight><highlight class="normal">focus</highlight><highlight class="stringliteral">&quot;).attr(&quot;</highlight><highlight class="normal">aria-expanded</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="keyword">true</highlight><highlight class="stringliteral">&quot;),$parent.toggleClass(&quot;</highlight><highlight class="normal">open</highlight><highlight class="stringliteral">&quot;).trigger(&quot;</highlight><highlight class="normal">shown.bs.dropdown</highlight><highlight class="stringliteral">&quot;,relatedTarget)}return!1}},Dropdown.prototype.keydown=function(e){if(/(38|40|27|32)/.test(e.which)&amp;&amp;!/input|textarea/i.test(e.target.tagName)){var<sp/>$this=$(this);if(e.preventDefault(),e.stopPropagation(),!$this.is(&quot;</highlight><highlight class="normal">.disabled,<sp/>:disabled</highlight><highlight class="stringliteral">&quot;)){var<sp/>$parent=getParent($this),isActive=$parent.hasClass(&quot;</highlight><highlight class="normal">open</highlight><highlight class="stringliteral">&quot;);if(!isActive&amp;&amp;27!=e.which||isActive&amp;&amp;27==e.which)return<sp/>27==e.which&amp;&amp;$parent.find(toggle).trigger(&quot;</highlight><highlight class="normal">focus</highlight><highlight class="stringliteral">&quot;),$this.trigger(&quot;</highlight><highlight class="normal">click</highlight><highlight class="stringliteral">&quot;);var<sp/>desc=&quot;</highlight><highlight class="normal"><sp/>li:not(.disabled):visible<sp/>a</highlight><highlight class="stringliteral">&quot;,$items=$parent.find(&apos;[role=&quot;</highlight><highlight class="normal">menu</highlight><highlight class="stringliteral">&quot;]&apos;+desc+&apos;,<sp/>[role=&quot;</highlight><highlight class="normal">listbox</highlight><highlight class="stringliteral">&quot;]&apos;+desc);if($items.length){var<sp/>index=$items.index(e.target);38==e.which&amp;&amp;index&gt;0&amp;&amp;index--,40==e.which&amp;&amp;index&lt;$items.length-1&amp;&amp;index++,~index||(index=0),$items.eq(index).trigger(&quot;</highlight><highlight class="normal">focus</highlight><highlight class="stringliteral">&quot;)}}}};var<sp/>old=$.fn.dropdown;$.fn.dropdown=Plugin,</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">$.fn.dropdown.Constructor=Dropdown,$.fn.dropdown.noConflict=function(){return<sp/>$.fn.dropdown=old,this},$(document).on(&quot;</highlight><highlight class="normal">click.bs.dropdown.data-api</highlight><highlight class="stringliteral">&quot;,clearMenus).on(&quot;</highlight><highlight class="normal">click.bs.dropdown.data-api</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">.dropdown<sp/>form</highlight><highlight class="stringliteral">&quot;,function(e){e.stopPropagation()}).on(&quot;</highlight><highlight class="normal">click.bs.dropdown.data-api</highlight><highlight class="stringliteral">&quot;,toggle,Dropdown.prototype.toggle).on(&quot;</highlight><highlight class="normal">keydown.bs.dropdown.data-api</highlight><highlight class="stringliteral">&quot;,toggle,Dropdown.prototype.keydown).on(&quot;</highlight><highlight class="normal">keydown.bs.dropdown.data-api</highlight><highlight class="stringliteral">&quot;,&apos;[role=&quot;</highlight><highlight class="normal">menu</highlight><highlight class="stringliteral">&quot;]&apos;,Dropdown.prototype.keydown).on(&quot;</highlight><highlight class="normal">keydown.bs.dropdown.data-api</highlight><highlight class="stringliteral">&quot;,&apos;[role=&quot;</highlight><highlight class="normal">listbox</highlight><highlight class="stringliteral">&quot;]&apos;,Dropdown.prototype.keydown)}(jQuery),+function($){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>Plugin(option,_relatedTarget){return<sp/>this.each(function(){var<sp/>$this=$(this),data=$this.data(&quot;</highlight><highlight class="normal">bs.modal</highlight><highlight class="stringliteral">&quot;),options=$.extend({},Modal.DEFAULTS,$this.data(),&quot;</highlight><highlight class="normal">object</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;option);data||$this.data(&quot;</highlight><highlight class="normal">bs.modal</highlight><highlight class="stringliteral">&quot;,data=new<sp/>Modal(this,options)),&quot;</highlight><highlight class="normal">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option?data[option](_relatedTarget):options.show&amp;&amp;data.show(_relatedTarget)})}var<sp/>Modal=function(element,options){this.options=options,this.$body=$(document.body),this.$element=$(element),this.$dialog=this.$element.find(&quot;</highlight><highlight class="normal">.modal-dialog</highlight><highlight class="stringliteral">&quot;),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&amp;&amp;this.$element.find(&quot;</highlight><highlight class="normal">.modal-content</highlight><highlight class="stringliteral">&quot;).load(this.options.remote,$.proxy(function(){this.$element.trigger(&quot;</highlight><highlight class="normal">loaded.bs.modal</highlight><highlight class="stringliteral">&quot;)},this))};Modal.VERSION=&quot;</highlight><highlight class="normal">3.3.4</highlight><highlight class="stringliteral">&quot;,Modal.TRANSITION_DURATION=300,Modal.BACKDROP_TRANSITION_DURATION=150,Modal.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},Modal.prototype.toggle=function(_relatedTarget){return<sp/>this.isShown?this.hide():this.show(_relatedTarget)},Modal.prototype.show=function(_relatedTarget){var<sp/>that=this,e=$.Event(&quot;</highlight><highlight class="normal">show.bs.modal</highlight><highlight class="stringliteral">&quot;,{relatedTarget:_relatedTarget});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass(&quot;</highlight><highlight class="normal">modal-open</highlight><highlight class="stringliteral">&quot;),this.escape(),this.resize(),this.$element.on(&quot;</highlight><highlight class="normal">click.dismiss.bs.modal</highlight><highlight class="stringliteral">&quot;,&apos;[data-dismiss=&quot;</highlight><highlight class="normal">modal</highlight><highlight class="stringliteral">&quot;]&apos;,$.proxy(this.hide,this)),this.$dialog.on(&quot;</highlight><highlight class="normal">mousedown.dismiss.bs.modal</highlight><highlight class="stringliteral">&quot;,function(){that.$element.one(&quot;</highlight><highlight class="normal">mouseup.dismiss.bs.modal</highlight><highlight class="stringliteral">&quot;,function(e){$(e.target).is(that.$element)&amp;&amp;(that.ignoreBackdropClick=!0)})}),this.backdrop(function(){var<sp/>transition=$.support.transition&amp;&amp;that.$element.hasClass(&quot;</highlight><highlight class="normal">fade</highlight><highlight class="stringliteral">&quot;);that.$element.parent().length||that.$element.appendTo(that.$body),that.$element.show().scrollTop(0),that.adjustDialog(),transition&amp;&amp;that.$element[0].offsetWidth,that.$element.addClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;).attr(&quot;</highlight><highlight class="normal">aria-hidden</highlight><highlight class="stringliteral">&quot;,!1),that.enforceFocus();var<sp/>e=$.Event(&quot;</highlight><highlight class="normal">shown.bs.modal</highlight><highlight class="stringliteral">&quot;,{relatedTarget:_relatedTarget});transition?that.$dialog.one(&quot;</highlight><highlight class="normal">bsTransitionEnd</highlight><highlight class="stringliteral">&quot;,function(){that.$element.trigger(&quot;</highlight><highlight class="normal">focus</highlight><highlight class="stringliteral">&quot;).trigger(e)}).emulateTransitionEnd(Modal.TRANSITION_DURATION):that.$element.trigger(&quot;</highlight><highlight class="normal">focus</highlight><highlight class="stringliteral">&quot;).trigger(e)}))},Modal.prototype.hide=function(e){e&amp;&amp;e.preventDefault(),e=$.Event(&quot;</highlight><highlight class="normal">hide.bs.modal</highlight><highlight class="stringliteral">&quot;),this.$element.trigger(e),this.isShown&amp;&amp;!e.isDefaultPrevented()&amp;&amp;(this.isShown=!1,this.escape(),this.resize(),$(document).off(&quot;</highlight><highlight class="normal">focusin.bs.modal</highlight><highlight class="stringliteral">&quot;),this.$element.removeClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;).attr(&quot;</highlight><highlight class="normal">aria-hidden</highlight><highlight class="stringliteral">&quot;,!0).off(&quot;</highlight><highlight class="normal">click.dismiss.bs.modal</highlight><highlight class="stringliteral">&quot;).off(&quot;</highlight><highlight class="normal">mouseup.dismiss.bs.modal</highlight><highlight class="stringliteral">&quot;),this.$dialog.off(&quot;</highlight><highlight class="normal">mousedown.dismiss.bs.modal</highlight><highlight class="stringliteral">&quot;),$.support.transition&amp;&amp;this.$element.hasClass(&quot;</highlight><highlight class="normal">fade</highlight><highlight class="stringliteral">&quot;)?this.$element.one(&quot;</highlight><highlight class="normal">bsTransitionEnd</highlight><highlight class="stringliteral">&quot;,$.proxy(this.hideModal,this)).emulateTransitionEnd(Modal.TRANSITION_DURATION):this.hideModal())},Modal.prototype.enforceFocus=function(){$(document).off(&quot;</highlight><highlight class="normal">focusin.bs.modal</highlight><highlight class="stringliteral">&quot;).on(&quot;</highlight><highlight class="normal">focusin.bs.modal</highlight><highlight class="stringliteral">&quot;,$.proxy(function(e){this.$element[0]===e.target||this.$element.has(e.target).length||this.$element.trigger(&quot;</highlight><highlight class="normal">focus</highlight><highlight class="stringliteral">&quot;)},this))},Modal.prototype.escape=function(){this.isShown&amp;&amp;this.options.keyboard?this.$element.on(&quot;</highlight><highlight class="normal">keydown.dismiss.bs.modal</highlight><highlight class="stringliteral">&quot;,$.proxy(function(e){27==e.which&amp;&amp;this.hide()},this)):this.isShown||this.$element.off(&quot;</highlight><highlight class="normal">keydown.dismiss.bs.modal</highlight><highlight class="stringliteral">&quot;)},Modal.prototype.resize=function(){this.isShown?$(window).on(&quot;</highlight><highlight class="normal">resize.bs.modal</highlight><highlight class="stringliteral">&quot;,$.proxy(this.handleUpdate,this)):$(window).off(&quot;</highlight><highlight class="normal">resize.bs.modal</highlight><highlight class="stringliteral">&quot;)},Modal.prototype.hideModal=function(){var<sp/>that=this;this.$element.hide(),this.backdrop(function(){that.$body.removeClass(&quot;</highlight><highlight class="normal">modal-open</highlight><highlight class="stringliteral">&quot;),that.resetAdjustments(),that.resetScrollbar(),that.$element.trigger(&quot;</highlight><highlight class="normal">hidden.bs.modal</highlight><highlight class="stringliteral">&quot;)})},Modal.prototype.removeBackdrop=function(){this.$backdrop&amp;&amp;this.$backdrop.remove(),this.$backdrop=null},Modal.prototype.backdrop=function(callback){var<sp/>that=this,animate=this.$element.hasClass(&quot;</highlight><highlight class="normal">fade</highlight><highlight class="stringliteral">&quot;)?&quot;</highlight><highlight class="normal">fade</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="stringliteral">&quot;;if(this.isShown&amp;&amp;this.options.backdrop){var<sp/>doAnimate=$.support.transition&amp;&amp;animate;if(this.$backdrop=$(&apos;&lt;div<sp/>class=&quot;</highlight><highlight class="normal">modal-backdrop<sp/></highlight><highlight class="stringliteral">&apos;+animate+&apos;</highlight><highlight class="stringliteral">&quot;<sp/>/&gt;&apos;).appendTo(this.$body),this.$element.on(&quot;</highlight><highlight class="normal">click.dismiss.bs.modal</highlight><highlight class="stringliteral">&quot;,$.proxy(function(e){return<sp/>this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(e.target===e.currentTarget&amp;&amp;(&quot;</highlight><highlight class="normal">static</highlight><highlight class="stringliteral">&quot;==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),doAnimate&amp;&amp;this.$backdrop[0].offsetWidth,this.$backdrop.addClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;),!callback)return;doAnimate?this.$backdrop.one(&quot;</highlight><highlight class="normal">bsTransitionEnd</highlight><highlight class="stringliteral">&quot;,callback).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION):callback()}else<sp/>if(!this.isShown&amp;&amp;this.$backdrop){this.$backdrop.removeClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;);var<sp/>callbackRemove=function(){that.removeBackdrop(),callback&amp;&amp;callback()};$.support.transition&amp;&amp;this.$element.hasClass(&quot;</highlight><highlight class="normal">fade</highlight><highlight class="stringliteral">&quot;)?this.$backdrop.one(&quot;</highlight><highlight class="normal">bsTransitionEnd</highlight><highlight class="stringliteral">&quot;,callbackRemove).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION):callbackRemove()}else<sp/>callback&amp;&amp;callback()},Modal.prototype.handleUpdate=function(){this.adjustDialog()},Modal.prototype.adjustDialog=function(){var<sp/>modalIsOverflowing=this.$element[0].scrollHeight&gt;document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&amp;&amp;modalIsOverflowing?this.scrollbarWidth:&quot;</highlight><highlight class="stringliteral">&quot;,paddingRight:this.bodyIsOverflowing&amp;&amp;!modalIsOverflowing?this.scrollbarWidth:&quot;</highlight><highlight class="stringliteral">&quot;})},Modal.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:&quot;</highlight><highlight class="stringliteral">&quot;,paddingRight:&quot;</highlight><highlight class="stringliteral">&quot;})},Modal.prototype.checkScrollbar=function(){var<sp/>fullWindowWidth=window.innerWidth;if(!fullWindowWidth){var<sp/>documentElementRect=document.documentElement.getBoundingClientRect();fullWindowWidth=documentElementRect.right-Math.abs(documentElementRect.left)}this.bodyIsOverflowing=document.body.clientWidth&lt;fullWindowWidth,this.scrollbarWidth=this.measureScrollbar()},Modal.prototype.setScrollbar=function(){var<sp/>bodyPad=parseInt(this.$body.css(&quot;</highlight><highlight class="normal">padding-right</highlight><highlight class="stringliteral">&quot;)||0,10);this.originalBodyPad=document.body.style.paddingRight||&quot;</highlight><highlight class="stringliteral">&quot;,this.bodyIsOverflowing&amp;&amp;this.$body.css(&quot;</highlight><highlight class="normal">padding-right</highlight><highlight class="stringliteral">&quot;,bodyPad+this.scrollbarWidth)},Modal.prototype.resetScrollbar=function(){this.$body.css(&quot;</highlight><highlight class="normal">padding-right</highlight><highlight class="stringliteral">&quot;,this.originalBodyPad)},Modal.prototype.measureScrollbar=function(){var<sp/>scrollDiv=document.createElement(&quot;</highlight><highlight class="normal">div</highlight><highlight class="stringliteral">&quot;);scrollDiv.className=&quot;</highlight><highlight class="normal">modal-scrollbar-measure</highlight><highlight class="stringliteral">&quot;,this.$body.append(scrollDiv);var<sp/>scrollbarWidth=scrollDiv.offsetWidth-scrollDiv.clientWidth;return<sp/>this.$body[0].removeChild(scrollDiv),scrollbarWidth};var<sp/>old=$.fn.modal;$.fn.modal=Plugin,$.fn.modal.Constructor=Modal,$.fn.modal.noConflict=function(){return<sp/>$.fn.modal=old,this},$(document).on(&quot;</highlight><highlight class="normal">click.bs.modal.data-api</highlight><highlight class="stringliteral">&quot;,&apos;[data-toggle=&quot;</highlight><highlight class="normal">modal</highlight><highlight class="stringliteral">&quot;]&apos;,function(e){var<sp/>$this=$(this),href=$this.attr(&quot;</highlight><highlight class="normal">href</highlight><highlight class="stringliteral">&quot;),$target=$($this.attr(&quot;</highlight><highlight class="normal">data-target</highlight><highlight class="stringliteral">&quot;)||href&amp;&amp;href.replace(/.*(?=#[^\s]+$)/,&quot;</highlight><highlight class="stringliteral">&quot;)),option=$target.data(&quot;</highlight><highlight class="normal">bs.modal</highlight><highlight class="stringliteral">&quot;)?&quot;</highlight><highlight class="normal">toggle</highlight><highlight class="stringliteral">&quot;:$.extend({remote:!/#/.test(href)&amp;&amp;href},$target.data(),$this.data());$this.is(&quot;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&quot;)&amp;&amp;e.preventDefault(),$target.one(&quot;</highlight><highlight class="normal">show.bs.modal</highlight><highlight class="stringliteral">&quot;,function(showEvent){showEvent.isDefaultPrevented()||$target.one(&quot;</highlight><highlight class="normal">hidden.bs.modal</highlight><highlight class="stringliteral">&quot;,function(){$this.is(&quot;</highlight><highlight class="normal">:visible</highlight><highlight class="stringliteral">&quot;)&amp;&amp;$this.trigger(&quot;</highlight><highlight class="normal">focus</highlight><highlight class="stringliteral">&quot;)})}),Plugin.call($target,option,this)})}(jQuery),+function($){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>Plugin(option){return<sp/>this.each(function(){var<sp/>$this=$(this),data=$this.data(&quot;</highlight><highlight class="normal">bs.tooltip</highlight><highlight class="stringliteral">&quot;),options=&quot;</highlight><highlight class="normal">object</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;option;(data||!/destroy|hide/.test(option))&amp;&amp;(data||$this.data(&quot;</highlight><highlight class="normal">bs.tooltip</highlight><highlight class="stringliteral">&quot;,data=new<sp/>Tooltip(this,options)),&quot;</highlight><highlight class="normal">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;data[option]())})}var<sp/>Tooltip=function(element,options){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.init(&quot;</highlight><highlight class="normal">tooltip</highlight><highlight class="stringliteral">&quot;,element,options)};Tooltip.VERSION=&quot;</highlight><highlight class="normal">3.3.4</highlight><highlight class="stringliteral">&quot;,Tooltip.TRANSITION_DURATION=150,Tooltip.DEFAULTS={animation:!0,placement:&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;,selector:!1,template:&apos;&lt;div<sp/>class=&quot;</highlight><highlight class="normal">tooltip</highlight><highlight class="stringliteral">&quot;<sp/>role=&quot;</highlight><highlight class="normal">tooltip</highlight><highlight class="stringliteral">&quot;&gt;&lt;div<sp/>class=&quot;</highlight><highlight class="normal">tooltip-arrow</highlight><highlight class="stringliteral">&quot;&gt;&lt;/div&gt;&lt;div<sp/>class=&quot;</highlight><highlight class="normal">tooltip-inner</highlight><highlight class="stringliteral">&quot;&gt;&lt;/div&gt;&lt;/div&gt;&apos;,trigger:&quot;</highlight><highlight class="normal">hover<sp/>focus</highlight><highlight class="stringliteral">&quot;,title:&quot;</highlight><highlight class="stringliteral">&quot;,delay:0,html:!1,container:!1,viewport:{selector:&quot;</highlight><highlight class="normal">body</highlight><highlight class="stringliteral">&quot;,padding:0}},Tooltip.prototype.init=function(type,element,options){if(this.enabled=!0,this.type=type,this.$element=$(element),this.options=this.getOptions(options),this.$viewport=this.options.viewport&amp;&amp;$(this.options.viewport.selector||this.options.viewport),this.$element[0]instanceof<sp/>document.constructor&amp;&amp;!this.options.selector)throw<sp/>new<sp/>Error(&quot;</highlight><highlight class="normal">`selector`<sp/>option<sp/>must<sp/>be<sp/>specified<sp/>when<sp/>initializing<sp/></highlight><highlight class="stringliteral">&quot;+this.type+&quot;</highlight><highlight class="normal"><sp/>on<sp/>the<sp/>window.document<sp/>object!</highlight><highlight class="stringliteral">&quot;);for(var<sp/>triggers=this.options.trigger.split(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;),i=triggers.length;i--;){var<sp/>trigger=triggers[i];if(&quot;</highlight><highlight class="normal">click</highlight><highlight class="stringliteral">&quot;==trigger)this.$element.on(&quot;</highlight><highlight class="normal">click.</highlight><highlight class="stringliteral">&quot;+this.type,this.options.selector,$.proxy(this.toggle,this));else<sp/>if(&quot;</highlight><highlight class="normal">manual</highlight><highlight class="stringliteral">&quot;!=trigger){var<sp/>eventIn=&quot;</highlight><highlight class="normal">hover</highlight><highlight class="stringliteral">&quot;==trigger?&quot;</highlight><highlight class="normal">mouseenter</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">focusin</highlight><highlight class="stringliteral">&quot;,eventOut=&quot;</highlight><highlight class="normal">hover</highlight><highlight class="stringliteral">&quot;==trigger?&quot;</highlight><highlight class="normal">mouseleave</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">focusout</highlight><highlight class="stringliteral">&quot;;this.$element.on(eventIn+&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;+this.type,this.options.selector,$.proxy(this.enter,this)),this.$element.on(eventOut+&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;+this.type,this.options.selector,$.proxy(this.leave,this))}}this.options.selector?this._options=$.extend({},this.options,{trigger:&quot;</highlight><highlight class="normal">manual</highlight><highlight class="stringliteral">&quot;,selector:&quot;</highlight><highlight class="stringliteral">&quot;}):this.fixTitle()},Tooltip.prototype.getDefaults=function(){return<sp/>Tooltip.DEFAULTS},Tooltip.prototype.getOptions=function(options){return<sp/>options=$.extend({},this.getDefaults(),this.$element.data(),options),options.delay&amp;&amp;&quot;</highlight><highlight class="normal">number</highlight><highlight class="stringliteral">&quot;==typeof<sp/>options.delay&amp;&amp;(options.delay={show:options.delay,hide:options.delay}),options},Tooltip.prototype.getDelegateOptions=function(){var<sp/>options={},defaults=this.getDefaults();return<sp/>this._options&amp;&amp;$.each(this._options,function(key,value){defaults[key]!=value&amp;&amp;(options[key]=value)}),options},Tooltip.prototype.enter=function(obj){var<sp/>self=obj<sp/>instanceof<sp/>this.constructor?obj:$(obj.currentTarget).data(&quot;</highlight><highlight class="normal">bs.</highlight><highlight class="stringliteral">&quot;+this.type);return<sp/>self&amp;&amp;self.$tip&amp;&amp;self.$tip.is(&quot;</highlight><highlight class="normal">:visible</highlight><highlight class="stringliteral">&quot;)?void(self.hoverState=&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;):(self||(self=new<sp/>this.constructor(obj.currentTarget,this.getDelegateOptions()),$(obj.currentTarget).data(&quot;</highlight><highlight class="normal">bs.</highlight><highlight class="stringliteral">&quot;+this.type,self)),clearTimeout(self.timeout),self.hoverState=&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;,self.options.delay&amp;&amp;self.options.delay.show?void(self.timeout=setTimeout(function(){&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;==self.hoverState&amp;&amp;self.show()},self.options.delay.show)):self.show())},Tooltip.prototype.leave=function(obj){var<sp/>self=obj<sp/>instanceof<sp/>this.constructor?obj:$(obj.currentTarget).data(&quot;</highlight><highlight class="normal">bs.</highlight><highlight class="stringliteral">&quot;+this.type);return<sp/>self||(self=new<sp/>this.constructor(obj.currentTarget,this.getDelegateOptions()),$(obj.currentTarget).data(&quot;</highlight><highlight class="normal">bs.</highlight><highlight class="stringliteral">&quot;+this.type,self)),clearTimeout(self.timeout),self.hoverState=&quot;</highlight><highlight class="normal">out</highlight><highlight class="stringliteral">&quot;,self.options.delay&amp;&amp;self.options.delay.hide?void(self.timeout=setTimeout(function(){&quot;</highlight><highlight class="normal">out</highlight><highlight class="stringliteral">&quot;==self.hoverState&amp;&amp;self.hide()},self.options.delay.hide)):self.hide()},Tooltip.prototype.show=function(){var<sp/>e=$.Event(&quot;</highlight><highlight class="normal">show.bs.</highlight><highlight class="stringliteral">&quot;+this.type);if(this.hasContent()&amp;&amp;this.enabled){this.$element.trigger(e);var<sp/>inDom=$.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(e.isDefaultPrevented()||!inDom)return;var<sp/>that=this,$tip=this.tip(),tipId=this.getUID(this.type);this.setContent(),$tip.attr(&quot;</highlight><highlight class="normal">id</highlight><highlight class="stringliteral">&quot;,tipId),this.$element.attr(&quot;</highlight><highlight class="normal">aria-describedby</highlight><highlight class="stringliteral">&quot;,tipId),this.options.animation&amp;&amp;$tip.addClass(&quot;</highlight><highlight class="normal">fade</highlight><highlight class="stringliteral">&quot;);var<sp/>placement=&quot;</highlight><highlight class="normal">function</highlight><highlight class="stringliteral">&quot;==typeof<sp/>this.options.placement?this.options.placement.call(this,$tip[0],this.$element[0]):this.options.placement,autoToken=/\s?auto?\s?/i,autoPlace=autoToken.test(placement);autoPlace&amp;&amp;(placement=placement.replace(autoToken,&quot;</highlight><highlight class="stringliteral">&quot;)||&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;),$tip.detach().css({top:0,left:0,display:&quot;</highlight><highlight class="normal">block</highlight><highlight class="stringliteral">&quot;}).addClass(placement).data(&quot;</highlight><highlight class="normal">bs.</highlight><highlight class="stringliteral">&quot;+this.type,this),this.options.container?$tip.appendTo(this.options.container):$tip.insertAfter(this.$element);var<sp/>pos=this.getPosition(),actualWidth=$tip[0].offsetWidth,actualHeight=$tip[0].offsetHeight;if(autoPlace){var<sp/>orgPlacement=placement,$container=this.options.container?$(this.options.container):this.$element.parent(),containerDim=this.getPosition($container);placement=&quot;</highlight><highlight class="normal">bottom</highlight><highlight class="stringliteral">&quot;==placement&amp;&amp;pos.bottom+actualHeight&gt;containerDim.bottom?&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;==placement&amp;&amp;pos.top-actualHeight&lt;containerDim.top?&quot;</highlight><highlight class="normal">bottom</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">right</highlight><highlight class="stringliteral">&quot;==placement&amp;&amp;pos.right+actualWidth&gt;containerDim.width?&quot;</highlight><highlight class="normal">left</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">left</highlight><highlight class="stringliteral">&quot;==placement&amp;&amp;pos.left-actualWidth&lt;containerDim.left?&quot;</highlight><highlight class="normal">right</highlight><highlight class="stringliteral">&quot;:placement,$tip.removeClass(orgPlacement).addClass(placement)}var<sp/>calculatedOffset=this.getCalculatedOffset(placement,pos,actualWidth,actualHeight);this.applyPlacement(calculatedOffset,placement);var<sp/>complete=function(){var<sp/>prevHoverState=that.hoverState;that.$element.trigger(&quot;</highlight><highlight class="normal">shown.bs.</highlight><highlight class="stringliteral">&quot;+that.type),that.hoverState=null,&quot;</highlight><highlight class="normal">out</highlight><highlight class="stringliteral">&quot;==prevHoverState&amp;&amp;that.leave(that)};$.support.transition&amp;&amp;this.$tip.hasClass(&quot;</highlight><highlight class="normal">fade</highlight><highlight class="stringliteral">&quot;)?$tip.one(&quot;</highlight><highlight class="normal">bsTransitionEnd</highlight><highlight class="stringliteral">&quot;,complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION):complete()}},Tooltip.prototype.applyPlacement=function(offset,placement){var<sp/>$tip=this.tip(),width=$tip[0].offsetWidth,height=$tip[0].offsetHeight,marginTop=parseInt($tip.css(&quot;</highlight><highlight class="normal">margin-top</highlight><highlight class="stringliteral">&quot;),10),marginLeft=parseInt($tip.css(&quot;</highlight><highlight class="normal">margin-left</highlight><highlight class="stringliteral">&quot;),10);isNaN(marginTop)&amp;&amp;(marginTop=0),isNaN(marginLeft)&amp;&amp;(marginLeft=0),offset.top=offset.top+marginTop,offset.left=offset.left+marginLeft,$.offset.setOffset($tip[0],$.extend({using:function(props){$tip.css({top:Math.round(props.top),left:Math.round(props.left)})}},offset),0),$tip.addClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;);var<sp/>actualWidth=$tip[0].offsetWidth,actualHeight=$tip[0].offsetHeight;&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;==placement&amp;&amp;actualHeight!=height&amp;&amp;(offset.top=offset.top+height-actualHeight);var<sp/>delta=this.getViewportAdjustedDelta(placement,offset,actualWidth,actualHeight);delta.left?offset.left+=delta.left:offset.top+=delta.top;var<sp/>isVertical=/top|bottom/.test(placement),arrowDelta=isVertical?2*delta.left-width+actualWidth:2*delta.top-height+actualHeight,arrowOffsetPosition=isVertical?&quot;</highlight><highlight class="normal">offsetWidth</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">offsetHeight</highlight><highlight class="stringliteral">&quot;;$tip.offset(offset),this.replaceArrow(arrowDelta,$tip[0][arrowOffsetPosition],isVertical)},Tooltip.prototype.replaceArrow=function(delta,dimension,isVertical){this.arrow().css(isVertical?&quot;</highlight><highlight class="normal">left</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;,50*(1-delta/dimension)+&quot;</highlight><highlight class="normal">%</highlight><highlight class="stringliteral">&quot;).css(isVertical?&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">left</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="stringliteral">&quot;)},Tooltip.prototype.setContent=function(){var<sp/>$tip=this.tip(),title=this.getTitle();$tip.find(&quot;</highlight><highlight class="normal">.tooltip-inner</highlight><highlight class="stringliteral">&quot;)[this.options.html?&quot;</highlight><highlight class="normal">html</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">text</highlight><highlight class="stringliteral">&quot;](title),$tip.removeClass(&quot;</highlight><highlight class="normal">fade<sp/>in<sp/>top<sp/>bottom<sp/>left<sp/>right</highlight><highlight class="stringliteral">&quot;)},Tooltip.prototype.hide=function(callback){function<sp/>complete(){&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;!=that.hoverState&amp;&amp;$tip.detach(),that.$element.removeAttr(&quot;</highlight><highlight class="normal">aria-describedby</highlight><highlight class="stringliteral">&quot;).trigger(&quot;</highlight><highlight class="normal">hidden.bs.</highlight><highlight class="stringliteral">&quot;+that.type),callback&amp;&amp;callback()}var<sp/>that=this,$tip=$(this.$tip),e=$.Event(&quot;</highlight><highlight class="normal">hide.bs.</highlight><highlight class="stringliteral">&quot;+this.type);return<sp/>this.$element.trigger(e),e.isDefaultPrevented()?void<sp/>0:($tip.removeClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;),$.support.transition&amp;&amp;$tip.hasClass(&quot;</highlight><highlight class="normal">fade</highlight><highlight class="stringliteral">&quot;)?$tip.one(&quot;</highlight><highlight class="normal">bsTransitionEnd</highlight><highlight class="stringliteral">&quot;,complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION):complete(),this.hoverState=null,this)},Tooltip.prototype.fixTitle=function(){var<sp/>$e=this.$element;($e.attr(&quot;</highlight><highlight class="normal">title</highlight><highlight class="stringliteral">&quot;)||&quot;</highlight><highlight class="normal">string</highlight><highlight class="stringliteral">&quot;!=typeof<sp/>$e.attr(&quot;</highlight><highlight class="normal">data-original-title</highlight><highlight class="stringliteral">&quot;))&amp;&amp;$e.attr(&quot;</highlight><highlight class="normal">data-original-title</highlight><highlight class="stringliteral">&quot;,$e.attr(&quot;</highlight><highlight class="normal">title</highlight><highlight class="stringliteral">&quot;)||&quot;</highlight><highlight class="stringliteral">&quot;).attr(&quot;</highlight><highlight class="normal">title</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="stringliteral">&quot;)},Tooltip.prototype.hasContent=function(){return<sp/>this.getTitle()},Tooltip.prototype.getPosition=function($element){$element=$element||this.$element;var<sp/>el=$element[0],isBody=&quot;</highlight><highlight class="normal">BODY</highlight><highlight class="stringliteral">&quot;==el.tagName,elRect=el.getBoundingClientRect();null==elRect.width&amp;&amp;(elRect=$.extend({},elRect,{width:elRect.right-elRect.left,height:elRect.bottom-elRect.top}));var<sp/>elOffset=isBody?{top:0,left:0}:$element.offset(),scroll={scroll:isBody?document.documentElement.scrollTop||document.body.scrollTop:$element.scrollTop()},outerDims=isBody?{width:$(window).width(),height:$(window).height()}:null;return<sp/>$.extend({},elRect,scroll,outerDims,elOffset)},Tooltip.prototype.getCalculatedOffset=function(placement,pos,actualWidth,actualHeight){return&quot;</highlight><highlight class="normal">bottom</highlight><highlight class="stringliteral">&quot;==placement?{top:pos.top+pos.height,left:pos.left+pos.width/2-actualWidth/2}:&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;==placement?{top:pos.top-actualHeight,left:pos.left+pos.width/2-actualWidth/2}:&quot;</highlight><highlight class="normal">left</highlight><highlight class="stringliteral">&quot;==placement?{top:pos.top+pos.height/2-actualHeight/2,left:pos.left-actualWidth}:{top:pos.top+pos.height/2-actualHeight/2,left:pos.left+pos.width}},Tooltip.prototype.getViewportAdjustedDelta=function(placement,pos,actualWidth,actualHeight){var<sp/>delta={top:0,left:0};if(!this.$viewport)return<sp/>delta;var<sp/>viewportPadding=this.options.viewport&amp;&amp;this.options.viewport.padding||0,viewportDimensions=this.getPosition(this.$viewport);if(/right|left/.test(placement)){var<sp/>topEdgeOffset=pos.top-viewportPadding-viewportDimensions.scroll,bottomEdgeOffset=pos.top+viewportPadding-viewportDimensions.scroll+actualHeight;topEdgeOffset&lt;viewportDimensions.top?delta.top=viewportDimensions.top-topEdgeOffset:bottomEdgeOffset&gt;viewportDimensions.top+viewportDimensions.height&amp;&amp;(delta.top=viewportDimensions.top+viewportDimensions.height-bottomEdgeOffset)}else{var<sp/>leftEdgeOffset=pos.left-viewportPadding,rightEdgeOffset=pos.left+viewportPadding+actualWidth;leftEdgeOffset&lt;viewportDimensions.left?delta.left=viewportDimensions.left-leftEdgeOffset:rightEdgeOffset&gt;viewportDimensions.width&amp;&amp;(delta.left=viewportDimensions.left+viewportDimensions.width-rightEdgeOffset)}return<sp/>delta},Tooltip.prototype.getTitle=function(){var<sp/>title,$e=this.$element,o=this.options;return<sp/>title=$e.attr(&quot;</highlight><highlight class="normal">data-original-title</highlight><highlight class="stringliteral">&quot;)||(&quot;</highlight><highlight class="normal">function</highlight><highlight class="stringliteral">&quot;==typeof<sp/>o.title?o.title.call($e[0]):o.title)},Tooltip.prototype.getUID=function(prefix){do<sp/>prefix+=~~(1e6*Math.random());while(document.getElementById(prefix));return<sp/>prefix},Tooltip.prototype.tip=function(){return<sp/>this.$tip=this.$tip||$(this.options.template)},Tooltip.prototype.arrow=function(){return<sp/>this.$arrow=this.$arrow||this.tip().find(&quot;</highlight><highlight class="normal">.tooltip-arrow</highlight><highlight class="stringliteral">&quot;)},Tooltip.prototype.enable=function(){this.enabled=!0},Tooltip.prototype.disable=function(){this.enabled=!1},Tooltip.prototype.toggleEnabled=function(){this.enabled=!this.enabled},Tooltip.prototype.toggle=function(e){var<sp/>self=this;e&amp;&amp;(self=$(e.currentTarget).data(&quot;</highlight><highlight class="normal">bs.</highlight><highlight class="stringliteral">&quot;+this.type),self||(self=new<sp/>this.constructor(e.currentTarget,this.getDelegateOptions()),$(e.currentTarget).data(&quot;</highlight><highlight class="normal">bs.</highlight><highlight class="stringliteral">&quot;+this.type,self))),self.tip().hasClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;)?self.leave(self):self.enter(self)},Tooltip.prototype.destroy=function(){var<sp/>that=this;clearTimeout(this.timeout),this.hide(function(){that.$element.off(&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;+that.type).removeData(&quot;</highlight><highlight class="normal">bs.</highlight><highlight class="stringliteral">&quot;+that.type)})};var<sp/>old=$.fn.tooltip;$.fn.tooltip=Plugin,$.fn.tooltip.Constructor=Tooltip,$.fn.tooltip.noConflict=function(){return<sp/>$.fn.tooltip=old,this}}(jQuery),+function($){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>Plugin(option){return<sp/>this.each(function(){var<sp/>$this=$(this),data=$this.data(&quot;</highlight><highlight class="normal">bs.popover</highlight><highlight class="stringliteral">&quot;),options=&quot;</highlight><highlight class="normal">object</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;option;(data||!/destroy|hide/.test(option))&amp;&amp;(data||$this.data(&quot;</highlight><highlight class="normal">bs.popover</highlight><highlight class="stringliteral">&quot;,data=new<sp/>Popover(this,options)),&quot;</highlight><highlight class="normal">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;data[option]())})}var<sp/>Popover=function(element,options){this.init(&quot;</highlight><highlight class="normal">popover</highlight><highlight class="stringliteral">&quot;,element,options)};if(!$.fn.tooltip)throw<sp/>new<sp/>Error(&quot;</highlight><highlight class="normal">Popover<sp/>requires<sp/>tooltip.js</highlight><highlight class="stringliteral">&quot;);Popover.VERSION=&quot;</highlight><highlight class="normal">3.3.4</highlight><highlight class="stringliteral">&quot;,Popover.DEFAULTS=$.extend({},$.fn.tooltip.Constructor.DEFAULTS,{placement:&quot;</highlight><highlight class="normal">right</highlight><highlight class="stringliteral">&quot;,trigger:&quot;</highlight><highlight class="normal">click</highlight><highlight class="stringliteral">&quot;,content:&quot;</highlight><highlight class="stringliteral">&quot;,template:&apos;&lt;div<sp/>class=&quot;</highlight><highlight class="normal">popover</highlight><highlight class="stringliteral">&quot;<sp/>role=&quot;</highlight><highlight class="normal">tooltip</highlight><highlight class="stringliteral">&quot;&gt;&lt;div<sp/>class=&quot;</highlight><highlight class="normal">arrow</highlight><highlight class="stringliteral">&quot;&gt;&lt;/div&gt;&lt;h3<sp/>class=&quot;</highlight><highlight class="normal">popover-title</highlight><highlight class="stringliteral">&quot;&gt;&lt;/h3&gt;&lt;div<sp/>class=&quot;</highlight><highlight class="normal">popover-content</highlight><highlight class="stringliteral">&quot;&gt;&lt;/div&gt;&lt;/div&gt;&apos;}),Popover.prototype=$.extend({},$.fn.tooltip.Constructor.prototype),Popover.prototype.constructor=Popover,Popover.prototype.getDefaults=function(){return<sp/>Popover.DEFAULTS},Popover.prototype.setContent=function(){var<sp/>$tip=this.tip(),title=this.getTitle(),content=this.getContent();$tip.find(&quot;</highlight><highlight class="normal">.popover-title</highlight><highlight class="stringliteral">&quot;)[this.options.html?&quot;</highlight><highlight class="normal">html</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">text</highlight><highlight class="stringliteral">&quot;](title),$tip.find(&quot;</highlight><highlight class="normal">.popover-content</highlight><highlight class="stringliteral">&quot;).children().detach().end()[this.options.html?&quot;</highlight><highlight class="normal">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>content?&quot;</highlight><highlight class="normal">html</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">append</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">text</highlight><highlight class="stringliteral">&quot;](content),$tip.removeClass(&quot;</highlight><highlight class="normal">fade<sp/>top<sp/>bottom<sp/>left<sp/>right<sp/>in</highlight><highlight class="stringliteral">&quot;),$tip.find(&quot;</highlight><highlight class="normal">.popover-title</highlight><highlight class="stringliteral">&quot;).html()||$tip.find(&quot;</highlight><highlight class="normal">.popover-title</highlight><highlight class="stringliteral">&quot;).hide()},Popover.prototype.hasContent=function(){return<sp/>this.getTitle()||this.getContent()},Popover.prototype.getContent=function(){var<sp/>$e=this.$element,o=this.options;return<sp/>$e.attr(&quot;</highlight><highlight class="normal">data-content</highlight><highlight class="stringliteral">&quot;)||(&quot;</highlight><highlight class="normal">function</highlight><highlight class="stringliteral">&quot;==typeof<sp/>o.content?o.content.call($e[0]):o.content)},Popover.prototype.arrow=function(){return<sp/>this.$arrow=this.$arrow||this.tip().find(&quot;</highlight><highlight class="normal">.arrow</highlight><highlight class="stringliteral">&quot;)};var<sp/>old=$.fn.popover;$.fn.popover=Plugin,$.fn.popover.Constructor=Popover,$.fn.popover.noConflict=function(){return<sp/>$.fn.popover=old,this}}(jQuery),+function($){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>ScrollSpy(element,options){this.$body=$(document.body),this.$scrollElement=$($(element).is(document.body)?window:element),this.options=$.extend({},ScrollSpy.DEFAULTS,options),this.selector=(this.options.target||&quot;</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal"><sp/>.nav<sp/>li<sp/>&gt;<sp/>a</highlight><highlight class="stringliteral">&quot;,this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on(&quot;</highlight><highlight class="normal">scroll.bs.scrollspy</highlight><highlight class="stringliteral">&quot;,$.proxy(this.process,this)),this.refresh(),this.process()}function<sp/>Plugin(option){return<sp/>this.each(function(){var<sp/>$this=$(this),data=$this.data(&quot;</highlight><highlight class="normal">bs.scrollspy</highlight><highlight class="stringliteral">&quot;),options=&quot;</highlight><highlight class="normal">object</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;option;data||$this.data(&quot;</highlight><highlight class="normal">bs.scrollspy</highlight><highlight class="stringliteral">&quot;,data=new<sp/>ScrollSpy(this,options)),&quot;</highlight><highlight class="normal">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;data[option]()})}ScrollSpy.VERSION=&quot;</highlight><highlight class="normal">3.3.4</highlight><highlight class="stringliteral">&quot;,ScrollSpy.DEFAULTS={offset:10},ScrollSpy.prototype.getScrollHeight=function(){return<sp/>this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},ScrollSpy.prototype.refresh=function(){var<sp/>that=this,offsetMethod=&quot;</highlight><highlight class="normal">offset</highlight><highlight class="stringliteral">&quot;,offsetBase=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),$.isWindow(this.$scrollElement[0])||(offsetMethod=&quot;</highlight><highlight class="normal">position</highlight><highlight class="stringliteral">&quot;,offsetBase=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var<sp/>$el=$(this),href=$el.data(&quot;</highlight><highlight class="normal">target</highlight><highlight class="stringliteral">&quot;)||$el.attr(&quot;</highlight><highlight class="normal">href</highlight><highlight class="stringliteral">&quot;),$href=/^#./.test(href)&amp;&amp;$(href);return<sp/>$href&amp;&amp;$href.length&amp;&amp;$href.is(&quot;</highlight><highlight class="normal">:visible</highlight><highlight class="stringliteral">&quot;)&amp;&amp;[[$href[offsetMethod]().top+offsetBase,href]]||null}).sort(function(a,b){return<sp/>a[0]-b[0]}).each(function(){that.offsets.push(this[0]),that.targets.push(this[1])})},ScrollSpy.prototype.process=function(){var<sp/>i,scrollTop=this.$scrollElement.scrollTop()+this.options.offset,scrollHeight=this.getScrollHeight(),maxScroll=this.options.offset+scrollHeight-this.$scrollElement.height(),offsets=this.offsets,targets=this.targets,activeTarget=this.activeTarget;if(this.scrollHeight!=scrollHeight&amp;&amp;this.refresh(),scrollTop&gt;=maxScroll)return<sp/>activeTarget!=(i=targets[targets.length-1])&amp;&amp;this.activate(i);if(activeTarget&amp;&amp;scrollTop&lt;offsets[0])return<sp/>this.activeTarget=null,this.clear();for(i=offsets.length;i--;)activeTarget!=targets[i]&amp;&amp;scrollTop&gt;=offsets[i]&amp;&amp;(void<sp/>0===offsets[i+1]||scrollTop&lt;offsets[i+1])&amp;&amp;this.activate(targets[i])},ScrollSpy.prototype.activate=function(target){this.activeTarget=target,this.clear();var<sp/>selector=this.selector+&apos;[data-target=&quot;</highlight><highlight class="stringliteral">&apos;+target+&apos;</highlight><highlight class="stringliteral">&quot;],&apos;+this.selector+&apos;[href=&quot;</highlight><highlight class="stringliteral">&apos;+target+&apos;</highlight><highlight class="stringliteral">&quot;]&apos;,active=$(selector).parents(&quot;</highlight><highlight class="normal">li</highlight><highlight class="stringliteral">&quot;).addClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;);active.parent(&quot;</highlight><highlight class="normal">.dropdown-menu</highlight><highlight class="stringliteral">&quot;).length&amp;&amp;(active=active.closest(&quot;</highlight><highlight class="normal">li.dropdown</highlight><highlight class="stringliteral">&quot;).addClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;)),active.trigger(&quot;</highlight><highlight class="normal">activate.bs.scrollspy</highlight><highlight class="stringliteral">&quot;)},ScrollSpy.prototype.clear=function(){$(this.selector).parentsUntil(this.options.target,&quot;</highlight><highlight class="normal">.active</highlight><highlight class="stringliteral">&quot;).removeClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;)};var<sp/>old=$.fn.scrollspy;$.fn.scrollspy=Plugin,$.fn.scrollspy.Constructor=ScrollSpy,$.fn.scrollspy.noConflict=function(){return<sp/>$.fn.scrollspy=old,this},$(window).on(&quot;</highlight><highlight class="normal">load.bs.scrollspy.data-api</highlight><highlight class="stringliteral">&quot;,function(){$(&apos;[data-spy=&quot;</highlight><highlight class="normal">scroll</highlight><highlight class="stringliteral">&quot;]&apos;).each(function(){var<sp/>$spy=$(this);Plugin.call($spy,$spy.data())})})}(jQuery),+function($){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>Plugin(option){return<sp/>this.each(function(){var<sp/>$this=$(this),data=$this.data(&quot;</highlight><highlight class="normal">bs.tab</highlight><highlight class="stringliteral">&quot;);data||$this.data(&quot;</highlight><highlight class="normal">bs.tab</highlight><highlight class="stringliteral">&quot;,data=new<sp/>Tab(this)),&quot;</highlight><highlight class="normal">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;data[option]()})}var<sp/>Tab=function(element){this.element=$(element)};Tab.VERSION=&quot;</highlight><highlight class="normal">3.3.4</highlight><highlight class="stringliteral">&quot;,Tab.TRANSITION_DURATION=150,Tab.prototype.show=function(){var<sp/>$this=this.element,$ul=$this.closest(&quot;</highlight><highlight class="normal">ul:not(.dropdown-menu)</highlight><highlight class="stringliteral">&quot;),selector=$this.data(&quot;</highlight><highlight class="normal">target</highlight><highlight class="stringliteral">&quot;);if(selector||(selector=$this.attr(&quot;</highlight><highlight class="normal">href</highlight><highlight class="stringliteral">&quot;),selector=selector&amp;&amp;selector.replace(/.*(?=#[^\s]*$)/,&quot;</highlight><highlight class="stringliteral">&quot;)),!$this.parent(&quot;</highlight><highlight class="normal">li</highlight><highlight class="stringliteral">&quot;).hasClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;)){var<sp/>$previous=$ul.find(&quot;</highlight><highlight class="normal">.active:last<sp/>a</highlight><highlight class="stringliteral">&quot;),hideEvent=$.Event(&quot;</highlight><highlight class="normal">hide.bs.tab</highlight><highlight class="stringliteral">&quot;,{relatedTarget:$this[0]}),showEvent=$.Event(&quot;</highlight><highlight class="normal">show.bs.tab</highlight><highlight class="stringliteral">&quot;,{relatedTarget:$previous[0]});if($previous.trigger(hideEvent),$this.trigger(showEvent),!showEvent.isDefaultPrevented()&amp;&amp;!hideEvent.isDefaultPrevented()){var<sp/>$target=$(selector);this.activate($this.closest(&quot;</highlight><highlight class="normal">li</highlight><highlight class="stringliteral">&quot;),$ul),this.activate($target,$target.parent(),function(){$previous.trigger({type:&quot;</highlight><highlight class="normal">hidden.bs.tab</highlight><highlight class="stringliteral">&quot;,relatedTarget:$this[0]}),$this.trigger({type:&quot;</highlight><highlight class="normal">shown.bs.tab</highlight><highlight class="stringliteral">&quot;,relatedTarget:$previous[0]})})}}},Tab.prototype.activate=function(element,container,callback){function<sp/>next(){$active.removeClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;).find(&quot;</highlight><highlight class="normal">&gt;<sp/>.dropdown-menu<sp/>&gt;<sp/>.active</highlight><highlight class="stringliteral">&quot;).removeClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;).end().find(&apos;[data-toggle=&quot;</highlight><highlight class="normal">tab</highlight><highlight class="stringliteral">&quot;]&apos;).attr(&quot;</highlight><highlight class="normal">aria-expanded</highlight><highlight class="stringliteral">&quot;,!1),element.addClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;).find(&apos;[data-toggle=&quot;</highlight><highlight class="normal">tab</highlight><highlight class="stringliteral">&quot;]&apos;).attr(&quot;</highlight><highlight class="normal">aria-expanded</highlight><highlight class="stringliteral">&quot;,!0),transition?(element[0].offsetWidth,element.addClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;)):element.removeClass(&quot;</highlight><highlight class="normal">fade</highlight><highlight class="stringliteral">&quot;),element.parent(&quot;</highlight><highlight class="normal">.dropdown-menu</highlight><highlight class="stringliteral">&quot;).length&amp;&amp;element.closest(&quot;</highlight><highlight class="normal">li.dropdown</highlight><highlight class="stringliteral">&quot;).addClass(&quot;</highlight><highlight class="normal">active</highlight><highlight class="stringliteral">&quot;).end().find(&apos;[data-toggle=&quot;</highlight><highlight class="normal">tab</highlight><highlight class="stringliteral">&quot;]&apos;).attr(&quot;</highlight><highlight class="normal">aria-expanded</highlight><highlight class="stringliteral">&quot;,!0),callback&amp;&amp;callback()}var<sp/>$active=container.find(&quot;</highlight><highlight class="normal">&gt;<sp/>.active</highlight><highlight class="stringliteral">&quot;),transition=callback&amp;&amp;$.support.transition&amp;&amp;($active.length&amp;&amp;$active.hasClass(&quot;</highlight><highlight class="normal">fade</highlight><highlight class="stringliteral">&quot;)||!!container.find(&quot;</highlight><highlight class="normal">&gt;<sp/>.fade</highlight><highlight class="stringliteral">&quot;).length);$active.length&amp;&amp;transition?$active.one(&quot;</highlight><highlight class="normal">bsTransitionEnd</highlight><highlight class="stringliteral">&quot;,next).emulateTransitionEnd(Tab.TRANSITION_DURATION):next(),$active.removeClass(&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;)};var<sp/>old=$.fn.tab;$.fn.tab=Plugin,$.fn.tab.Constructor=Tab,$.fn.tab.noConflict=function(){return<sp/>$.fn.tab=old,this};var<sp/>clickHandler=function(e){e.preventDefault(),Plugin.call($(this),&quot;</highlight><highlight class="normal">show</highlight><highlight class="stringliteral">&quot;)};$(document).on(&quot;</highlight><highlight class="normal">click.bs.tab.data-api</highlight><highlight class="stringliteral">&quot;,&apos;[data-toggle=&quot;</highlight><highlight class="normal">tab</highlight><highlight class="stringliteral">&quot;]&apos;,clickHandler).on(&quot;</highlight><highlight class="normal">click.bs.tab.data-api</highlight><highlight class="stringliteral">&quot;,&apos;[data-toggle=&quot;</highlight><highlight class="normal">pill</highlight><highlight class="stringliteral">&quot;]&apos;,clickHandler)}(jQuery),+function($){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>Plugin(option){return<sp/>this.each(function(){var<sp/>$this=$(this),data=$this.data(&quot;</highlight><highlight class="normal">bs.affix</highlight><highlight class="stringliteral">&quot;),options=&quot;</highlight><highlight class="normal">object</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;option;data||$this.data(&quot;</highlight><highlight class="normal">bs.affix</highlight><highlight class="stringliteral">&quot;,data=new<sp/>Affix(this,options)),&quot;</highlight><highlight class="normal">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>option&amp;&amp;data[option]()})}var<sp/>Affix=function(element,options){this.options=$.extend({},Affix.DEFAULTS,options),this.$target=$(this.options.target).on(&quot;</highlight><highlight class="normal">scroll.bs.affix.data-api</highlight><highlight class="stringliteral">&quot;,$.proxy(this.checkPosition,this)).on(&quot;</highlight><highlight class="normal">click.bs.affix.data-api</highlight><highlight class="stringliteral">&quot;,$.proxy(this.checkPositionWithEventLoop,this)),this.$element=$(element),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};Affix.VERSION=&quot;</highlight><highlight class="normal">3.3.4</highlight><highlight class="stringliteral">&quot;,Affix.RESET=&quot;</highlight><highlight class="normal">affix<sp/>affix-top<sp/>affix-bottom</highlight><highlight class="stringliteral">&quot;,Affix.DEFAULTS={offset:0,target:window},Affix.prototype.getState=function(scrollHeight,height,offsetTop,offsetBottom){var<sp/>scrollTop=this.$target.scrollTop(),position=this.$element.offset(),targetHeight=this.$target.height();if(null!=offsetTop&amp;&amp;&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;==this.affixed)return<sp/>offsetTop&gt;scrollTop?&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;:!1;if(&quot;</highlight><highlight class="normal">bottom</highlight><highlight class="stringliteral">&quot;==this.affixed)return<sp/>null!=offsetTop?scrollTop+this.unpin&lt;=position.top?!1:&quot;</highlight><highlight class="normal">bottom</highlight><highlight class="stringliteral">&quot;:scrollHeight-offsetBottom&gt;=scrollTop+targetHeight?!1:&quot;</highlight><highlight class="normal">bottom</highlight><highlight class="stringliteral">&quot;;var<sp/>initializing=null==this.affixed,colliderTop=initializing?scrollTop:position.top,colliderHeight=initializing?targetHeight:height;return<sp/>null!=offsetTop&amp;&amp;offsetTop&gt;=scrollTop?&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;:null!=offsetBottom&amp;&amp;colliderTop+colliderHeight&gt;=scrollHeight-offsetBottom?&quot;</highlight><highlight class="normal">bottom</highlight><highlight class="stringliteral">&quot;:!1},Affix.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return<sp/>this.pinnedOffset;this.$element.removeClass(Affix.RESET).addClass(&quot;</highlight><highlight class="normal">affix</highlight><highlight class="stringliteral">&quot;);var<sp/>scrollTop=this.$target.scrollTop(),position=this.$element.offset();return<sp/>this.pinnedOffset=position.top-scrollTop},Affix.prototype.checkPositionWithEventLoop=function(){setTimeout($.proxy(this.checkPosition,this),1)},Affix.prototype.checkPosition=function(){if(this.$element.is(&quot;</highlight><highlight class="normal">:visible</highlight><highlight class="stringliteral">&quot;)){var<sp/>height=this.$element.height(),offset=this.options.offset,offsetTop=offset.top,offsetBottom=offset.bottom,scrollHeight=$(document.body).height();&quot;</highlight><highlight class="normal">object</highlight><highlight class="stringliteral">&quot;!=typeof<sp/>offset&amp;&amp;(offsetBottom=offsetTop=offset),&quot;</highlight><highlight class="normal">function</highlight><highlight class="stringliteral">&quot;==typeof<sp/>offsetTop&amp;&amp;(offsetTop=offset.top(this.$element)),&quot;</highlight><highlight class="normal">function</highlight><highlight class="stringliteral">&quot;==typeof<sp/>offsetBottom&amp;&amp;(offsetBottom=offset.bottom(this.$element));var<sp/>affix=this.getState(scrollHeight,height,offsetTop,offsetBottom);if(this.affixed!=affix){null!=this.unpin&amp;&amp;this.$element.css(&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="stringliteral">&quot;);var<sp/>affixType=&quot;</highlight><highlight class="normal">affix</highlight><highlight class="stringliteral">&quot;+(affix?&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;+affix:&quot;</highlight><highlight class="stringliteral">&quot;),e=$.Event(affixType+&quot;</highlight><highlight class="normal">.bs.affix</highlight><highlight class="stringliteral">&quot;);if(this.$element.trigger(e),e.isDefaultPrevented())return;this.affixed=affix,this.unpin=&quot;</highlight><highlight class="normal">bottom</highlight><highlight class="stringliteral">&quot;==affix?this.getPinnedOffset():null,this.$element.removeClass(Affix.RESET).addClass(affixType).trigger(affixType.replace(&quot;</highlight><highlight class="normal">affix</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">affixed</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal">.bs.affix</highlight><highlight class="stringliteral">&quot;)}&quot;</highlight><highlight class="normal">bottom</highlight><highlight class="stringliteral">&quot;==affix&amp;&amp;this.$element.offset({top:scrollHeight-height-offsetBottom})}};var<sp/>old=$.fn.affix;$.fn.affix=Plugin,$.fn.affix.Constructor=Affix,$.fn.affix.noConflict=function(){return<sp/>$.fn.affix=old,this},$(window).on(&quot;</highlight><highlight class="normal">load</highlight><highlight class="stringliteral">&quot;,function(){$(&apos;[data-spy=&quot;</highlight><highlight class="normal">affix</highlight><highlight class="stringliteral">&quot;]&apos;).each(function(){var<sp/>$spy=$(this),data=$spy.data();data.offset=data.offset||{},null!=data.offsetBottom&amp;&amp;(data.offset.bottom=data.offsetBottom),null!=data.offsetTop&amp;&amp;(data.offset.top=data.offsetTop),Plugin.call($spy,data)})})}(jQuery),function(window,angular,undefined){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>assertArg(arg,name,reason){if(!arg)throw<sp/>ngMinErr(&quot;</highlight><highlight class="normal">areq</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Argument<sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal"><sp/>is<sp/>{1}</highlight><highlight class="stringliteral">&quot;,name||&quot;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;,reason||&quot;</highlight><highlight class="normal">required</highlight><highlight class="stringliteral">&quot;);return<sp/>arg}function<sp/>mergeClasses(a,b){return<sp/>a||b?a?b?(isArray(a)&amp;&amp;(a=a.join(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;)),isArray(b)&amp;&amp;(b=b.join(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;)),a+&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+b):a:b:&quot;</highlight><highlight class="stringliteral">&quot;}function<sp/>packageStyles(options){var<sp/>styles={};return<sp/>options&amp;&amp;(options.to||options.from)&amp;&amp;(styles.to=options.to,styles.from=options.from),styles}function<sp/>pendClasses(classes,fix,isPrefix){var<sp/>className=&quot;</highlight><highlight class="stringliteral">&quot;;return<sp/>classes=isArray(classes)?classes:classes&amp;&amp;isString(classes)&amp;&amp;classes.length?classes.split(/\s+/):[],forEach(classes,function(klass,i){klass&amp;&amp;klass.length&gt;0&amp;&amp;(className+=i&gt;0?&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="stringliteral">&quot;,className+=isPrefix?fix+klass:klass+fix)}),className}function<sp/>removeFromArray(arr,val){var<sp/>index=arr.indexOf(val);val&gt;=0&amp;&amp;arr.splice(index,1)}function<sp/>stripCommentsFromElement(element){if(element<sp/>instanceof<sp/>jqLite)switch(element.length){case<sp/>0:return[];case<sp/>1:if(element[0].nodeType===ELEMENT_NODE)return<sp/>element;break;default:return<sp/>jqLite(extractElementNode(element))}return<sp/>element.nodeType===ELEMENT_NODE?jqLite(element):void<sp/>0}function<sp/>extractElementNode(element){if(!element[0])return<sp/>element;for(var<sp/>i=0;i&lt;element.length;i++){var<sp/>elm=element[i];if(elm.nodeType==ELEMENT_NODE)return<sp/>elm}}function<sp/>$$addClass($$jqLite,element,className){forEach(element,function(elm){$$jqLite.addClass(elm,className)})}function<sp/>$$removeClass($$jqLite,element,className){forEach(element,function(elm){$$jqLite.removeClass(elm,className)})}function<sp/>applyAnimationClassesFactory($$jqLite){return<sp/>function(element,options){options.addClass&amp;&amp;($$addClass($$jqLite,element,options.addClass),options.addClass=null),options.removeClass&amp;&amp;($$removeClass($$jqLite,element,options.removeClass),options.removeClass=null)}}function<sp/>prepareAnimationOptions(options){if(options=options||{},!options.$$prepared){var<sp/>domOperation=options.domOperation||noop;options.domOperation=function(){options.$$domOperationFired=!0,domOperation(),domOperation=noop},options.$$prepared=!0}return<sp/>options}function<sp/>applyAnimationStyles(element,options){applyAnimationFromStyles(element,options),applyAnimationToStyles(element,options)}function<sp/>applyAnimationFromStyles(element,options){options.from&amp;&amp;(element.css(options.from),options.from=null)}function<sp/>applyAnimationToStyles(element,options){options.to&amp;&amp;(element.css(options.to),options.to=null)}function<sp/>mergeAnimationOptions(element,target,newOptions){var<sp/>toAdd=(target.addClass||&quot;</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+(newOptions.addClass||&quot;</highlight><highlight class="stringliteral">&quot;),toRemove=(target.removeClass||&quot;</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+(newOptions.removeClass||&quot;</highlight><highlight class="stringliteral">&quot;),classes=resolveElementClasses(element.attr(&quot;</highlight><highlight class="keyword">class</highlight><highlight class="stringliteral">&quot;),toAdd,toRemove);return<sp/>extend(target,newOptions),classes.addClass?target.addClass=classes.addClass:target.addClass=null,classes.removeClass?target.removeClass=classes.removeClass:target.removeClass=null,target}function<sp/>resolveElementClasses(existing,toAdd,toRemove){function<sp/>splitClassesToLookup(classes){isString(classes)&amp;&amp;(classes=classes.split(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;));var<sp/>obj={};return<sp/>forEach(classes,function(klass){klass.length&amp;&amp;(obj[klass]=!0)}),obj}var<sp/>ADD_CLASS=1,REMOVE_CLASS=-1,flags={};existing=splitClassesToLookup(existing),toAdd=splitClassesToLookup(toAdd),forEach(toAdd,function(value,key){flags[key]=ADD_CLASS}),toRemove=splitClassesToLookup(toRemove),forEach(toRemove,function(value,key){flags[key]=flags[key]===ADD_CLASS?null:REMOVE_CLASS});var<sp/>classes={</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">addClass:&quot;</highlight><highlight class="stringliteral">&quot;,removeClass:&quot;</highlight><highlight class="stringliteral">&quot;};return<sp/>forEach(flags,function(val,klass){var<sp/>prop,allow;val===ADD_CLASS?(prop=&quot;</highlight><highlight class="normal">addClass</highlight><highlight class="stringliteral">&quot;,allow=!existing[klass]):val===REMOVE_CLASS&amp;&amp;(prop=&quot;</highlight><highlight class="normal">removeClass</highlight><highlight class="stringliteral">&quot;,allow=existing[klass]),allow&amp;&amp;(classes[prop].length&amp;&amp;(classes[prop]+=&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;),classes[prop]+=klass)}),classes}function<sp/>getDomNode(element){return<sp/>element<sp/>instanceof<sp/>angular.element?element[0]:element}function<sp/>computeCssStyles($window,element,properties){var<sp/>styles=Object.create(null),detectedStyles=$window.getComputedStyle(element)||{};return<sp/>forEach(properties,function(formalStyleName,actualStyleName){var<sp/>val=detectedStyles[formalStyleName];if(val){var<sp/>c=val.charAt(0);(&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;===c||&quot;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&quot;===c||c&gt;=0)&amp;&amp;(val=parseMaxTime(val)),0===val&amp;&amp;(val=null),styles[actualStyleName]=val}}),styles}function<sp/>parseMaxTime(str){var<sp/>maxValue=0,values=str.split(/\s*,\s*/);return<sp/>forEach(values,function(value){&quot;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&quot;==value.charAt(value.length-1)&amp;&amp;(value=value.substring(0,value.length-1)),value=parseFloat(value)||0,maxValue=maxValue?Math.max(value,maxValue):value}),maxValue}function<sp/>truthyTimingValue(val){return<sp/>0===val||null!=val}function<sp/>getCssTransitionDurationStyle(duration,applyOnlyDuration){var<sp/>style=TRANSITION_PROP,value=duration+&quot;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&quot;;return<sp/>applyOnlyDuration?style+=DURATION_KEY:value+=&quot;</highlight><highlight class="normal"><sp/>linear<sp/>all</highlight><highlight class="stringliteral">&quot;,[style,value]}function<sp/>getCssKeyframeDurationStyle(duration){return[ANIMATION_DURATION_PROP,duration+&quot;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&quot;]}function<sp/>getCssDelayStyle(delay,isKeyframeAnimation){var<sp/>prop=isKeyframeAnimation?ANIMATION_DELAY_PROP:TRANSITION_DELAY_PROP;return[prop,delay+&quot;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&quot;]}function<sp/>blockTransitions(node,duration){var<sp/>value=duration?&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;+duration+&quot;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="stringliteral">&quot;;return<sp/>applyInlineStyle(node,[TRANSITION_DELAY_PROP,value]),[TRANSITION_DELAY_PROP,value]}function<sp/>blockKeyframeAnimations(node,applyBlock){var<sp/>value=applyBlock?&quot;</highlight><highlight class="normal">paused</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="stringliteral">&quot;,key=ANIMATION_PROP+ANIMATION_PLAYSTATE_KEY;return<sp/>applyInlineStyle(node,[key,value]),[key,value]}function<sp/>applyInlineStyle(node,styleTuple){var<sp/>prop=styleTuple[0],value=styleTuple[1];node.style[prop]=value}function<sp/>createLocalCacheLookup(){var<sp/>cache=Object.create(null);return{flush:function(){cache=Object.create(null)},count:function(key){var<sp/>entry=cache[key];return<sp/>entry?entry.total:0},get:function(key){var<sp/>entry=cache[key];return<sp/>entry&amp;&amp;entry.value},put:function(key,value){cache[key]?cache[key].total++:cache[key]={total:1,value:value}}}}var<sp/>TRANSITION_PROP,TRANSITIONEND_EVENT,ANIMATION_PROP,ANIMATIONEND_EVENT,noop=angular.noop,extend=angular.extend,jqLite=angular.element,forEach=angular.forEach,isArray=angular.isArray,isString=angular.isString,isObject=angular.isObject,isUndefined=angular.isUndefined,isDefined=angular.isDefined,isFunction=angular.isFunction,isElement=angular.isElement,ELEMENT_NODE=1,NG_ANIMATE_CLASSNAME=&quot;</highlight><highlight class="normal">ng-animate</highlight><highlight class="stringliteral">&quot;,NG_ANIMATE_CHILDREN_DATA=&quot;</highlight><highlight class="normal">$$ngAnimateChildren</highlight><highlight class="stringliteral">&quot;,$$rAFSchedulerFactory=[&quot;</highlight><highlight class="normal">$$rAF</highlight><highlight class="stringliteral">&quot;,function($$rAF){function<sp/>scheduler(tasks){tickQueue.push([].concat(tasks)),nextTick()}function<sp/>nextTick(){if(tickQueue.length){for(var<sp/>updatedQueue=[],i=0;i&lt;tickQueue.length;i++){var<sp/>innerQueue=tickQueue[i];runNextTask(innerQueue),innerQueue.length&amp;&amp;updatedQueue.push(innerQueue)}tickQueue=updatedQueue,cancelFn||$$rAF(function(){cancelFn||nextTick()})}}function<sp/>runNextTask(tasks){var<sp/>nextTask=tasks.shift();nextTask()}var<sp/>cancelFn,tickQueue=[];return<sp/>scheduler.waitUntilQuiet=function(fn){cancelFn&amp;&amp;cancelFn(),cancelFn=$$rAF(function(){cancelFn=null,fn(),nextTick()})},scheduler}],$$AnimateChildrenDirective=[function(){return<sp/>function(scope,element,attrs){var<sp/>val=attrs.ngAnimateChildren;angular.isString(val)&amp;&amp;0===val.length?element.data(NG_ANIMATE_CHILDREN_DATA,!0):attrs.$observe(&quot;</highlight><highlight class="normal">ngAnimateChildren</highlight><highlight class="stringliteral">&quot;,function(value){value=&quot;</highlight><highlight class="normal">on</highlight><highlight class="stringliteral">&quot;===value||&quot;</highlight><highlight class="keyword">true</highlight><highlight class="stringliteral">&quot;===value,element.data(NG_ANIMATE_CHILDREN_DATA,value)})}}],CSS_PREFIX=&quot;</highlight><highlight class="stringliteral">&quot;;window.ontransitionend===undefined&amp;&amp;window.onwebkittransitionend!==undefined?(CSS_PREFIX=&quot;</highlight><highlight class="normal">-webkit-</highlight><highlight class="stringliteral">&quot;,TRANSITION_PROP=&quot;</highlight><highlight class="normal">WebkitTransition</highlight><highlight class="stringliteral">&quot;,TRANSITIONEND_EVENT=&quot;</highlight><highlight class="normal">webkitTransitionEnd<sp/>transitionend</highlight><highlight class="stringliteral">&quot;):(TRANSITION_PROP=&quot;</highlight><highlight class="normal">transition</highlight><highlight class="stringliteral">&quot;,TRANSITIONEND_EVENT=&quot;</highlight><highlight class="normal">transitionend</highlight><highlight class="stringliteral">&quot;),window.onanimationend===undefined&amp;&amp;window.onwebkitanimationend!==undefined?(CSS_PREFIX=&quot;</highlight><highlight class="normal">-webkit-</highlight><highlight class="stringliteral">&quot;,ANIMATION_PROP=&quot;</highlight><highlight class="normal">WebkitAnimation</highlight><highlight class="stringliteral">&quot;,ANIMATIONEND_EVENT=&quot;</highlight><highlight class="normal">webkitAnimationEnd<sp/>animationend</highlight><highlight class="stringliteral">&quot;):(ANIMATION_PROP=&quot;</highlight><highlight class="normal">animation</highlight><highlight class="stringliteral">&quot;,ANIMATIONEND_EVENT=&quot;</highlight><highlight class="normal">animationend</highlight><highlight class="stringliteral">&quot;);var<sp/>DURATION_KEY=&quot;</highlight><highlight class="normal">Duration</highlight><highlight class="stringliteral">&quot;,PROPERTY_KEY=&quot;</highlight><highlight class="normal">Property</highlight><highlight class="stringliteral">&quot;,DELAY_KEY=&quot;</highlight><highlight class="normal">Delay</highlight><highlight class="stringliteral">&quot;,TIMING_KEY=&quot;</highlight><highlight class="normal">TimingFunction</highlight><highlight class="stringliteral">&quot;,ANIMATION_ITERATION_COUNT_KEY=&quot;</highlight><highlight class="normal">IterationCount</highlight><highlight class="stringliteral">&quot;,ANIMATION_PLAYSTATE_KEY=&quot;</highlight><highlight class="normal">PlayState</highlight><highlight class="stringliteral">&quot;,ELAPSED_TIME_MAX_DECIMAL_PLACES=3,CLOSING_TIME_BUFFER=1.5,ONE_SECOND=1e3,SAFE_FAST_FORWARD_DURATION_VALUE=9999,ANIMATION_DELAY_PROP=ANIMATION_PROP+DELAY_KEY,ANIMATION_DURATION_PROP=ANIMATION_PROP+DURATION_KEY,TRANSITION_DELAY_PROP=TRANSITION_PROP+DELAY_KEY,TRANSITION_DURATION_PROP=TRANSITION_PROP+DURATION_KEY,DETECT_CSS_PROPERTIES={transitionDuration:TRANSITION_DURATION_PROP,transitionDelay:TRANSITION_DELAY_PROP,transitionProperty:TRANSITION_PROP+PROPERTY_KEY,animationDuration:ANIMATION_DURATION_PROP,animationDelay:ANIMATION_DELAY_PROP,animationIterationCount:ANIMATION_PROP+ANIMATION_ITERATION_COUNT_KEY},DETECT_STAGGER_CSS_PROPERTIES={transitionDuration:TRANSITION_DURATION_PROP,transitionDelay:TRANSITION_DELAY_PROP,animationDuration:ANIMATION_DURATION_PROP,animationDelay:ANIMATION_DELAY_PROP},$AnimateCssProvider=[&quot;</highlight><highlight class="normal">$animateProvider</highlight><highlight class="stringliteral">&quot;,function($animateProvider){var<sp/>gcsLookup=createLocalCacheLookup(),gcsStaggerLookup=createLocalCacheLookup();this.$get=[&quot;</highlight><highlight class="normal">$window</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$jqLite</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$AnimateRunner</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$timeout</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$document</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$sniffer</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$rAFScheduler</highlight><highlight class="stringliteral">&quot;,function($window,$$jqLite,$$AnimateRunner,$timeout,$document,$sniffer,$$rAFScheduler){function<sp/>gcsHashFn(node,extraClasses){var<sp/>KEY=&quot;</highlight><highlight class="normal">$$ngAnimateParentKey</highlight><highlight class="stringliteral">&quot;,parentNode=node.parentNode,parentID=parentNode[KEY]||(parentNode[KEY]=++parentCounter);return<sp/>parentID+&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;+node.getAttribute(&quot;</highlight><highlight class="keyword">class</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;+extraClasses}function<sp/>computeCachedCssStyles(node,className,cacheKey,properties){var<sp/>timings=gcsLookup.get(cacheKey);return<sp/>timings||(timings=computeCssStyles($window,node,properties),&quot;</highlight><highlight class="normal">infinite</highlight><highlight class="stringliteral">&quot;===timings.animationIterationCount&amp;&amp;(timings.animationIterationCount=1)),gcsLookup.put(cacheKey,timings),timings}function<sp/>computeCachedCssStaggerStyles(node,className,cacheKey,properties){var<sp/>stagger;if(gcsLookup.count(cacheKey)&gt;0&amp;&amp;(stagger=gcsStaggerLookup.get(cacheKey),!stagger)){var<sp/>staggerClassName=pendClasses(className,&quot;</highlight><highlight class="normal">-stagger</highlight><highlight class="stringliteral">&quot;);$$jqLite.addClass(node,staggerClassName),stagger=computeCssStyles($window,node,properties),stagger.animationDuration=Math.max(stagger.animationDuration,0),stagger.transitionDuration=Math.max(stagger.transitionDuration,0),$$jqLite.removeClass(node,staggerClassName),gcsStaggerLookup.put(cacheKey,stagger)}return<sp/>stagger||{}}function<sp/>waitUntilQuiet(callback){rafWaitQueue.push(callback),$$rAFScheduler.waitUntilQuiet(function(){gcsLookup.flush(),gcsStaggerLookup.flush();for(var<sp/>width=bod.offsetWidth+1,i=0;i&lt;rafWaitQueue.length;i++)rafWaitQueue[i](width);rafWaitQueue.length=0})}function<sp/>computeTimings(node,className,cacheKey){var<sp/>timings=computeCachedCssStyles(node,className,cacheKey,DETECT_CSS_PROPERTIES),aD=timings.animationDelay,tD=timings.transitionDelay;return<sp/>timings.maxDelay=aD&amp;&amp;tD?Math.max(aD,tD):aD||tD,timings.maxDuration=Math.max(timings.animationDuration*timings.animationIterationCount,timings.transitionDuration),timings}function<sp/>init(element,options){function<sp/>endFn(){close()}function<sp/>cancelFn(){close(!0)}function<sp/>close(rejected){animationClosed||animationCompleted&amp;&amp;animationPaused||(animationClosed=!0,animationPaused=!1,$$jqLite.removeClass(element,setupClasses),$$jqLite.removeClass(element,activeClasses),blockKeyframeAnimations(node,!1),blockTransitions(node,!1),forEach(temporaryStyles,function(entry){node.style[entry[0]]=&quot;</highlight><highlight class="stringliteral">&quot;}),applyAnimationClasses(element,options),applyAnimationStyles(element,options),options.onDone&amp;&amp;options.onDone(),runner&amp;&amp;runner.complete(!rejected))}function<sp/>applyBlocking(duration){flags.blockTransition&amp;&amp;blockTransitions(node,duration),flags.blockKeyframeAnimation&amp;&amp;blockKeyframeAnimations(node,!!duration)}function<sp/>closeAndReturnNoopAnimator(){return<sp/>runner=new<sp/>$$AnimateRunner({end:endFn,cancel:cancelFn}),close(),{$$willAnimate:!1,start:function(){return<sp/>runner},end:endFn}}function<sp/>start(){function<sp/>triggerAnimationStart(){if(!animationClosed){if(applyBlocking(!1),forEach(temporaryStyles,function(entry){var<sp/>key=entry[0],value=entry[1];node.style[key]=value}),applyAnimationClasses(element,options),$$jqLite.addClass(element,activeClasses),flags.recalculateTimingStyles){if(fullClassName=node.className+&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+setupClasses,cacheKey=gcsHashFn(node,fullClassName),timings=computeTimings(node,fullClassName,cacheKey),relativeDelay=timings.maxDelay,maxDelay=Math.max(relativeDelay,0),maxDuration=timings.maxDuration,0===maxDuration)return<sp/>void<sp/>close();flags.hasTransitions=timings.transitionDuration&gt;0,flags.hasAnimations=timings.animationDuration&gt;0}if(flags.applyTransitionDelay||flags.applyAnimationDelay){relativeDelay=&quot;</highlight><highlight class="keywordtype">boolean</highlight><highlight class="stringliteral">&quot;!=typeof<sp/>options.delay&amp;&amp;truthyTimingValue(options.delay)?parseFloat(options.delay):relativeDelay,maxDelay=Math.max(relativeDelay,0);var<sp/>delayStyle;flags.applyTransitionDelay&amp;&amp;(timings.transitionDelay=relativeDelay,delayStyle=getCssDelayStyle(relativeDelay),temporaryStyles.push(delayStyle),node.style[delayStyle[0]]=delayStyle[1]),flags.applyAnimationDelay&amp;&amp;(timings.animationDelay=relativeDelay,delayStyle=getCssDelayStyle(relativeDelay,!0),temporaryStyles.push(delayStyle),node.style[delayStyle[0]]=delayStyle[1])}if(maxDelayTime=maxDelay*ONE_SECOND,maxDurationTime=maxDuration*ONE_SECOND,options.easing){var<sp/>easeProp,easeVal=options.easing;flags.hasTransitions&amp;&amp;(easeProp=TRANSITION_PROP+TIMING_KEY,temporaryStyles.push([easeProp,easeVal]),node.style[easeProp]=easeVal),flags.hasAnimations&amp;&amp;(easeProp=ANIMATION_PROP+TIMING_KEY,temporaryStyles.push([easeProp,easeVal]),node.style[easeProp]=easeVal)}timings.transitionDuration&amp;&amp;events.push(TRANSITIONEND_EVENT),timings.animationDuration&amp;&amp;events.push(ANIMATIONEND_EVENT),startTime=Date.now(),element.on(events.join(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;),onAnimationProgress),$timeout(onAnimationExpired,maxDelayTime+CLOSING_TIME_BUFFER*maxDurationTime),applyAnimationToStyles(element,options)}}function<sp/>onAnimationExpired(){close()}function<sp/>onAnimationProgress(event){event.stopPropagation();var<sp/>ev=event.originalEvent||event,timeStamp=ev.$manualTimeStamp||ev.timeStamp||Date.now(),elapsedTime=parseFloat(ev.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES));Math.max(timeStamp-startTime,0)&gt;=maxDelayTime&amp;&amp;elapsedTime&gt;=maxDuration&amp;&amp;(animationCompleted=!0,close())}if(!animationClosed){var<sp/>startTime,events=[],playPause=function(playAnimation){if(animationCompleted)animationPaused&amp;&amp;playAnimation&amp;&amp;(animationPaused=!1,close());else<sp/>if(animationPaused=!playAnimation,timings.animationDuration){var<sp/>value=blockKeyframeAnimations(node,animationPaused);animationPaused?temporaryStyles.push(value):removeFromArray(temporaryStyles,value)}},maxStagger=itemIndex&gt;0&amp;&amp;(timings.transitionDuration&amp;&amp;0===stagger.transitionDuration||timings.animationDuration&amp;&amp;0===stagger.animationDuration)&amp;&amp;Math.max(stagger.animationDelay,stagger.transitionDelay);maxStagger?$timeout(triggerAnimationStart,Math.floor(maxStagger*itemIndex*ONE_SECOND),!1):triggerAnimationStart(),runnerHost.resume=function(){playPause(!0)},runnerHost.pause=function(){playPause(!1)}}}var<sp/>node=getDomNode(element);options=prepareAnimationOptions(options);var<sp/>animationClosed,animationPaused,animationCompleted,runner,runnerHost,maxDelay,maxDelayTime,maxDuration,maxDurationTime,temporaryStyles=[],classes=element.attr(&quot;</highlight><highlight class="keyword">class</highlight><highlight class="stringliteral">&quot;),styles=packageStyles(options);if(0===options.duration||!$sniffer.animations&amp;&amp;!$sniffer.transitions)return<sp/>closeAndReturnNoopAnimator();var<sp/>method=options.event&amp;&amp;isArray(options.event)?options.event.join(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;):options.event,isStructural=method&amp;&amp;options.structural,structuralClassName=&quot;</highlight><highlight class="stringliteral">&quot;,addRemoveClassName=&quot;</highlight><highlight class="stringliteral">&quot;;isStructural?structuralClassName=pendClasses(method,&quot;</highlight><highlight class="normal">ng-</highlight><highlight class="stringliteral">&quot;,!0):method&amp;&amp;(structuralClassName=method),options.addClass&amp;&amp;(addRemoveClassName+=pendClasses(options.addClass,&quot;</highlight><highlight class="normal">-add</highlight><highlight class="stringliteral">&quot;)),options.removeClass&amp;&amp;(addRemoveClassName.length&amp;&amp;(addRemoveClassName+=&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;),addRemoveClassName+=pendClasses(options.removeClass,&quot;</highlight><highlight class="normal">-</highlight><highlight class="keyword">remove</highlight><highlight class="stringliteral">&quot;)),options.applyClassesEarly&amp;&amp;addRemoveClassName.length&amp;&amp;(applyAnimationClasses(element,options),addRemoveClassName=&quot;</highlight><highlight class="stringliteral">&quot;);var<sp/>setupClasses=[structuralClassName,addRemoveClassName].join(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;).trim(),fullClassName=classes+&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+setupClasses,activeClasses=pendClasses(setupClasses,&quot;</highlight><highlight class="normal">-active</highlight><highlight class="stringliteral">&quot;),hasToStyles=styles.to&amp;&amp;Object.keys(styles.to).length&gt;0;if(!hasToStyles&amp;&amp;!setupClasses)return<sp/>closeAndReturnNoopAnimator();var<sp/>cacheKey,stagger;if(options.stagger&gt;0){var<sp/>staggerVal=parseFloat(options.stagger);stagger={transitionDelay:staggerVal,animationDelay:staggerVal,transitionDuration:0,animationDuration:0}}else<sp/>cacheKey=gcsHashFn(node,fullClassName),stagger=computeCachedCssStaggerStyles(node,setupClasses,cacheKey,DETECT_STAGGER_CSS_PROPERTIES);$$jqLite.addClass(element,setupClasses);var<sp/>applyOnlyDuration;if(options.transitionStyle){var<sp/>transitionStyle=[TRANSITION_PROP,options.transitionStyle];applyInlineStyle(node,transitionStyle),temporaryStyles.push(transitionStyle)}if(options.duration&gt;=0){applyOnlyDuration=node.style[TRANSITION_PROP].length&gt;0;var<sp/>durationStyle=getCssTransitionDurationStyle(options.duration,applyOnlyDuration);applyInlineStyle(node,durationStyle),temporaryStyles.push(durationStyle)}if(options.keyframeStyle){var<sp/>keyframeStyle=[ANIMATION_PROP,options.keyframeStyle];applyInlineStyle(node,keyframeStyle),temporaryStyles.push(keyframeStyle)}var<sp/>itemIndex=stagger?options.staggerIndex&gt;=0?options.staggerIndex:gcsLookup.count(cacheKey):0,isFirst=0===itemIndex;isFirst&amp;&amp;blockTransitions(node,SAFE_FAST_FORWARD_DURATION_VALUE);var<sp/>timings=computeTimings(node,fullClassName,cacheKey),relativeDelay=timings.maxDelay;maxDelay=Math.max(relativeDelay,0),maxDuration=timings.maxDuration;var<sp/>flags={};return<sp/>flags.hasTransitions=timings.transitionDuration&gt;0,flags.hasAnimations=timings.animationDuration&gt;0,flags.hasTransitionAll=flags.hasTransitions&amp;&amp;&quot;</highlight><highlight class="normal">all</highlight><highlight class="stringliteral">&quot;==timings.transitionProperty,flags.applyTransitionDuration=hasToStyles&amp;&amp;(flags.hasTransitions&amp;&amp;!flags.hasTransitionAll||flags.hasAnimations&amp;&amp;!flags.hasTransitions),flags.applyAnimationDuration=options.duration&amp;&amp;flags.hasAnimations,flags.applyTransitionDelay=truthyTimingValue(options.delay)&amp;&amp;(flags.applyTransitionDuration||flags.hasTransitions),flags.applyAnimationDelay=truthyTimingValue(options.delay)&amp;&amp;flags.hasAnimations,flags.recalculateTimingStyles=addRemoveClassName.length&gt;0,(flags.applyTransitionDuration||flags.applyAnimationDuration)&amp;&amp;(maxDuration=options.duration?parseFloat(options.duration):maxDuration,flags.applyTransitionDuration&amp;&amp;(flags.hasTransitions=!0,timings.transitionDuration=maxDuration,applyOnlyDuration=node.style[TRANSITION_PROP+PROPERTY_KEY].length&gt;0,temporaryStyles.push(getCssTransitionDurationStyle(maxDuration,applyOnlyDuration))),flags.applyAnimationDuration&amp;&amp;(flags.hasAnimations=!0,timings.animationDuration=maxDuration,temporaryStyles.push(getCssKeyframeDurationStyle(maxDuration)))),0!==maxDuration||flags.recalculateTimingStyles?(null==options.duration&amp;&amp;timings.transitionDuration&gt;0&amp;&amp;(flags.recalculateTimingStyles=flags.recalculateTimingStyles||isFirst),maxDelayTime=maxDelay*ONE_SECOND,maxDurationTime=maxDuration*ONE_SECOND,options.skipBlocking||(flags.blockTransition=timings.transitionDuration&gt;0,flags.blockKeyframeAnimation=timings.animationDuration&gt;0&amp;&amp;stagger.animationDelay&gt;0&amp;&amp;0===stagger.animationDuration),applyAnimationFromStyles(element,options),flags.blockTransition||blockTransitions(node,!1),applyBlocking(maxDuration),{$$willAnimate:!0,end:endFn,start:function(){return<sp/>animationClosed?void<sp/>0:(runnerHost={end:endFn,cancel:cancelFn,resume:null,pause:null},runner=new<sp/>$$AnimateRunner(runnerHost),waitUntilQuiet(start),runner)}}):closeAndReturnNoopAnimator()}var<sp/>applyAnimationClasses=applyAnimationClassesFactory($$jqLite),parentCounter=0,bod=getDomNode($document).body,rafWaitQueue=[];return<sp/>init}]}],$$AnimateCssDriverProvider=[&quot;</highlight><highlight class="normal">$$animationProvider</highlight><highlight class="stringliteral">&quot;,function($$animationProvider){$$animationProvider.drivers.push(&quot;</highlight><highlight class="normal">$$animateCssDriver</highlight><highlight class="stringliteral">&quot;);var<sp/>NG_ANIMATE_SHIM_CLASS_NAME=&quot;</highlight><highlight class="normal">ng-animate-shim</highlight><highlight class="stringliteral">&quot;,NG_ANIMATE_ANCHOR_CLASS_NAME=&quot;</highlight><highlight class="normal">ng-anchor</highlight><highlight class="stringliteral">&quot;,NG_OUT_ANCHOR_CLASS_NAME=&quot;</highlight><highlight class="normal">ng-anchor-out</highlight><highlight class="stringliteral">&quot;,NG_IN_ANCHOR_CLASS_NAME=&quot;</highlight><highlight class="normal">ng-anchor-in</highlight><highlight class="stringliteral">&quot;;this.$get=[&quot;</highlight><highlight class="normal">$animateCss</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$rootScope</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$AnimateRunner</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$rootElement</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$document</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$sniffer</highlight><highlight class="stringliteral">&quot;,function($animateCss,$rootScope,$$AnimateRunner,$rootElement,$document,$sniffer){function<sp/>filterCssClasses(classes){return<sp/>classes.replace(/\bng-\S+\b/g,&quot;</highlight><highlight class="stringliteral">&quot;)}function<sp/>getUniqueValues(a,b){return<sp/>isString(a)&amp;&amp;(a=a.split(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;)),isString(b)&amp;&amp;(b=b.split(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;)),a.filter(function(val){return-1===b.indexOf(val)}).join(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;)}function<sp/>prepareAnchoredAnimation(classes,outAnchor,inAnchor){function<sp/>calculateAnchorStyles(anchor){var<sp/>styles={},coords=getDomNode(anchor).getBoundingClientRect();return<sp/>forEach([&quot;</highlight><highlight class="normal">width</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">height</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">left</highlight><highlight class="stringliteral">&quot;],function(key){var<sp/>value=coords[key];switch(key){case&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;:value+=bodyNode.scrollTop;break;case&quot;</highlight><highlight class="normal">left</highlight><highlight class="stringliteral">&quot;:value+=bodyNode.scrollLeft}styles[key]=Math.floor(value)+&quot;</highlight><highlight class="normal">px</highlight><highlight class="stringliteral">&quot;}),styles}function<sp/>prepareOutAnimation(){var<sp/>animator=$animateCss(clone,{addClass:NG_OUT_ANCHOR_CLASS_NAME,delay:!0,from:calculateAnchorStyles(outAnchor)});return<sp/>animator.$$willAnimate?animator:null}function<sp/>getClassVal(element){return<sp/>element.attr(&quot;</highlight><highlight class="keyword">class</highlight><highlight class="stringliteral">&quot;)||&quot;</highlight><highlight class="stringliteral">&quot;}function<sp/>prepareInAnimation(){var<sp/>endingClasses=filterCssClasses(getClassVal(inAnchor)),toAdd=getUniqueValues(endingClasses,startingClasses),toRemove=getUniqueValues(startingClasses,endingClasses),animator=$animateCss(clone,{to:calculateAnchorStyles(inAnchor),addClass:NG_IN_ANCHOR_CLASS_NAME+&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+toAdd,removeClass:NG_OUT_ANCHOR_CLASS_NAME+&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+toRemove,delay:!0});return<sp/>animator.$$willAnimate?animator:null}function<sp/>end(){clone.remove(),outAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME),inAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME)}var<sp/>clone=jqLite(getDomNode(outAnchor).cloneNode(!0)),startingClasses=filterCssClasses(getClassVal(clone));outAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME),inAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME),clone.addClass(NG_ANIMATE_ANCHOR_CLASS_NAME),rootBodyElement.append(clone);var<sp/>animatorIn,animatorOut=prepareOutAnimation();if(!animatorOut&amp;&amp;(animatorIn=prepareInAnimation(),!animatorIn))return<sp/>end();var<sp/>startingAnimator=animatorOut||animatorIn;return{start:function(){function<sp/>endFn(){currentAnimation&amp;&amp;currentAnimation.end()}var<sp/>runner,currentAnimation=startingAnimator.start();return<sp/>currentAnimation.done(function(){return<sp/>currentAnimation=null,!animatorIn&amp;&amp;(animatorIn=prepareInAnimation())?(currentAnimation=animatorIn.start(),currentAnimation.done(function(){currentAnimation=null,end(),runner.complete()}),currentAnimation):(end(),void<sp/>runner.complete())}),runner=new<sp/>$$AnimateRunner({end:endFn,cancel:endFn})}}}function<sp/>prepareFromToAnchorAnimation(from,to,classes,anchors){var<sp/>fromAnimation=prepareRegularAnimation(from),toAnimation=prepareRegularAnimation(to),anchorAnimations=[];return<sp/>forEach(anchors,function(anchor){var<sp/>outElement=anchor.out,inElement=anchor[&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;],animator=prepareAnchoredAnimation(classes,outElement,inElement);animator&amp;&amp;anchorAnimations.push(animator)}),fromAnimation||toAnimation||0!==anchorAnimations.length?{start:function(){function<sp/>endFn(){forEach(animationRunners,function(runner){runner.end()})}var<sp/>animationRunners=[];fromAnimation&amp;&amp;animationRunners.push(fromAnimation.start()),toAnimation&amp;&amp;animationRunners.push(toAnimation.start()),forEach(anchorAnimations,function(animation){animationRunners.push(animation.start())});var<sp/>runner=new<sp/>$$AnimateRunner({end:endFn,cancel:endFn});return<sp/>$$AnimateRunner.all(animationRunners,function(status){runner.complete(status)}),runner}}:void<sp/>0}function<sp/>prepareRegularAnimation(animationDetails){var<sp/>element=animationDetails.element,options=animationDetails.options||{};animationDetails.structural?(options.structural=options.applyClassesEarly=!0,options.event=animationDetails.event,&quot;</highlight><highlight class="normal">leave</highlight><highlight class="stringliteral">&quot;===options.event&amp;&amp;(options.onDone=options.domOperation)):options.event=null;var<sp/>animator=$animateCss(element,options);return<sp/>animator.$$willAnimate?animator:null}if(!$sniffer.animations&amp;&amp;!$sniffer.transitions)return<sp/>noop;var<sp/>bodyNode=getDomNode($document).body,rootNode=getDomNode($rootElement),rootBodyElement=jqLite(bodyNode.parentNode===rootNode?bodyNode:rootNode);return<sp/>function(animationDetails){return<sp/>animationDetails.from&amp;&amp;animationDetails.to?prepareFromToAnchorAnimation(animationDetails.from,animationDetails.to,animationDetails.classes,animationDetails.anchors):prepareRegularAnimation(animationDetails)}}]}],$$AnimateJsProvider=[&quot;</highlight><highlight class="normal">$animateProvider</highlight><highlight class="stringliteral">&quot;,function($animateProvider){this.$get=[&quot;</highlight><highlight class="normal">$injector</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$AnimateRunner</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$rAFMutex</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$jqLite</highlight><highlight class="stringliteral">&quot;,function($injector,$$AnimateRunner,$$rAFMutex,$$jqLite){function<sp/>lookupAnimations(classes){classes=isArray(classes)?classes:classes.split(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;);for(var<sp/>matches=[],flagMap={},i=0;i&lt;classes.length;i++){var<sp/>klass=classes[i],animationFactory=$animateProvider.$$registeredAnimations[klass];animationFactory&amp;&amp;!flagMap[klass]&amp;&amp;(matches.push($injector.get(animationFactory)),flagMap[klass]=!0)}return<sp/>matches}var<sp/>applyAnimationClasses=applyAnimationClassesFactory($$jqLite);return<sp/>function(element,event,classes,options){function<sp/>applyOptions(){options.domOperation(),applyAnimationClasses(element,options)}function<sp/>executeAnimationFn(fn,element,event,options,onDone){var<sp/>args;switch(event){case&quot;</highlight><highlight class="normal">animate</highlight><highlight class="stringliteral">&quot;:args=[element,options.from,options.to,onDone];break;case&quot;</highlight><highlight class="normal">setClass</highlight><highlight class="stringliteral">&quot;:args=[element,classesToAdd,classesToRemove,onDone];break;case&quot;</highlight><highlight class="normal">addClass</highlight><highlight class="stringliteral">&quot;:args=[element,classesToAdd,onDone];break;case&quot;</highlight><highlight class="normal">removeClass</highlight><highlight class="stringliteral">&quot;:args=[element,classesToRemove,onDone];break;default:args=[element,onDone]}args.push(options);var<sp/>value=fn.apply(fn,args);if(value)if(isFunction(value.start)&amp;&amp;(value=value.start()),value<sp/>instanceof<sp/>$$AnimateRunner)value.done(onDone);else<sp/>if(isFunction(value))return<sp/>value;return<sp/>noop}function<sp/>groupEventedAnimations(element,event,options,animations,fnName){var<sp/>operations=[];return<sp/>forEach(animations,function(ani){var<sp/>animation=ani[fnName];animation&amp;&amp;operations.push(function(){var<sp/>runner,endProgressCb,resolved=!1,onAnimationComplete=function(rejected){resolved||(resolved=!0,(endProgressCb||noop)(rejected),runner.complete(!rejected))};return<sp/>runner=new<sp/>$$AnimateRunner({end:function(){onAnimationComplete()},cancel:function(){onAnimationComplete(!0)}}),endProgressCb=executeAnimationFn(animation,element,event,options,function(result){var<sp/>cancelled=result===!1;onAnimationComplete(cancelled)}),runner})}),operations}function<sp/>packageAnimations(element,event,options,animations,fnName){var<sp/>operations=groupEventedAnimations(element,event,options,animations,fnName);if(0===operations.length){var<sp/>a,b;&quot;</highlight><highlight class="normal">beforeSetClass</highlight><highlight class="stringliteral">&quot;===fnName?(a=groupEventedAnimations(element,&quot;</highlight><highlight class="normal">removeClass</highlight><highlight class="stringliteral">&quot;,options,animations,&quot;</highlight><highlight class="normal">beforeRemoveClass</highlight><highlight class="stringliteral">&quot;),b=groupEventedAnimations(element,&quot;</highlight><highlight class="normal">addClass</highlight><highlight class="stringliteral">&quot;,options,animations,&quot;</highlight><highlight class="normal">beforeAddClass</highlight><highlight class="stringliteral">&quot;)):&quot;</highlight><highlight class="normal">setClass</highlight><highlight class="stringliteral">&quot;===fnName&amp;&amp;(a=groupEventedAnimations(element,&quot;</highlight><highlight class="normal">removeClass</highlight><highlight class="stringliteral">&quot;,options,animations,&quot;</highlight><highlight class="normal">removeClass</highlight><highlight class="stringliteral">&quot;),b=groupEventedAnimations(element,&quot;</highlight><highlight class="normal">addClass</highlight><highlight class="stringliteral">&quot;,options,animations,&quot;</highlight><highlight class="normal">addClass</highlight><highlight class="stringliteral">&quot;)),a&amp;&amp;(operations=operations.concat(a)),b&amp;&amp;(operations=operations.concat(b))}if(0!==operations.length)return<sp/>function(callback){var<sp/>runners=[];return<sp/>operations.length&amp;&amp;forEach(operations,function(animateFn){runners.push(animateFn())}),runners.length?$$AnimateRunner.all(runners,callback):callback(),function(reject){forEach(runners,function(runner){reject?runner.cancel():runner.end()})}}}3===arguments.length&amp;&amp;isObject(classes)&amp;&amp;(options=classes,classes=null),options=prepareAnimationOptions(options),classes||(classes=element.attr(&quot;</highlight><highlight class="keyword">class</highlight><highlight class="stringliteral">&quot;)||&quot;</highlight><highlight class="stringliteral">&quot;,options.addClass&amp;&amp;(classes+=&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+options.addClass),options.removeClass&amp;&amp;(classes+=&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+options.removeClass));var<sp/>before,after,classesToAdd=options.addClass,classesToRemove=options.removeClass,animations=lookupAnimations(classes);if(animations.length){var<sp/>afterFn,beforeFn;&quot;</highlight><highlight class="normal">leave</highlight><highlight class="stringliteral">&quot;==event?(beforeFn=&quot;</highlight><highlight class="normal">leave</highlight><highlight class="stringliteral">&quot;,afterFn=&quot;</highlight><highlight class="normal">afterLeave</highlight><highlight class="stringliteral">&quot;):(beforeFn=&quot;</highlight><highlight class="normal">before</highlight><highlight class="stringliteral">&quot;+event.charAt(0).toUpperCase()+event.substr(1),afterFn=event),&quot;</highlight><highlight class="normal">enter</highlight><highlight class="stringliteral">&quot;!==event&amp;&amp;&quot;</highlight><highlight class="normal">move</highlight><highlight class="stringliteral">&quot;!==event&amp;&amp;(before=packageAnimations(element,event,options,animations,beforeFn)),after=packageAnimations(element,event,options,animations,afterFn)}return<sp/>before||after?{start:function(){function<sp/>onComplete(success){animationClosed=!0,applyOptions(),applyAnimationStyles(element,options),runner.complete(success)}function<sp/>endAnimations(cancelled){animationClosed||((closeActiveAnimations||noop)(cancelled),onComplete(cancelled))}var<sp/>closeActiveAnimations,chain=[];before&amp;&amp;chain.push(function(fn){closeActiveAnimations=before(fn)}),chain.length?chain.push(function(fn){applyOptions(),fn(!0)}):applyOptions(),after&amp;&amp;chain.push(function(fn){closeActiveAnimations=after(fn)});var<sp/>animationClosed=!1,runner=new<sp/>$$AnimateRunner({end:function(){endAnimations()},cancel:function(){endAnimations(!0)}});return<sp/>$$AnimateRunner.chain(chain,onComplete),runner}}:void<sp/>0}}]}],$$AnimateJsDriverProvider=[&quot;</highlight><highlight class="normal">$$animationProvider</highlight><highlight class="stringliteral">&quot;,function($$animationProvider){$$animationProvider.drivers.push(&quot;</highlight><highlight class="normal">$$animateJsDriver</highlight><highlight class="stringliteral">&quot;),this.$get=[&quot;</highlight><highlight class="normal">$$animateJs</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$AnimateRunner</highlight><highlight class="stringliteral">&quot;,function($$animateJs,$$AnimateRunner){function<sp/>prepareAnimation(animationDetails){var<sp/>element=animationDetails.element,event=animationDetails.event,options=animationDetails.options,classes=animationDetails.classes;return<sp/>$$animateJs(element,event,classes,options)}return<sp/>function(animationDetails){if(animationDetails.from&amp;&amp;animationDetails.to){var<sp/>fromAnimation=prepareAnimation(animationDetails.from),toAnimation=prepareAnimation(animationDetails.to);if(!fromAnimation&amp;&amp;!toAnimation)return;return{start:function(){function<sp/>endFnFactory(){return<sp/>function(){forEach(animationRunners,function(runner){runner.end()})}}function<sp/>done(status){runner.complete(status)}var<sp/>animationRunners=[];fromAnimation&amp;&amp;animationRunners.push(fromAnimation.start()),toAnimation&amp;&amp;animationRunners.push(toAnimation.start()),$$AnimateRunner.all(animationRunners,done);var<sp/>runner=new<sp/>$$AnimateRunner({end:endFnFactory(),cancel:endFnFactory()});return<sp/>runner}}}return<sp/>prepareAnimation(animationDetails)}}]}],NG_ANIMATE_ATTR_NAME=&quot;</highlight><highlight class="normal">data-ng-animate</highlight><highlight class="stringliteral">&quot;,NG_ANIMATE_PIN_DATA=&quot;</highlight><highlight class="normal">$ngAnimatePin</highlight><highlight class="stringliteral">&quot;,$$AnimateQueueProvider=[&quot;</highlight><highlight class="normal">$animateProvider</highlight><highlight class="stringliteral">&quot;,function($animateProvider){function<sp/>isAllowed(ruleType,element,currentAnimation,previousAnimation){return<sp/>rules[ruleType].some(function(fn){return<sp/>fn(element,currentAnimation,previousAnimation)})}function<sp/>hasAnimationClasses(options,and){options=options||{};var<sp/>a=(options.addClass||&quot;</highlight><highlight class="stringliteral">&quot;).length&gt;0,b=(options.removeClass||&quot;</highlight><highlight class="stringliteral">&quot;).length&gt;0;return<sp/>and?a&amp;&amp;b:a||b}var<sp/>PRE_DIGEST_STATE=1,RUNNING_STATE=2,rules=this.rules={skip:[],cancel:[],join:[]};rules.join.push(function(element,newAnimation,currentAnimation){return!newAnimation.structural&amp;&amp;hasAnimationClasses(newAnimation.options)}),rules.skip.push(function(element,newAnimation,currentAnimation){return!newAnimation.structural&amp;&amp;!hasAnimationClasses(newAnimation.options)}),rules.skip.push(function(element,newAnimation,currentAnimation){return&quot;</highlight><highlight class="normal">leave</highlight><highlight class="stringliteral">&quot;==currentAnimation.event&amp;&amp;newAnimation.structural}),rules.skip.push(function(element,newAnimation,currentAnimation){return<sp/>currentAnimation.structural&amp;&amp;!newAnimation.structural}),rules.cancel.push(function(element,newAnimation,currentAnimation){return<sp/>currentAnimation.structural&amp;&amp;newAnimation.structural}),rules.cancel.push(function(element,newAnimation,currentAnimation){return<sp/>currentAnimation.state===RUNNING_STATE&amp;&amp;newAnimation.structural}),rules.cancel.push(function(element,newAnimation,currentAnimation){var<sp/>nO=newAnimation.options,cO=currentAnimation.options;return<sp/>nO.addClass&amp;&amp;nO.addClass===cO.removeClass||nO.removeClass&amp;&amp;nO.removeClass===cO.addClass}),this.$get=[&quot;</highlight><highlight class="normal">$$rAF</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$rootScope</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$rootElement</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$document</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$HashMap</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$animation</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$AnimateRunner</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$templateRequest</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$jqLite</highlight><highlight class="stringliteral">&quot;,function($$rAF,$rootScope,$rootElement,$document,$$HashMap,$$animation,$$AnimateRunner,$templateRequest,$$jqLite){function<sp/>normalizeAnimationOptions(element,options){return<sp/>mergeAnimationOptions(element,options,{})}function<sp/>findCallbacks(element,event){var<sp/>targetNode=getDomNode(element),matches=[],entries=callbackRegistry[event];return<sp/>entries&amp;&amp;forEach(entries,function(entry){entry.node.contains(targetNode)&amp;&amp;matches.push(entry.callback)}),matches}function<sp/>triggerCallback(event,element,phase,data){$$rAF(function(){forEach(findCallbacks(element,event),function(callback){callback(element,phase,data)})})}function<sp/>queueAnimation(element,event,options){function<sp/>notifyProgress(runner,event,phase,data){triggerCallback(event,element,phase,data),runner.progress(event,phase,data)}function<sp/>close(reject){applyAnimationClasses(element,options),applyAnimationStyles(element,options),options.domOperation(),runner.complete(!reject)}var<sp/>node,parent;element=stripCommentsFromElement(element),element&amp;&amp;(node=getDomNode(element),parent=element.parent()),options=prepareAnimationOptions(options);var<sp/>runner=new<sp/>$$AnimateRunner;if(!node)return<sp/>close(),runner;isArray(options.addClass)&amp;&amp;(options.addClass=options.addClass.join(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;)),isArray(options.removeClass)&amp;&amp;(options.removeClass=options.removeClass.join(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;)),options.from&amp;&amp;!isObject(options.from)&amp;&amp;(options.from=null),options.to&amp;&amp;!isObject(options.to)&amp;&amp;(options.to=null);var<sp/>className=[node.className,options.addClass,options.removeClass].join(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;);if(!isAnimatableClassName(className))return<sp/>close(),runner;var<sp/>isStructural=[&quot;</highlight><highlight class="normal">enter</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">move</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">leave</highlight><highlight class="stringliteral">&quot;].indexOf(event)&gt;=0,skipAnimations=!animationsEnabled||disabledElementsLookup.get(node),existingAnimation=!skipAnimations&amp;&amp;activeAnimationsLookup.get(node)||{},hasExistingAnimation=!!existingAnimation.state;if(skipAnimations||hasExistingAnimation&amp;&amp;existingAnimation.state==PRE_DIGEST_STATE||(skipAnimations=!areAnimationsAllowed(element,parent,event)),skipAnimations)return<sp/>close(),runner;isStructural&amp;&amp;closeChildAnimations(element);var<sp/>newAnimation={structural:isStructural,element:element,event:event,close:close,options:options,runner:runner};if(hasExistingAnimation){var<sp/>skipAnimationFlag=isAllowed(&quot;</highlight><highlight class="normal">skip</highlight><highlight class="stringliteral">&quot;,element,newAnimation,existingAnimation);if(skipAnimationFlag)return<sp/>existingAnimation.state===RUNNING_STATE?(close(),runner):(mergeAnimationOptions(element,existingAnimation.options,options),existingAnimation.runner);var<sp/>cancelAnimationFlag=isAllowed(&quot;</highlight><highlight class="normal">cancel</highlight><highlight class="stringliteral">&quot;,element,newAnimation,existingAnimation);if(cancelAnimationFlag)existingAnimation.state===RUNNING_STATE?existingAnimation.runner.end():existingAnimation.structural?existingAnimation.close():mergeAnimationOptions(element,newAnimation.options,existingAnimation.options);else{var<sp/>joinAnimationFlag=isAllowed(&quot;</highlight><highlight class="normal">join</highlight><highlight class="stringliteral">&quot;,element,newAnimation,existingAnimation);if(joinAnimationFlag){if(existingAnimation.state!==RUNNING_STATE)return<sp/>event=newAnimation.event=existingAnimation.event,options=mergeAnimationOptions(element,existingAnimation.options,newAnimation.options),runner;normalizeAnimationOptions(element,options)}}}else<sp/>normalizeAnimationOptions(element,options);var<sp/>isValidAnimation=newAnimation.structural;if(isValidAnimation||(isValidAnimation=&quot;</highlight><highlight class="normal">animate</highlight><highlight class="stringliteral">&quot;===newAnimation.event&amp;&amp;Object.keys(newAnimation.options.to||{}).length&gt;0||hasAnimationClasses(newAnimation.options)),!isValidAnimation)return<sp/>close(),clearElementAnimationState(element),runner;isStructural&amp;&amp;closeParentClassBasedAnimations(parent);var<sp/>counter=(existingAnimation.counter||0)+1;return<sp/>newAnimation.counter=counter,markElementAnimationState(element,PRE_DIGEST_STATE,newAnimation),$rootScope.$$postDigest(function(){var<sp/>animationDetails=activeAnimationsLookup.get(node),animationCancelled=!animationDetails;animationDetails=animationDetails||{};var<sp/>parentElement=element.parent()||[],isValidAnimation=parentElement.length&gt;0&amp;&amp;(&quot;</highlight><highlight class="normal">animate</highlight><highlight class="stringliteral">&quot;===animationDetails.event||animationDetails.structural||hasAnimationClasses(animationDetails.options));if(animationCancelled||animationDetails.counter!==counter||!isValidAnimation)return<sp/>animationCancelled&amp;&amp;(applyAnimationClasses(element,options),applyAnimationStyles(element,options)),(animationCancelled||isStructural&amp;&amp;animationDetails.event!==event)&amp;&amp;(options.domOperation(),runner.end()),void(isValidAnimation||clearElementAnimationState(element));event=!animationDetails.structural&amp;&amp;hasAnimationClasses(animationDetails.options,!0)?&quot;</highlight><highlight class="normal">setClass</highlight><highlight class="stringliteral">&quot;:animationDetails.event,</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">animationDetails.structural&amp;&amp;closeParentClassBasedAnimations(parentElement),markElementAnimationState(element,RUNNING_STATE);var<sp/>realRunner=$$animation(element,event,animationDetails.options);realRunner.done(function(status){close(!status);var<sp/>animationDetails=activeAnimationsLookup.get(node);animationDetails&amp;&amp;animationDetails.counter===counter&amp;&amp;clearElementAnimationState(getDomNode(element)),notifyProgress(runner,event,&quot;</highlight><highlight class="normal">close</highlight><highlight class="stringliteral">&quot;,{})}),runner.setHost(realRunner),notifyProgress(runner,event,&quot;</highlight><highlight class="normal">start</highlight><highlight class="stringliteral">&quot;,{})}),runner}function<sp/>closeChildAnimations(element){var<sp/>node=getDomNode(element),children=node.querySelectorAll(&quot;</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&quot;+NG_ANIMATE_ATTR_NAME+&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;);forEach(children,function(child){var<sp/>state=parseInt(child.getAttribute(NG_ANIMATE_ATTR_NAME)),animationDetails=activeAnimationsLookup.get(child);switch(state){case<sp/>RUNNING_STATE:animationDetails.runner.end();case<sp/>PRE_DIGEST_STATE:animationDetails&amp;&amp;activeAnimationsLookup.remove(child)}})}function<sp/>clearElementAnimationState(element){var<sp/>node=getDomNode(element);node.removeAttribute(NG_ANIMATE_ATTR_NAME),activeAnimationsLookup.remove(node)}function<sp/>isMatchingElement(nodeOrElmA,nodeOrElmB){return<sp/>getDomNode(nodeOrElmA)===getDomNode(nodeOrElmB)}function<sp/>closeParentClassBasedAnimations(startingElement){function<sp/>examineParentAnimation(node,animationDetails){!animationDetails.structural&amp;&amp;hasAnimationClasses(animationDetails.options)&amp;&amp;(animationDetails.state===RUNNING_STATE&amp;&amp;animationDetails.runner.end(),clearElementAnimationState(node))}for(var<sp/>parentNode=getDomNode(startingElement);;){if(!parentNode||parentNode.nodeType!==ELEMENT_NODE)break;var<sp/>animationDetails=activeAnimationsLookup.get(parentNode);animationDetails&amp;&amp;examineParentAnimation(parentNode,animationDetails),parentNode=parentNode.parentNode}}function<sp/>areAnimationsAllowed(element,parentElement,event){var<sp/>animateChildren,bodyElementDetected=!1,rootElementDetected=!1,parentAnimationDetected=!1,parentHost=element.data(NG_ANIMATE_PIN_DATA);for(parentHost&amp;&amp;(parentElement=parentHost);parentElement&amp;&amp;parentElement.length;){rootElementDetected||(rootElementDetected=isMatchingElement(parentElement,$rootElement));var<sp/>parentNode=parentElement[0];if(parentNode.nodeType!==ELEMENT_NODE)break;var<sp/>details=activeAnimationsLookup.get(parentNode)||{};if(parentAnimationDetected||(parentAnimationDetected=details.structural||disabledElementsLookup.get(parentNode)),isUndefined(animateChildren)||animateChildren===!0){var<sp/>value=parentElement.data(NG_ANIMATE_CHILDREN_DATA);isDefined(value)&amp;&amp;(animateChildren=value)}if(parentAnimationDetected&amp;&amp;animateChildren===!1)break;rootElementDetected||(rootElementDetected=isMatchingElement(parentElement,$rootElement),rootElementDetected||(parentHost=parentElement.data(NG_ANIMATE_PIN_DATA),parentHost&amp;&amp;(parentElement=parentHost))),bodyElementDetected||(bodyElementDetected=isMatchingElement(parentElement,bodyElement)),parentElement=parentElement.parent()}var<sp/>allowAnimation=!parentAnimationDetected||animateChildren;return<sp/>allowAnimation&amp;&amp;rootElementDetected&amp;&amp;bodyElementDetected}function<sp/>markElementAnimationState(element,state,details){details=details||{},details.state=state;var<sp/>node=getDomNode(element);node.setAttribute(NG_ANIMATE_ATTR_NAME,state);var<sp/>oldValue=activeAnimationsLookup.get(node),newValue=oldValue?extend(oldValue,details):details;activeAnimationsLookup.put(node,newValue)}var<sp/>activeAnimationsLookup=new<sp/>$$HashMap,disabledElementsLookup=new<sp/>$$HashMap,animationsEnabled=null,deregisterWatch=$rootScope.$watch(function(){return<sp/>0===$templateRequest.totalPendingRequests},function(isEmpty){isEmpty&amp;&amp;(deregisterWatch(),$rootScope.$$postDigest(function(){$rootScope.$$postDigest(function(){null===animationsEnabled&amp;&amp;(animationsEnabled=!0)})}))}),bodyElement=jqLite($document[0].body),callbackRegistry={},classNameFilter=$animateProvider.classNameFilter(),isAnimatableClassName=classNameFilter?function(className){return<sp/>classNameFilter.test(className)}:function(){return!0},applyAnimationClasses=applyAnimationClassesFactory($$jqLite);return{on:function(event,container,callback){var<sp/>node=extractElementNode(container);callbackRegistry[event]=callbackRegistry[event]||[],callbackRegistry[event].push({node:node,callback:callback})},off:function(event,container,callback){function<sp/>filterFromRegistry(list,matchContainer,matchCallback){var<sp/>containerNode=extractElementNode(matchContainer);return<sp/>list.filter(function(entry){var<sp/>isMatch=entry.node===containerNode&amp;&amp;(!matchCallback||entry.callback===matchCallback);return!isMatch})}var<sp/>entries=callbackRegistry[event];entries&amp;&amp;(callbackRegistry[event]=1===arguments.length?null:filterFromRegistry(entries,container,callback))},pin:function(element,parentElement){assertArg(isElement(element),&quot;</highlight><highlight class="normal">element</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">not<sp/>an<sp/>element</highlight><highlight class="stringliteral">&quot;),assertArg(isElement(parentElement),&quot;</highlight><highlight class="normal">parentElement</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">not<sp/>an<sp/>element</highlight><highlight class="stringliteral">&quot;),element.data(NG_ANIMATE_PIN_DATA,parentElement)},push:function(element,event,options,domOperation){return<sp/>options=options||{},options.domOperation=domOperation,queueAnimation(element,event,options)},enabled:function(element,bool){var<sp/>argCount=arguments.length;if(0===argCount)bool=!!animationsEnabled;else{var<sp/>hasElement=isElement(element);if(hasElement){var<sp/>node=getDomNode(element),recordExists=disabledElementsLookup.get(node);1===argCount?bool=!recordExists:(bool=!!bool,bool?recordExists&amp;&amp;disabledElementsLookup.remove(node):disabledElementsLookup.put(node,!0))}else<sp/>bool=animationsEnabled=!!element}return<sp/>bool}}}]}],$$rAFMutexFactory=[&quot;</highlight><highlight class="normal">$$rAF</highlight><highlight class="stringliteral">&quot;,function($$rAF){return<sp/>function(){var<sp/>passed=!1;return<sp/>$$rAF(function(){passed=!0}),function(fn){passed?fn():$$rAF(fn)}}}],$$AnimateRunnerFactory=[&quot;</highlight><highlight class="normal">$q</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$rAFMutex</highlight><highlight class="stringliteral">&quot;,function($q,$$rAFMutex){function<sp/>AnimateRunner(host){this.setHost(host),this._doneCallbacks=[],this._runInAnimationFrame=$$rAFMutex(),this._state=0}var<sp/>INITIAL_STATE=0,DONE_PENDING_STATE=1,DONE_COMPLETE_STATE=2;return<sp/>AnimateRunner.chain=function(chain,callback){function<sp/>next(){return<sp/>index===chain.length?void<sp/>callback(!0):void<sp/>chain[index](function(response){return<sp/>response===!1?void<sp/>callback(!1):(index++,void<sp/>next())})}var<sp/>index=0;next()},AnimateRunner.all=function(runners,callback){function<sp/>onProgress(response){status=status&amp;&amp;response,++count===runners.length&amp;&amp;callback(status)}var<sp/>count=0,status=!0;forEach(runners,function(runner){runner.done(onProgress)})},AnimateRunner.prototype={setHost:function(host){this.host=host||{}},done:function(fn){this._state===DONE_COMPLETE_STATE?fn():this._doneCallbacks.push(fn)},progress:noop,getPromise:function(){if(!this.promise){var<sp/>self=this;this.promise=$q(function(resolve,reject){self.done(function(status){status===!1?reject():resolve()})})}return<sp/>this.promise},then:function(resolveHandler,rejectHandler){return<sp/>this.getPromise().then(resolveHandler,rejectHandler)},&quot;</highlight><highlight class="keywordflow">catch</highlight><highlight class="stringliteral">&quot;:function(handler){return<sp/>this.getPromise()[&quot;</highlight><highlight class="keywordflow">catch</highlight><highlight class="stringliteral">&quot;](handler)},&quot;</highlight><highlight class="keywordflow">finally</highlight><highlight class="stringliteral">&quot;:function(handler){return<sp/>this.getPromise()[&quot;</highlight><highlight class="keywordflow">finally</highlight><highlight class="stringliteral">&quot;](handler)},pause:function(){this.host.pause&amp;&amp;this.host.pause()},resume:function(){this.host.resume&amp;&amp;this.host.resume()},end:function(){this.host.end&amp;&amp;this.host.end(),this._resolve(!0)},cancel:function(){this.host.cancel&amp;&amp;this.host.cancel(),this._resolve(!1)},complete:function(response){var<sp/>self=this;self._state===INITIAL_STATE&amp;&amp;(self._state=DONE_PENDING_STATE,self._runInAnimationFrame(function(){self._resolve(response)}))},_resolve:function(response){this._state!==DONE_COMPLETE_STATE&amp;&amp;(forEach(this._doneCallbacks,function(fn){fn(response)}),this._doneCallbacks.length=0,this._state=DONE_COMPLETE_STATE)}},AnimateRunner}],$$AnimationProvider=[&quot;</highlight><highlight class="normal">$animateProvider</highlight><highlight class="stringliteral">&quot;,function($animateProvider){function<sp/>setRunner(element,runner){element.data(RUNNER_STORAGE_KEY,runner)}function<sp/>removeRunner(element){element.removeData(RUNNER_STORAGE_KEY)}function<sp/>getRunner(element){return<sp/>element.data(RUNNER_STORAGE_KEY)}var<sp/>NG_ANIMATE_REF_ATTR=&quot;</highlight><highlight class="normal">ng-animate-ref</highlight><highlight class="stringliteral">&quot;,drivers=this.drivers=[],RUNNER_STORAGE_KEY=&quot;</highlight><highlight class="normal">$$animationRunner</highlight><highlight class="stringliteral">&quot;;this.$get=[&quot;</highlight><highlight class="normal">$$jqLite</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$rootScope</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$injector</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$AnimateRunner</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$rAFScheduler</highlight><highlight class="stringliteral">&quot;,function($$jqLite,$rootScope,$injector,$$AnimateRunner,$$rAFScheduler){var<sp/>animationQueue=[],applyAnimationClasses=applyAnimationClassesFactory($$jqLite),totalPendingClassBasedAnimations=0,totalActiveClassBasedAnimations=0,classBasedAnimationsQueue=[];return<sp/>function(element,event,options){function<sp/>getAnchorNodes(node){var<sp/>SELECTOR=&quot;</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&quot;+NG_ANIMATE_REF_ATTR+&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;,items=node.hasAttribute(NG_ANIMATE_REF_ATTR)?[node]:node.querySelectorAll(SELECTOR),anchors=[];return<sp/>forEach(items,function(node){var<sp/>attr=node.getAttribute(NG_ANIMATE_REF_ATTR);attr&amp;&amp;attr.length&amp;&amp;anchors.push(node)}),anchors}function<sp/>groupAnimations(animations){var<sp/>preparedAnimations=[],refLookup={};forEach(animations,function(animation,index){var<sp/>element=animation.element,node=getDomNode(element),event=animation.event,enterOrMove=[&quot;</highlight><highlight class="normal">enter</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">move</highlight><highlight class="stringliteral">&quot;].indexOf(event)&gt;=0,anchorNodes=animation.structural?getAnchorNodes(node):[];if(anchorNodes.length){var<sp/>direction=enterOrMove?&quot;</highlight><highlight class="normal">to</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">from</highlight><highlight class="stringliteral">&quot;;forEach(anchorNodes,function(anchor){var<sp/>key=anchor.getAttribute(NG_ANIMATE_REF_ATTR);refLookup[key]=refLookup[key]||{},refLookup[key][direction]={animationID:index,element:jqLite(anchor)}})}else<sp/>preparedAnimations.push(animation)});var<sp/>usedIndicesLookup={},anchorGroups={};return<sp/>forEach(refLookup,function(operations,key){var<sp/>from=operations.from,to=operations.to;if(!from||!to){var<sp/>index=from?from.animationID:to.animationID,indexKey=index.toString();return<sp/>void(usedIndicesLookup[indexKey]||(usedIndicesLookup[indexKey]=!0,preparedAnimations.push(animations[index])))}var<sp/>fromAnimation=animations[from.animationID],toAnimation=animations[to.animationID],lookupKey=from.animationID.toString();if(!anchorGroups[lookupKey]){var<sp/>group=anchorGroups[lookupKey]={structural:!0,beforeStart:function(){fromAnimation.beforeStart(),toAnimation.beforeStart()},close:function(){fromAnimation.close(),toAnimation.close()},classes:cssClassesIntersection(fromAnimation.classes,toAnimation.classes),from:fromAnimation,to:toAnimation,anchors:[]};group.classes.length?preparedAnimations.push(group):(preparedAnimations.push(fromAnimation),preparedAnimations.push(toAnimation))}anchorGroups[lookupKey].anchors.push({out:from.element,&quot;</highlight><highlight class="normal">in</highlight><highlight class="stringliteral">&quot;:to.element})}),preparedAnimations}function<sp/>cssClassesIntersection(a,b){a=a.split(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;),b=b.split(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;);for(var<sp/>matches=[],i=0;i&lt;a.length;i++){var<sp/>aa=a[i];if(&quot;</highlight><highlight class="normal">ng-</highlight><highlight class="stringliteral">&quot;!==aa.substring(0,3))for(var<sp/>j=0;j&lt;b.length;j++)if(aa===b[j]){matches.push(aa);break}}return<sp/>matches.join(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;)}function<sp/>invokeFirstDriver(animationDetails){for(var<sp/>i=drivers.length-1;i&gt;=0;i--){var<sp/>driverName=drivers[i];if($injector.has(driverName)){var<sp/>factory=$injector.get(driverName),driver=factory(animationDetails);if(driver)return<sp/>driver}}}function<sp/>beforeStart(){element.addClass(NG_ANIMATE_CLASSNAME),tempClasses&amp;&amp;$$jqLite.addClass(element,tempClasses)}function<sp/>updateAnimationRunners(animation,newRunner){function<sp/>update(element){getRunner(element).setHost(newRunner)}animation.from&amp;&amp;animation.to?(update(animation.from.element),update(animation.to.element)):update(animation.element)}function<sp/>handleDestroyedElement(){var<sp/>runner=getRunner(element);!runner||&quot;</highlight><highlight class="normal">leave</highlight><highlight class="stringliteral">&quot;===event&amp;&amp;options.$$domOperationFired||runner.end()}function<sp/>close(rejected){element.off(&quot;</highlight><highlight class="normal">$destroy</highlight><highlight class="stringliteral">&quot;,handleDestroyedElement),removeRunner(element),applyAnimationClasses(element,options),applyAnimationStyles(element,options),options.domOperation(),tempClasses&amp;&amp;$$jqLite.removeClass(element,tempClasses),element.removeClass(NG_ANIMATE_CLASSNAME),runner.complete(!rejected)}options=prepareAnimationOptions(options);var<sp/>isStructural=[&quot;</highlight><highlight class="normal">enter</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">move</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">leave</highlight><highlight class="stringliteral">&quot;].indexOf(event)&gt;=0,runner=new<sp/>$$AnimateRunner({end:function(){close()},cancel:function(){close(!0)}});if(!drivers.length)return<sp/>close(),runner;setRunner(element,runner);var<sp/>classes=mergeClasses(element.attr(&quot;</highlight><highlight class="keyword">class</highlight><highlight class="stringliteral">&quot;),mergeClasses(options.addClass,options.removeClass)),tempClasses=options.tempClasses;tempClasses&amp;&amp;(classes+=&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+tempClasses,options.tempClasses=null);var<sp/>classBasedIndex;return<sp/>isStructural||(classBasedIndex=totalPendingClassBasedAnimations,totalPendingClassBasedAnimations+=1),animationQueue.push({element:element,classes:classes,event:event,classBasedIndex:classBasedIndex,structural:isStructural,options:options,beforeStart:beforeStart,close:close}),element.on(&quot;</highlight><highlight class="normal">$destroy</highlight><highlight class="stringliteral">&quot;,handleDestroyedElement),animationQueue.length&gt;1?runner:($rootScope.$$postDigest(function(){totalActiveClassBasedAnimations=totalPendingClassBasedAnimations,totalPendingClassBasedAnimations=0,classBasedAnimationsQueue.length=0;var<sp/>animations=[];forEach(animationQueue,function(entry){getRunner(entry.element)&amp;&amp;animations.push(entry)}),animationQueue.length=0,forEach(groupAnimations(animations),function(animationEntry){function<sp/>triggerAnimationStart(){animationEntry.beforeStart();var<sp/>startAnimationFn,closeFn=animationEntry.close,targetElement=animationEntry.anchors?animationEntry.from.element||animationEntry.to.element:animationEntry.element;if(getRunner(targetElement)){var<sp/>operation=invokeFirstDriver(animationEntry);operation&amp;&amp;(startAnimationFn=operation.start)}if(startAnimationFn){var<sp/>animationRunner=startAnimationFn();animationRunner.done(function(status){closeFn(!status)}),updateAnimationRunners(animationEntry,animationRunner)}else<sp/>closeFn()}animationEntry.structural?triggerAnimationStart():(classBasedAnimationsQueue.push({node:getDomNode(animationEntry.element),fn:triggerAnimationStart}),animationEntry.classBasedIndex===totalActiveClassBasedAnimations-1&amp;&amp;(classBasedAnimationsQueue=classBasedAnimationsQueue.sort(function(a,b){return<sp/>b.node.contains(a.node)}).map(function(entry){return<sp/>entry.fn}),$$rAFScheduler(classBasedAnimationsQueue)))})}),runner)}}]}];angular.module(&quot;</highlight><highlight class="normal">ngAnimate</highlight><highlight class="stringliteral">&quot;,[]).directive(&quot;</highlight><highlight class="normal">ngAnimateChildren</highlight><highlight class="stringliteral">&quot;,$$AnimateChildrenDirective).factory(&quot;</highlight><highlight class="normal">$$rAFMutex</highlight><highlight class="stringliteral">&quot;,$$rAFMutexFactory).factory(&quot;</highlight><highlight class="normal">$$rAFScheduler</highlight><highlight class="stringliteral">&quot;,$$rAFSchedulerFactory).factory(&quot;</highlight><highlight class="normal">$$AnimateRunner</highlight><highlight class="stringliteral">&quot;,$$AnimateRunnerFactory).provider(&quot;</highlight><highlight class="normal">$$animateQueue</highlight><highlight class="stringliteral">&quot;,$$AnimateQueueProvider).provider(&quot;</highlight><highlight class="normal">$$animation</highlight><highlight class="stringliteral">&quot;,$$AnimationProvider).provider(&quot;</highlight><highlight class="normal">$animateCss</highlight><highlight class="stringliteral">&quot;,$AnimateCssProvider).provider(&quot;</highlight><highlight class="normal">$$animateCssDriver</highlight><highlight class="stringliteral">&quot;,$$AnimateCssDriverProvider).provider(&quot;</highlight><highlight class="normal">$$animateJs</highlight><highlight class="stringliteral">&quot;,$$AnimateJsProvider).provider(&quot;</highlight><highlight class="normal">$$animateJsDriver</highlight><highlight class="stringliteral">&quot;,$$AnimateJsDriverProvider)}(window,window.angular),function(window,angular,undefined){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>$$CookieWriter($document,$log,$browser){function<sp/>buildCookieString(name,value,options){var<sp/>path,expires;options=options||{},expires=options.expires,path=angular.isDefined(options.path)?options.path:cookiePath,value===undefined&amp;&amp;(expires=&quot;</highlight><highlight class="normal">Thu,<sp/>01<sp/>Jan<sp/>1970<sp/>00:00:00<sp/>GMT</highlight><highlight class="stringliteral">&quot;,value=&quot;</highlight><highlight class="stringliteral">&quot;),angular.isString(expires)&amp;&amp;(expires=new<sp/>Date(expires));var<sp/>str=encodeURIComponent(name)+&quot;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;+encodeURIComponent(value);str+=path?&quot;</highlight><highlight class="normal">;path=</highlight><highlight class="stringliteral">&quot;+path:&quot;</highlight><highlight class="stringliteral">&quot;,str+=options.domain?&quot;</highlight><highlight class="normal">;domain=</highlight><highlight class="stringliteral">&quot;+options.domain:&quot;</highlight><highlight class="stringliteral">&quot;,str+=expires?&quot;</highlight><highlight class="normal">;expires=</highlight><highlight class="stringliteral">&quot;+expires.toUTCString():&quot;</highlight><highlight class="stringliteral">&quot;,str+=options.secure?&quot;</highlight><highlight class="normal">;secure</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="stringliteral">&quot;;var<sp/>cookieLength=str.length+1;return<sp/>cookieLength&gt;4096&amp;&amp;$log.warn(&quot;</highlight><highlight class="normal">Cookie<sp/></highlight><highlight class="stringliteral">&apos;&quot;+name+&quot;&apos;</highlight><highlight class="normal"><sp/>possibly<sp/>not<sp/>set<sp/>or<sp/>overflowed<sp/>because<sp/>it<sp/>was<sp/>too<sp/>large<sp/>(</highlight><highlight class="stringliteral">&quot;+cookieLength+&quot;</highlight><highlight class="normal"><sp/>&gt;<sp/>4096<sp/>bytes)!</highlight><highlight class="stringliteral">&quot;),str}var<sp/>cookiePath=$browser.baseHref(),rawDocument=$document[0];return<sp/>function(name,value,options){rawDocument.cookie=buildCookieString(name,value,options)}}angular.module(&quot;</highlight><highlight class="normal">ngCookies</highlight><highlight class="stringliteral">&quot;,[&quot;</highlight><highlight class="normal">ng</highlight><highlight class="stringliteral">&quot;]).provider(&quot;</highlight><highlight class="normal">$cookies</highlight><highlight class="stringliteral">&quot;,[function(){function<sp/>calcOptions(options){return<sp/>options?angular.extend({},defaults,options):defaults}var<sp/>defaults=this.defaults={};this.$get=[&quot;</highlight><highlight class="normal">$$cookieReader</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$$cookieWriter</highlight><highlight class="stringliteral">&quot;,function($$cookieReader,$$cookieWriter){return{get:function(key){return<sp/>$$cookieReader()[key]},getObject:function(key){var<sp/>value=this.get(key);return<sp/>value?angular.fromJson(value):value},getAll:function(){return<sp/>$$cookieReader()},put:function(key,value,options){$$cookieWriter(key,value,calcOptions(options))},putObject:function(key,value,options){this.put(key,angular.toJson(value),options)},remove:function(key,options){$$cookieWriter(key,undefined,calcOptions(options))}}}]}]),angular.module(&quot;</highlight><highlight class="normal">ngCookies</highlight><highlight class="stringliteral">&quot;).factory(&quot;</highlight><highlight class="normal">$cookieStore</highlight><highlight class="stringliteral">&quot;,[&quot;</highlight><highlight class="normal">$cookies</highlight><highlight class="stringliteral">&quot;,function($cookies){return{get:function(key){return<sp/>$cookies.getObject(key)},put:function(key,value){$cookies.putObject(key,value)},remove:function(key){$cookies.remove(key)}}}]),$$CookieWriter.$inject=[&quot;</highlight><highlight class="normal">$document</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$log</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$browser</highlight><highlight class="stringliteral">&quot;],angular.module(&quot;</highlight><highlight class="normal">ngCookies</highlight><highlight class="stringliteral">&quot;).provider(&quot;</highlight><highlight class="normal">$$cookieWriter</highlight><highlight class="stringliteral">&quot;,function(){this.$get=$$CookieWriter})}(window,window.angular),function(window,angular,undefined){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>isValidDottedPath(path){return<sp/>null!=path&amp;&amp;&quot;</highlight><highlight class="stringliteral">&quot;!==path&amp;&amp;&quot;</highlight><highlight class="normal">hasOwnProperty</highlight><highlight class="stringliteral">&quot;!==path&amp;&amp;MEMBER_NAME_REGEX.test(&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;+path)}function<sp/>lookupDottedPath(obj,path){if(!isValidDottedPath(path))throw<sp/>$resourceMinErr(&quot;</highlight><highlight class="normal">badmember</highlight><highlight class="stringliteral">&quot;,&apos;Dotted<sp/>member<sp/>path<sp/>&quot;</highlight><highlight class="normal">@{0}</highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>invalid.&apos;,path);for(var<sp/>keys=path.split(&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;),i=0,ii=keys.length;ii&gt;i&amp;&amp;obj!==undefined;i++){var<sp/>key=keys[i];obj=null!==obj?obj[key]:undefined}return<sp/>obj}function<sp/>shallowClearAndCopy(src,dst){dst=dst||{},angular.forEach(dst,function(value,key){delete<sp/>dst[key]});for(var<sp/>key<sp/>in<sp/>src)!src.hasOwnProperty(key)||&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;===key.charAt(0)&amp;&amp;&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;===key.charAt(1)||(dst[key]=src[key]);return<sp/>dst}var<sp/>$resourceMinErr=angular.$$minErr(&quot;</highlight><highlight class="normal">$resource</highlight><highlight class="stringliteral">&quot;),MEMBER_NAME_REGEX=/^(\.[a-zA-Z_$@][0-9a-zA-Z_$@]*)+$/;angular.module(&quot;</highlight><highlight class="normal">ngResource</highlight><highlight class="stringliteral">&quot;,[&quot;</highlight><highlight class="normal">ng</highlight><highlight class="stringliteral">&quot;]).provider(&quot;</highlight><highlight class="normal">$resource</highlight><highlight class="stringliteral">&quot;,function(){var<sp/>provider=this;this.defaults={stripTrailingSlashes:!0,actions:{get:{method:&quot;</highlight><highlight class="normal">GET</highlight><highlight class="stringliteral">&quot;},save:{method:&quot;</highlight><highlight class="normal">POST</highlight><highlight class="stringliteral">&quot;},query:{method:&quot;</highlight><highlight class="normal">GET</highlight><highlight class="stringliteral">&quot;,isArray:!0},remove:{method:&quot;</highlight><highlight class="normal">DELETE</highlight><highlight class="stringliteral">&quot;},&quot;</highlight><highlight class="keyword">delete</highlight><highlight class="stringliteral">&quot;:{method:&quot;</highlight><highlight class="normal">DELETE</highlight><highlight class="stringliteral">&quot;}}},this.$get=[&quot;</highlight><highlight class="normal">$http</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$q</highlight><highlight class="stringliteral">&quot;,function($http,$q){function<sp/>encodeUriSegment(val){return<sp/>encodeUriQuery(val,!0).replace(/%26/gi,&quot;</highlight><highlight class="normal">&amp;</highlight><highlight class="stringliteral">&quot;).replace(/%3D/gi,&quot;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;).replace(/%2B/gi,&quot;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&quot;)}function<sp/>encodeUriQuery(val,pctEncodeSpaces){return<sp/>encodeURIComponent(val).replace(/%40/gi,&quot;</highlight><highlight class="stringliteral">@&quot;).replace(/%3A/gi,&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;).replace(/%24/g,&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;).replace(/%2C/gi,&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;).replace(/%20/g,pctEncodeSpaces?&quot;</highlight><highlight class="normal">%20</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&quot;)}function<sp/>Route(template,defaults){this.template=template,this.defaults=extend({},provider.defaults,defaults),this.urlParams={}}function<sp/>resourceFactory(url,paramDefaults,actions,options){function<sp/>extractParams(data,actionParams){var<sp/>ids={};return<sp/>actionParams=extend({},paramDefaults,actionParams),forEach(actionParams,function(value,key){isFunction(value)&amp;&amp;(value=value()),ids[key]=value&amp;&amp;value.charAt&amp;&amp;&quot;</highlight><highlight class="stringliteral">@&quot;==value.charAt(0)?lookupDottedPath(data,value.substr(1)):value}),ids}function<sp/>defaultResponseInterceptor(response){return<sp/>response.resource}function<sp/>Resource(value){shallowClearAndCopy(value||{},this)}var<sp/>route=new<sp/>Route(url,options);return<sp/>actions=extend({},provider.defaults.actions,actions),Resource.prototype.toJSON=function(){var<sp/>data=extend({},this);return<sp/>delete<sp/>data.$promise,delete<sp/>data.$resolved,data},forEach(actions,function(action,name){var<sp/>hasBody=/^(POST|PUT|PATCH)$/i.test(action.method);Resource[name]=function(a1,a2,a3,a4){var<sp/>data,success,error,params={};switch(arguments.length){case<sp/>4:error=a4,success=a3;case<sp/>3:case<sp/>2:if(!isFunction(a2)){params=a1,data=a2,success=a3;break}if(isFunction(a1)){success=a1,error=a2;break}success=a2,error=a3;case<sp/>1:isFunction(a1)?success=a1:hasBody?data=a1:params=a1;break;case<sp/>0:break;default:throw<sp/>$resourceMinErr(&quot;</highlight><highlight class="normal">badargs</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Expected<sp/>up<sp/>to<sp/>4<sp/>arguments<sp/>[params,<sp/>data,<sp/>success,<sp/>error],<sp/>got<sp/>{0}<sp/>arguments</highlight><highlight class="stringliteral">&quot;,arguments.length)}var<sp/>isInstanceCall=this<sp/>instanceof<sp/>Resource,value=isInstanceCall?data:action.isArray?[]:new<sp/>Resource(data),httpConfig={},responseInterceptor=action.interceptor&amp;&amp;action.interceptor.response||defaultResponseInterceptor,responseErrorInterceptor=action.interceptor&amp;&amp;action.interceptor.responseError||undefined;forEach(action,function(value,key){&quot;</highlight><highlight class="normal">params</highlight><highlight class="stringliteral">&quot;!=key&amp;&amp;&quot;</highlight><highlight class="normal">isArray</highlight><highlight class="stringliteral">&quot;!=key&amp;&amp;&quot;</highlight><highlight class="normal">interceptor</highlight><highlight class="stringliteral">&quot;!=key&amp;&amp;(httpConfig[key]=copy(value))}),hasBody&amp;&amp;(httpConfig.data=data),route.setUrlParams(httpConfig,extend({},extractParams(data,action.params||{}),params),action.url);var<sp/>promise=$http(httpConfig).then(function(response){var<sp/>data=response.data,promise=value.$promise;if(data){if(angular.isArray(data)!==!!action.isArray)throw<sp/>$resourceMinErr(&quot;</highlight><highlight class="normal">badcfg</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Error<sp/>in<sp/>resource<sp/>configuration<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>action<sp/>`{0}`.<sp/>Expected<sp/>response<sp/>to<sp/>contain<sp/>an<sp/>{1}<sp/>but<sp/>got<sp/>an<sp/>{2}<sp/>(Request:<sp/>{3}<sp/>{4})</highlight><highlight class="stringliteral">&quot;,name,action.isArray?&quot;</highlight><highlight class="normal">array</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="keywordtype">object</highlight><highlight class="stringliteral">&quot;,angular.isArray(data)?&quot;</highlight><highlight class="normal">array</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="keywordtype">object</highlight><highlight class="stringliteral">&quot;,httpConfig.method,httpConfig.url);action.isArray?(value.length=0,forEach(data,function(item){&quot;</highlight><highlight class="keywordtype">object</highlight><highlight class="stringliteral">&quot;==typeof<sp/>item?value.push(new<sp/>Resource(item)):value.push(item)})):(shallowClearAndCopy(data,value),value.$promise=promise)}return<sp/>value.$resolved=!0,response.resource=value,response},function(response){return<sp/>value.$resolved=!0,(error||noop)(response),$q.reject(response)});return<sp/>promise=promise.then(function(response){var<sp/>value=responseInterceptor(response);return(success||noop)(value,response.headers),value},responseErrorInterceptor),isInstanceCall?promise:(value.$promise=promise,value.$resolved=!1,value)},Resource.prototype[&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;+name]=function(params,success,error){isFunction(params)&amp;&amp;(error=success,success=params,params={});var<sp/>result=Resource[name].call(this,params,this,success,error);return<sp/>result.$promise||result}}),Resource.bind=function(additionalParamDefaults){return<sp/>resourceFactory(url,extend({},paramDefaults,additionalParamDefaults),actions)},Resource}var<sp/>noop=angular.noop,forEach=angular.forEach,extend=angular.extend,copy=angular.copy,isFunction=angular.isFunction;return<sp/>Route.prototype={setUrlParams:function(config,params,actionUrl){var<sp/>val,encodedVal,self=this,url=actionUrl||self.template,urlParams=self.urlParams={};forEach(url.split(/\W/),function(param){if(&quot;</highlight><highlight class="normal">hasOwnProperty</highlight><highlight class="stringliteral">&quot;===param)throw<sp/>$resourceMinErr(&quot;</highlight><highlight class="normal">badname</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">hasOwnProperty<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>parameter<sp/>name.</highlight><highlight class="stringliteral">&quot;);!new<sp/>RegExp(&quot;</highlight><highlight class="normal">^\\d+$</highlight><highlight class="stringliteral">&quot;).test(param)&amp;&amp;param&amp;&amp;new<sp/>RegExp(&quot;</highlight><highlight class="normal">(^|[^\\\\]):</highlight><highlight class="stringliteral">&quot;+param+&quot;</highlight><highlight class="normal">(\\W|$)</highlight><highlight class="stringliteral">&quot;).test(url)&amp;&amp;(urlParams[param]=!0)}),url=url.replace(/\\:/g,&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;),params=params||{},forEach(self.urlParams,function(_,urlParam){val=params.hasOwnProperty(urlParam)?params[urlParam]:self.defaults[urlParam],angular.isDefined(val)&amp;&amp;null!==val?(encodedVal=encodeUriSegment(val),url=url.replace(new<sp/>RegExp(&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;+urlParam+&quot;</highlight><highlight class="normal">(\\W|$)</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">g</highlight><highlight class="stringliteral">&quot;),function(match,p1){return<sp/>encodedVal+p1})):url=url.replace(new<sp/>RegExp(&quot;</highlight><highlight class="normal">(/?):</highlight><highlight class="stringliteral">&quot;+urlParam+&quot;</highlight><highlight class="normal">(\\W|$)</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">g</highlight><highlight class="stringliteral">&quot;),function(match,leadingSlashes,tail){return&quot;</highlight><highlight class="normal">/</highlight><highlight class="stringliteral">&quot;==tail.charAt(0)?tail:leadingSlashes+tail})}),self.defaults.stripTrailingSlashes&amp;&amp;(url=url.replace(/\/+$/,&quot;</highlight><highlight class="stringliteral">&quot;)||&quot;</highlight><highlight class="normal">/</highlight><highlight class="stringliteral">&quot;),url=url.replace(/\/\.(?=\w+($|\?))/,&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;),config.url=url.replace(/\/\\\./,&quot;</highlight><highlight class="normal">/.</highlight><highlight class="stringliteral">&quot;),forEach(params,function(value,key){self.urlParams[key]||(config.params=config.params||{},config.params[key]=value)})}},resourceFactory}]})}(window,window.angular),function(window,angular,undefined){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>$RouteProvider(){function<sp/>inherit(parent,extra){return<sp/>angular.extend(Object.create(parent),extra)}function<sp/>pathRegExp(path,opts){var<sp/>insensitive=opts.caseInsensitiveMatch,ret={originalPath:path,regexp:path},keys=ret.keys=[];return<sp/>path=path.replace(/([().])/g,&quot;</highlight><highlight class="normal">\\$1</highlight><highlight class="stringliteral">&quot;).replace(/(\/)?:(\w+)([\?\*])?/g,function(_,slash,key,option){var<sp/>optional=&quot;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;===option?option:null,star=&quot;</highlight><highlight class="normal">*</highlight><highlight class="stringliteral">&quot;===option?option:null;return<sp/>keys.push({name:key,optional:!!optional}),slash=slash||&quot;</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="stringliteral">&quot;+(optional?&quot;</highlight><highlight class="stringliteral">&quot;:slash)+&quot;</highlight><highlight class="normal">(?:</highlight><highlight class="stringliteral">&quot;+(optional?slash:&quot;</highlight><highlight class="stringliteral">&quot;)+(star&amp;&amp;&quot;</highlight><highlight class="normal">(.+?)</highlight><highlight class="stringliteral">&quot;||&quot;</highlight><highlight class="normal">([^/]+)</highlight><highlight class="stringliteral">&quot;)+(optional||&quot;</highlight><highlight class="stringliteral">&quot;)+&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;+(optional||&quot;</highlight><highlight class="stringliteral">&quot;)}).replace(/([\/$\*])/g,&quot;</highlight><highlight class="normal">\\$1</highlight><highlight class="stringliteral">&quot;),ret.regexp=new<sp/>RegExp(&quot;</highlight><highlight class="normal">^</highlight><highlight class="stringliteral">&quot;+path+&quot;</highlight><highlight class="normal">$</highlight><highlight class="stringliteral">&quot;,insensitive?&quot;</highlight><highlight class="normal">i</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="stringliteral">&quot;),ret}var<sp/>routes={};this.when=function(path,route){var<sp/>routeCopy=angular.copy(route);if(angular.isUndefined(routeCopy.reloadOnSearch)&amp;&amp;(routeCopy.reloadOnSearch=!0),angular.isUndefined(routeCopy.caseInsensitiveMatch)&amp;&amp;(routeCopy.caseInsensitiveMatch=this.caseInsensitiveMatch),routes[path]=angular.extend(routeCopy,path&amp;&amp;pathRegExp(path,routeCopy)),path){var<sp/>redirectPath=&quot;</highlight><highlight class="normal">/</highlight><highlight class="stringliteral">&quot;==path[path.length-1]?path.substr(0,path.length-1):path+&quot;</highlight><highlight class="normal">/</highlight><highlight class="stringliteral">&quot;;routes[redirectPath]=angular.extend({redirectTo:path},pathRegExp(redirectPath,routeCopy))}return<sp/>this},this.caseInsensitiveMatch=!1,this.otherwise=function(params){return&quot;</highlight><highlight class="keywordtype">string</highlight><highlight class="stringliteral">&quot;==typeof<sp/>params&amp;&amp;(params={redirectTo:params}),this.when(null,params),this},this.$get=[&quot;</highlight><highlight class="normal">$rootScope</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$location</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$routeParams</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$q</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$injector</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$templateRequest</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$sce</highlight><highlight class="stringliteral">&quot;,function($rootScope,$location,$routeParams,$q,$injector,$templateRequest,$sce){function<sp/>switchRouteMatcher(on,route){var<sp/>keys=route.keys,params={};if(!route.regexp)return<sp/>null;var<sp/>m=route.regexp.exec(on);if(!m)return<sp/>null;for(var<sp/>i=1,len=m.length;len&gt;i;++i){var<sp/>key=keys[i-1],val=m[i];key&amp;&amp;val&amp;&amp;(params[key.name]=val)}return<sp/>params}function<sp/>prepareRoute($locationEvent){var<sp/>lastRoute=$route.current;preparedRoute=parseRoute(),preparedRouteIsUpdateOnly=preparedRoute&amp;&amp;lastRoute&amp;&amp;preparedRoute.$$route===lastRoute.$$route&amp;&amp;angular.equals(preparedRoute.pathParams,lastRoute.pathParams)&amp;&amp;!preparedRoute.reloadOnSearch&amp;&amp;!forceReload,preparedRouteIsUpdateOnly||!lastRoute&amp;&amp;!preparedRoute||$rootScope.$broadcast(&quot;</highlight><highlight class="normal">$routeChangeStart</highlight><highlight class="stringliteral">&quot;,preparedRoute,lastRoute).defaultPrevented&amp;&amp;$locationEvent&amp;&amp;$locationEvent.preventDefault()}function<sp/>commitRoute(){var<sp/>lastRoute=$route.current,nextRoute=preparedRoute;preparedRouteIsUpdateOnly?(lastRoute.params=nextRoute.params,angular.copy(lastRoute.params,$routeParams),$rootScope.$broadcast(&quot;</highlight><highlight class="normal">$routeUpdate</highlight><highlight class="stringliteral">&quot;,lastRoute)):(nextRoute||lastRoute)&amp;&amp;(forceReload=!1,$route.current=nextRoute,nextRoute&amp;&amp;nextRoute.redirectTo&amp;&amp;(angular.isString(nextRoute.redirectTo)?$location.path(interpolate(nextRoute.redirectTo,nextRoute.params)).search(nextRoute.params).replace():$location.url(nextRoute.redirectTo(nextRoute.pathParams,$location.path(),$location.search())).replace()),$q.when(nextRoute).then(function(){if(nextRoute){var<sp/>template,templateUrl,locals=angular.extend({},nextRoute.resolve);return<sp/>angular.forEach(locals,function(value,key){locals[key]=angular.isString(value)?$injector.get(value):$injector.invoke(value,null,null,key)}),angular.isDefined(template=nextRoute.template)?angular.isFunction(template)&amp;&amp;(template=template(nextRoute.params)):angular.isDefined(templateUrl=nextRoute.templateUrl)&amp;&amp;(angular.isFunction(templateUrl)&amp;&amp;(templateUrl=templateUrl(nextRoute.params)),templateUrl=$sce.getTrustedResourceUrl(templateUrl),angular.isDefined(templateUrl)&amp;&amp;(nextRoute.loadedTemplateUrl=templateUrl,template=$templateRequest(templateUrl))),angular.isDefined(template)&amp;&amp;(locals.$template=template),$q.all(locals)}}).then(function(locals){nextRoute==$route.current&amp;&amp;(nextRoute&amp;&amp;(nextRoute.locals=locals,angular.copy(nextRoute.params,$routeParams)),$rootScope.$broadcast(&quot;</highlight><highlight class="normal">$routeChangeSuccess</highlight><highlight class="stringliteral">&quot;,nextRoute,lastRoute))},function(error){nextRoute==$route.current&amp;&amp;$rootScope.$broadcast(&quot;</highlight><highlight class="normal">$routeChangeError</highlight><highlight class="stringliteral">&quot;,nextRoute,lastRoute,error)}))}function<sp/>parseRoute(){var<sp/>params,match;return<sp/>angular.forEach(routes,function(route,path){!match&amp;&amp;(params=switchRouteMatcher($location.path(),route))&amp;&amp;(match=inherit(route,{params:angular.extend({},$location.search(),params),pathParams:params}),match.$$route=route)}),match||routes[null]&amp;&amp;inherit(routes[null],{params:{},pathParams:{}})}function<sp/>interpolate(string,params){var<sp/>result=[];return<sp/>angular.forEach((string||&quot;</highlight><highlight class="stringliteral">&quot;).split(&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;),function(segment,i){if(0===i)result.push(segment);else{var<sp/>segmentMatch=segment.match(/(\w+)(?:[?*])?(.*)/),key=segmentMatch[1];result.push(params[key]),result.push(segmentMatch[2]||&quot;</highlight><highlight class="stringliteral">&quot;),delete<sp/>params[key]}}),result.join(&quot;</highlight><highlight class="stringliteral">&quot;)}var<sp/>preparedRoute,preparedRouteIsUpdateOnly,forceReload=!1,$route={routes:routes,reload:function(){forceReload=!0,$rootScope.$evalAsync(function(){prepareRoute(),commitRoute()})},updateParams:function(newParams){if(!this.current||!this.current.$$route)throw<sp/>$routeMinErr(&quot;</highlight><highlight class="normal">norout</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Tried<sp/>updating<sp/>route<sp/>when<sp/>with<sp/>no<sp/>current<sp/>route</highlight><highlight class="stringliteral">&quot;);newParams=angular.extend({},this.current.params,newParams),$location.path(interpolate(this.current.$$route.originalPath,newParams)),$location.search(newParams)}};return<sp/>$rootScope.$on(&quot;</highlight><highlight class="normal">$locationChangeStart</highlight><highlight class="stringliteral">&quot;,prepareRoute),$rootScope.$on(&quot;</highlight><highlight class="normal">$locationChangeSuccess</highlight><highlight class="stringliteral">&quot;,commitRoute),$route}]}function<sp/>$RouteParamsProvider(){this.$get=function(){return{}}}function<sp/>ngViewFactory($route,$anchorScroll,$animate){return{restrict:&quot;</highlight><highlight class="normal">ECA</highlight><highlight class="stringliteral">&quot;,terminal:!0,priority:400,transclude:&quot;</highlight><highlight class="normal">element</highlight><highlight class="stringliteral">&quot;,link:function(scope,$element,attr,ctrl,$transclude){function<sp/>cleanupLastView(){previousLeaveAnimation&amp;&amp;($animate.cancel(previousLeaveAnimation),previousLeaveAnimation=null),currentScope&amp;&amp;(currentScope.$destroy(),currentScope=null),currentElement&amp;&amp;(previousLeaveAnimation=$animate.leave(currentElement),previousLeaveAnimation.then(function(){previousLeaveAnimation=null}),currentElement=null)}function<sp/>update(){var<sp/>locals=$route.current&amp;&amp;$route.current.locals,template=locals&amp;&amp;locals.$template;if(angular.isDefined(template)){var<sp/>newScope=scope.$new(),current=$route.current,clone=$transclude(newScope,function(clone){$animate.enter(clone,null,currentElement||$element).then(function(){!angular.isDefined(autoScrollExp)||autoScrollExp&amp;&amp;!scope.$eval(autoScrollExp)||$anchorScroll()}),cleanupLastView()});currentElement=clone,currentScope=current.scope=newScope,currentScope.$emit(&quot;</highlight><highlight class="normal">$viewContentLoaded</highlight><highlight class="stringliteral">&quot;),currentScope.$eval(onloadExp)}else<sp/>cleanupLastView()}var<sp/>currentScope,currentElement,previousLeaveAnimation,autoScrollExp=attr.autoscroll,onloadExp=attr.onload||&quot;</highlight><highlight class="stringliteral">&quot;;scope.$on(&quot;</highlight><highlight class="normal">$routeChangeSuccess</highlight><highlight class="stringliteral">&quot;,update),update()}}}function<sp/>ngViewFillContentFactory($compile,$controller,$route){return{restrict:&quot;</highlight><highlight class="normal">ECA</highlight><highlight class="stringliteral">&quot;,priority:-400,link:function(scope,$element){var<sp/>current=$route.current,locals=current.locals;$element.html(locals.$template);var<sp/>link=$compile($element.contents());if(current.controller){locals.$scope=scope;var<sp/>controller=$controller(current.controller,locals);current.controllerAs&amp;&amp;(scope[current.controllerAs]=controller),$element.data(&quot;</highlight><highlight class="normal">$ngControllerController</highlight><highlight class="stringliteral">&quot;,controller),$element.children().data(&quot;</highlight><highlight class="normal">$ngControllerController</highlight><highlight class="stringliteral">&quot;,controller)}link(scope)}}}var<sp/>ngRouteModule=angular.module(&quot;</highlight><highlight class="normal">ngRoute</highlight><highlight class="stringliteral">&quot;,[&quot;</highlight><highlight class="normal">ng</highlight><highlight class="stringliteral">&quot;]).provider(&quot;</highlight><highlight class="normal">$route</highlight><highlight class="stringliteral">&quot;,$RouteProvider),$routeMinErr=angular.$$minErr(&quot;</highlight><highlight class="normal">ngRoute</highlight><highlight class="stringliteral">&quot;);ngRouteModule.provider(&quot;</highlight><highlight class="normal">$routeParams</highlight><highlight class="stringliteral">&quot;,$RouteParamsProvider),ngRouteModule.directive(&quot;</highlight><highlight class="normal">ngView</highlight><highlight class="stringliteral">&quot;,ngViewFactory),ngRouteModule.directive(&quot;</highlight><highlight class="normal">ngView</highlight><highlight class="stringliteral">&quot;,ngViewFillContentFactory),ngViewFactory.$inject=[&quot;</highlight><highlight class="normal">$route</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$anchorScroll</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$animate</highlight><highlight class="stringliteral">&quot;],ngViewFillContentFactory.$inject=[&quot;</highlight><highlight class="normal">$compile</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$controller</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$route</highlight><highlight class="stringliteral">&quot;]}(window,window.angular),function(window,angular,undefined){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;function<sp/>$SanitizeProvider(){this.$get=[&quot;</highlight><highlight class="normal">$$sanitizeUri</highlight><highlight class="stringliteral">&quot;,function($$sanitizeUri){return<sp/>function(html){var<sp/>buf=[];return<sp/>htmlParser(html,htmlSanitizeWriter(buf,function(uri,isImage){return!/^unsafe/.test($$sanitizeUri(uri,isImage))})),buf.join(&quot;</highlight><highlight class="stringliteral">&quot;)}}]}function<sp/>sanitizeText(chars){var<sp/>buf=[],writer=htmlSanitizeWriter(buf,angular.noop);return<sp/>writer.chars(chars),buf.join(&quot;</highlight><highlight class="stringliteral">&quot;)}function<sp/>makeMap(str,lowercaseKeys){var<sp/>i,obj={},items=str.split(&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;);for(i=0;i&lt;items.length;i++)obj[lowercaseKeys?angular.lowercase(items[i]):items[i]]=!0;return<sp/>obj}function<sp/>htmlParser(html,handler){function<sp/>parseStartTag(tag,tagName,rest,unary){if(tagName=angular.lowercase(tagName),blockElements[tagName])for(;stack.last()&amp;&amp;inlineElements[stack.last()];)parseEndTag(&quot;</highlight><highlight class="stringliteral">&quot;,stack.last());optionalEndTagElements[tagName]&amp;&amp;stack.last()==tagName&amp;&amp;parseEndTag(&quot;</highlight><highlight class="stringliteral">&quot;,tagName),unary=voidElements[tagName]||!!unary,unary||stack.push(tagName);var<sp/>attrs={};rest.replace(ATTR_REGEXP,function(match,name,doubleQuotedValue,singleQuotedValue,unquotedValue){var<sp/>value=doubleQuotedValue||singleQuotedValue||unquotedValue||&quot;</highlight><highlight class="stringliteral">&quot;;attrs[name]=decodeEntities(value)}),handler.start&amp;&amp;handler.start(tagName,attrs,unary)}function<sp/>parseEndTag(tag,tagName){var<sp/>i,pos=0;if(tagName=angular.lowercase(tagName))for(pos=stack.length-1;pos&gt;=0&amp;&amp;stack[pos]!=tagName;pos--);if(pos&gt;=0){for(i=stack.length-1;i&gt;=pos;i--)handler.end&amp;&amp;handler.end(stack[i]);stack.length=pos}}&quot;</highlight><highlight class="keywordtype">string</highlight><highlight class="stringliteral">&quot;!=typeof<sp/>html&amp;&amp;(html=null===html||&quot;</highlight><highlight class="normal">undefined</highlight><highlight class="stringliteral">&quot;==typeof<sp/>html?&quot;</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="stringliteral">&quot;+html);var<sp/>index,chars,match,text,stack=[],last=html;for(stack.last=function(){return<sp/>stack[stack.length-1]};html;){if(text=&quot;</highlight><highlight class="stringliteral">&quot;,chars=!0,stack.last()&amp;&amp;specialElements[stack.last()]?(html=html.replace(new<sp/>RegExp(&quot;</highlight><highlight class="normal">([\\W\\w]*)&lt;\\s*\\/\\s*</highlight><highlight class="stringliteral">&quot;+stack.last()+&quot;</highlight><highlight class="normal">[^&gt;]*&gt;</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">i</highlight><highlight class="stringliteral">&quot;),function(all,text){return<sp/>text=text.replace(COMMENT_REGEXP,&quot;</highlight><highlight class="normal">$1</highlight><highlight class="stringliteral">&quot;).replace(CDATA_REGEXP,&quot;</highlight><highlight class="normal">$1</highlight><highlight class="stringliteral">&quot;),handler.chars&amp;&amp;handler.chars(decodeEntities(text)),&quot;</highlight><highlight class="stringliteral">&quot;}),parseEndTag(&quot;</highlight><highlight class="stringliteral">&quot;,stack.last())):(0===html.indexOf(&quot;</highlight><highlight class="normal">&lt;!--</highlight><highlight class="stringliteral">&quot;)?(index=html.indexOf(&quot;</highlight><highlight class="normal">--</highlight><highlight class="stringliteral">&quot;,4),index&gt;=0&amp;&amp;html.lastIndexOf(&quot;</highlight><highlight class="normal">--&gt;</highlight><highlight class="stringliteral">&quot;,index)===index&amp;&amp;(handler.comment&amp;&amp;handler.comment(html.substring(4,index)),html=html.substring(index+3),chars=!1)):DOCTYPE_REGEXP.test(html)?(match=html.match(DOCTYPE_REGEXP),match&amp;&amp;(html=html.replace(match[0],&quot;</highlight><highlight class="stringliteral">&quot;),</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral">chars=!1)):BEGING_END_TAGE_REGEXP.test(html)?(match=html.match(END_TAG_REGEXP),match&amp;&amp;(html=html.substring(match[0].length),match[0].replace(END_TAG_REGEXP,parseEndTag),chars=!1)):BEGIN_TAG_REGEXP.test(html)&amp;&amp;(match=html.match(START_TAG_REGEXP),match?(match[4]&amp;&amp;(html=html.substring(match[0].length),match[0].replace(START_TAG_REGEXP,parseStartTag)),chars=!1):(text+=&quot;</highlight><highlight class="normal">&lt;</highlight><highlight class="stringliteral">&quot;,html=html.substring(1))),chars&amp;&amp;(index=html.indexOf(&quot;</highlight><highlight class="normal">&lt;</highlight><highlight class="stringliteral">&quot;),text+=0&gt;index?html:html.substring(0,index),html=0&gt;index?&quot;</highlight><highlight class="stringliteral">&quot;:html.substring(index),handler.chars&amp;&amp;handler.chars(decodeEntities(text)))),html==last)throw<sp/>$sanitizeMinErr(&quot;</highlight><highlight class="normal">badparse</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">The<sp/>sanitizer<sp/>was<sp/>unable<sp/>to<sp/>parse<sp/>the<sp/>following<sp/>block<sp/>of<sp/>html:<sp/>{0}</highlight><highlight class="stringliteral">&quot;,html);last=html}parseEndTag()}function<sp/>decodeEntities(value){return<sp/>value?(hiddenPre.innerHTML=value.replace(/&lt;/g,&quot;</highlight><highlight class="normal">&amp;lt;</highlight><highlight class="stringliteral">&quot;),hiddenPre.textContent):&quot;</highlight><highlight class="stringliteral">&quot;}function<sp/>encodeEntities(value){return<sp/>value.replace(/&amp;/g,&quot;</highlight><highlight class="normal">&amp;amp;</highlight><highlight class="stringliteral">&quot;).replace(SURROGATE_PAIR_REGEXP,function(value){var<sp/>hi=value.charCodeAt(0),low=value.charCodeAt(1);return&quot;</highlight><highlight class="normal">&amp;#</highlight><highlight class="stringliteral">&quot;+(1024*(hi-55296)+(low-56320)+65536)+&quot;</highlight><highlight class="normal">;</highlight><highlight class="stringliteral">&quot;}).replace(NON_ALPHANUMERIC_REGEXP,function(value){return&quot;</highlight><highlight class="normal">&amp;#</highlight><highlight class="stringliteral">&quot;+value.charCodeAt(0)+&quot;</highlight><highlight class="normal">;</highlight><highlight class="stringliteral">&quot;}).replace(/&lt;/g,&quot;</highlight><highlight class="normal">&amp;lt;</highlight><highlight class="stringliteral">&quot;).replace(/&gt;/g,&quot;</highlight><highlight class="normal">&amp;gt;</highlight><highlight class="stringliteral">&quot;)}function<sp/>htmlSanitizeWriter(buf,uriValidator){var<sp/>ignore=!1,out=angular.bind(buf,buf.push);return{start:function(tag,attrs,unary){tag=angular.lowercase(tag),!ignore&amp;&amp;specialElements[tag]&amp;&amp;(ignore=tag),ignore||validElements[tag]!==!0||(out(&quot;</highlight><highlight class="normal">&lt;</highlight><highlight class="stringliteral">&quot;),out(tag),angular.forEach(attrs,function(value,key){var<sp/>lkey=angular.lowercase(key),isImage=&quot;</highlight><highlight class="normal">img</highlight><highlight class="stringliteral">&quot;===tag&amp;&amp;&quot;</highlight><highlight class="normal">src</highlight><highlight class="stringliteral">&quot;===lkey||&quot;</highlight><highlight class="normal">background</highlight><highlight class="stringliteral">&quot;===lkey;validAttrs[lkey]!==!0||uriAttrs[lkey]===!0&amp;&amp;!uriValidator(value,isImage)||(out(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;),out(key),out(&apos;=&quot;</highlight><highlight class="stringliteral">&apos;),out(encodeEntities(value)),out(&apos;</highlight><highlight class="stringliteral">&quot;&apos;))}),out(unary?&quot;</highlight><highlight class="normal">/&gt;</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">&gt;</highlight><highlight class="stringliteral">&quot;))},end:function(tag){tag=angular.lowercase(tag),ignore||validElements[tag]!==!0||(out(&quot;</highlight><highlight class="normal">&lt;/</highlight><highlight class="stringliteral">&quot;),out(tag),out(&quot;</highlight><highlight class="normal">&gt;</highlight><highlight class="stringliteral">&quot;)),tag==ignore&amp;&amp;(ignore=!1)},chars:function(chars){ignore||out(encodeEntities(chars))}}}var<sp/>$sanitizeMinErr=angular.$$minErr(&quot;</highlight><highlight class="normal">$sanitize</highlight><highlight class="stringliteral">&quot;),START_TAG_REGEXP=/^&lt;((?:[a-zA-Z])[\w:-]*)((?:\s+[\w:-]+(?:\s*=\s*(?:(?:&quot;</highlight><highlight class="normal">[^</highlight><highlight class="stringliteral">&quot;]*&quot;</highlight><highlight class="normal">)|(?:</highlight><highlight class="stringliteral">&apos;[^&apos;</highlight><highlight class="normal">]*</highlight><highlight class="stringliteral">&apos;)|[^&gt;\s]+))?)*)\s*(\/?)\s*(&gt;?)/,END_TAG_REGEXP=/^&lt;\/\s*([\w:-]+)[^&gt;]*&gt;/,ATTR_REGEXP=/([\w:-]+)(?:\s*=\s*(?:(?:&quot;((?:[^&quot;])*)&quot;)|(?:&apos;</highlight><highlight class="normal">((?:[^</highlight><highlight class="stringliteral">&apos;])*)&apos;</highlight><highlight class="normal">)|([^&gt;\s]+)))?/g,BEGIN_TAG_REGEXP=/^&lt;/,BEGING_END_TAGE_REGEXP=/^&lt;\</highlight><highlight class="comment">//,COMMENT_REGEXP=/&lt;!--(.*?)--&gt;/g,DOCTYPE_REGEXP=/&lt;!DOCTYPE([^&gt;]*?)&gt;/i,CDATA_REGEXP=/&lt;!\[CDATA\[(.*?)]]&gt;/g,SURROGATE_PAIR_REGEXP=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,NON_ALPHANUMERIC_REGEXP=/([^\#-~|<sp/>|!])/g,voidElements=makeMap(&quot;area,br,col,hr,img,wbr&quot;),optionalEndTagBlockElements=makeMap(&quot;colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr&quot;),optionalEndTagInlineElements=makeMap(&quot;rp,rt&quot;),optionalEndTagElements=angular.extend({},optionalEndTagInlineElements,optionalEndTagBlockElements),blockElements=angular.extend({},optionalEndTagBlockElements,makeMap(&quot;address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul&quot;)),inlineElements=angular.extend({},optionalEndTagInlineElements,makeMap(&quot;a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var&quot;)),svgElements=makeMap(&quot;circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,radialGradient,rect,stop,svg,switch,text,title,tspan,use&quot;),specialElements=makeMap(&quot;script,style&quot;),validElements=angular.extend({},voidElements,blockElements,inlineElements,optionalEndTagElements,svgElements),uriAttrs=makeMap(&quot;background,cite,href,longdesc,src,usemap,xlink:href&quot;),htmlAttrs=makeMap(&quot;abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,target,title,type,valign,value,vspace,width&quot;),svgAttrs=makeMap(&quot;accent-height,accumulate,additive,alphabetic,arabic-form,ascent,baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan&quot;,!0),validAttrs=angular.extend({},uriAttrs,svgAttrs,htmlAttrs),hiddenPre=document.createElement(&quot;pre&quot;);angular.module(&quot;ngSanitize&quot;,[]).provider(&quot;$sanitize&quot;,$SanitizeProvider),angular.module(&quot;ngSanitize&quot;).filter(&quot;linky&quot;,[&quot;$sanitize&quot;,function($sanitize){var<sp/>LINKY_URL_REGEXP=/((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}&lt;&gt;&quot;”’]/,MAILTO_REGEXP=/^mailto:/;return<sp/>function(text,target){function<sp/>addText(text){text&amp;&amp;html.push(sanitizeText(text))}function<sp/>addLink(url,text){html.push(&quot;&lt;a<sp/>&quot;),angular.isDefined(target)&amp;&amp;html.push(&apos;target=&quot;&apos;,target,&apos;&quot;<sp/>&apos;),html.push(&apos;href=&quot;&apos;,url.replace(/&quot;/g,&quot;&amp;quot;&quot;),&apos;&quot;&gt;&apos;),addText(text),html.push(&quot;&lt;/a&gt;&quot;)}if(!text)return<sp/>text;for(var<sp/>match,url,i,raw=text,html=[];match=raw.match(LINKY_URL_REGEXP);)url=match[0],match[2]||match[4]||(url=(match[3]?&quot;http://&quot;:&quot;mailto:&quot;)+url),i=match.index,addText(raw.substr(0,i)),addLink(url,match[0].replace(MAILTO_REGEXP,&quot;&quot;)),raw=raw.substring(i+match[0].length);return<sp/>addText(raw),$sanitize(html.join(&quot;&quot;))}}])}(window,window.angular),function(window,angular,undefined){&quot;use<sp/>strict&quot;;function<sp/>nodeName_(element){return<sp/>angular.lowercase(element.nodeName||element[0]&amp;&amp;element[0].nodeName)}function<sp/>makeSwipeDirective(directiveName,direction,eventName){ngTouch.directive(directiveName,[&quot;$parse&quot;,&quot;$swipe&quot;,function($parse,$swipe){var<sp/>MAX_VERTICAL_DISTANCE=75,MAX_VERTICAL_RATIO=.3,MIN_HORIZONTAL_DISTANCE=30;return<sp/>function(scope,element,attr){function<sp/>validSwipe(coords){if(!startCoords)return!1;var<sp/>deltaY=Math.abs(coords.y-startCoords.y),deltaX=(coords.x-startCoords.x)*direction;return<sp/>valid&amp;&amp;MAX_VERTICAL_DISTANCE&gt;deltaY&amp;&amp;deltaX&gt;0&amp;&amp;deltaX&gt;MIN_HORIZONTAL_DISTANCE&amp;&amp;MAX_VERTICAL_RATIO&gt;deltaY/deltaX}var<sp/>startCoords,valid,swipeHandler=$parse(attr[directiveName]),pointerTypes=[&quot;touch&quot;];angular.isDefined(attr.ngSwipeDisableMouse)||pointerTypes.push(&quot;mouse&quot;),$swipe.bind(element,{start:function(coords,event){startCoords=coords,valid=!0},cancel:function(event){valid=!1},end:function(coords,event){validSwipe(coords)&amp;&amp;scope.$apply(function(){element.triggerHandler(eventName),swipeHandler(scope,{$event:event})})}},pointerTypes)}}])}var<sp/>ngTouch=angular.module(&quot;ngTouch&quot;,[]);ngTouch.factory(&quot;$swipe&quot;,[function(){function<sp/>getCoordinates(event){var<sp/>originalEvent=event.originalEvent||event,touches=originalEvent.touches&amp;&amp;originalEvent.touches.length?originalEvent.touches:[originalEvent],e=originalEvent.changedTouches&amp;&amp;originalEvent.changedTouches[0]||touches[0];return{x:e.clientX,y:e.clientY}}function<sp/>getEvents(pointerTypes,eventType){var<sp/>res=[];return<sp/>angular.forEach(pointerTypes,function(pointerType){var<sp/>eventName=POINTER_EVENTS[pointerType][eventType];eventName&amp;&amp;res.push(eventName)}),res.join(&quot;<sp/>&quot;)}var<sp/>MOVE_BUFFER_RADIUS=10,POINTER_EVENTS={mouse:{start:&quot;mousedown&quot;,move:&quot;mousemove&quot;,end:&quot;mouseup&quot;},touch:{start:&quot;touchstart&quot;,move:&quot;touchmove&quot;,end:&quot;touchend&quot;,cancel:&quot;touchcancel&quot;}};return{bind:function(element,eventHandlers,pointerTypes){var<sp/>totalX,totalY,startCoords,lastPos,active=!1;pointerTypes=pointerTypes||[&quot;mouse&quot;,&quot;touch&quot;],element.on(getEvents(pointerTypes,&quot;start&quot;),function(event){startCoords=getCoordinates(event),active=!0,totalX=0,totalY=0,lastPos=startCoords,eventHandlers.start&amp;&amp;eventHandlers.start(startCoords,event)});var<sp/>events=getEvents(pointerTypes,&quot;cancel&quot;);events&amp;&amp;element.on(events,function(event){active=!1,eventHandlers.cancel&amp;&amp;eventHandlers.cancel(event)}),element.on(getEvents(pointerTypes,&quot;move&quot;),function(event){if(active&amp;&amp;startCoords){var<sp/>coords=getCoordinates(event);if(totalX+=Math.abs(coords.x-lastPos.x),totalY+=Math.abs(coords.y-lastPos.y),lastPos=coords,!(MOVE_BUFFER_RADIUS&gt;totalX&amp;&amp;MOVE_BUFFER_RADIUS&gt;totalY))return<sp/>totalY&gt;totalX?(active=!1,void(eventHandlers.cancel&amp;&amp;eventHandlers.cancel(event))):(event.preventDefault(),void(eventHandlers.move&amp;&amp;eventHandlers.move(coords,event)))}}),element.on(getEvents(pointerTypes,&quot;end&quot;),function(event){active&amp;&amp;(active=!1,eventHandlers.end&amp;&amp;eventHandlers.end(getCoordinates(event),event))})}}}]),ngTouch.config([&quot;$provide&quot;,function($provide){$provide.decorator(&quot;ngClickDirective&quot;,[&quot;$delegate&quot;,function($delegate){return<sp/>$delegate.shift(),$delegate}])}]),ngTouch.directive(&quot;ngClick&quot;,[&quot;$parse&quot;,&quot;$timeout&quot;,&quot;$rootElement&quot;,function($parse,$timeout,$rootElement){function<sp/>hit(x1,y1,x2,y2){return<sp/>Math.abs(x1-x2)&lt;CLICKBUSTER_THRESHOLD&amp;&amp;Math.abs(y1-y2)&lt;CLICKBUSTER_THRESHOLD}function<sp/>checkAllowableRegions(touchCoordinates,x,y){for(var<sp/>i=0;i&lt;touchCoordinates.length;i+=2)if(hit(touchCoordinates[i],touchCoordinates[i+1],x,y))return<sp/>touchCoordinates.splice(i,i+2),!0;return!1}function<sp/>onClick(event){if(!(Date.now()-lastPreventedTime&gt;PREVENT_DURATION)){var<sp/>touches=event.touches&amp;&amp;event.touches.length?event.touches:[event],x=touches[0].clientX,y=touches[0].clientY;1&gt;x&amp;&amp;1&gt;y||lastLabelClickCoordinates&amp;&amp;lastLabelClickCoordinates[0]===x&amp;&amp;lastLabelClickCoordinates[1]===y||(lastLabelClickCoordinates&amp;&amp;(lastLabelClickCoordinates=null),&quot;label&quot;===nodeName_(event.target)&amp;&amp;(lastLabelClickCoordinates=[x,y]),checkAllowableRegions(touchCoordinates,x,y)||(event.stopPropagation(),event.preventDefault(),event.target&amp;&amp;event.target.blur&amp;&amp;event.target.blur()))}}function<sp/>onTouchStart(event){var<sp/>touches=event.touches&amp;&amp;event.touches.length?event.touches:[event],x=touches[0].clientX,y=touches[0].clientY;touchCoordinates.push(x,y),$timeout(function(){for(var<sp/>i=0;i&lt;touchCoordinates.length;i+=2)if(touchCoordinates[i]==x&amp;&amp;touchCoordinates[i+1]==y)return<sp/>void<sp/>touchCoordinates.splice(i,i+2)},PREVENT_DURATION,!1)}function<sp/>preventGhostClick(x,y){touchCoordinates||($rootElement[0].addEventListener(&quot;click&quot;,onClick,!0),$rootElement[0].addEventListener(&quot;touchstart&quot;,onTouchStart,!0),touchCoordinates=[]),lastPreventedTime=Date.now(),checkAllowableRegions(touchCoordinates,x,y)}var<sp/>lastPreventedTime,touchCoordinates,lastLabelClickCoordinates,TAP_DURATION=750,MOVE_TOLERANCE=12,PREVENT_DURATION=2500,CLICKBUSTER_THRESHOLD=25,ACTIVE_CLASS_NAME=&quot;ng-click-active&quot;;return<sp/>function(scope,element,attr){function<sp/>resetState(){tapping=!1,element.removeClass(ACTIVE_CLASS_NAME)}var<sp/>tapElement,startTime,touchStartX,touchStartY,clickHandler=$parse(attr.ngClick),tapping=!1;element.on(&quot;touchstart&quot;,function(event){tapping=!0,tapElement=event.target?event.target:event.srcElement,3==tapElement.nodeType&amp;&amp;(tapElement=tapElement.parentNode),element.addClass(ACTIVE_CLASS_NAME),startTime=Date.now();var<sp/>originalEvent=event.originalEvent||event,touches=originalEvent.touches&amp;&amp;originalEvent.touches.length?originalEvent.touches:[originalEvent],e=touches[0];touchStartX=e.clientX,touchStartY=e.clientY}),element.on(&quot;touchcancel&quot;,function(event){resetState()}),element.on(&quot;touchend&quot;,function(event){var<sp/>diff=Date.now()-startTime,originalEvent=event.originalEvent||event,touches=originalEvent.changedTouches&amp;&amp;originalEvent.changedTouches.length?originalEvent.changedTouches:originalEvent.touches&amp;&amp;originalEvent.touches.length?originalEvent.touches:[originalEvent],e=touches[0],x=e.clientX,y=e.clientY,dist=Math.sqrt(Math.pow(x-touchStartX,2)+Math.pow(y-touchStartY,2));tapping&amp;&amp;TAP_DURATION&gt;diff&amp;&amp;MOVE_TOLERANCE&gt;dist&amp;&amp;(preventGhostClick(x,y),tapElement&amp;&amp;tapElement.blur(),angular.isDefined(attr.disabled)&amp;&amp;attr.disabled!==!1||element.triggerHandler(&quot;click&quot;,[event])),resetState()}),element.onclick=function(event){},element.on(&quot;click&quot;,function(event,touchend){scope.$apply(function(){clickHandler(scope,{$event:touchend||event})})}),element.on(&quot;mousedown&quot;,function(event){element.addClass(ACTIVE_CLASS_NAME)}),element.on(&quot;mousemove<sp/>mouseup&quot;,function(event){element.removeClass(ACTIVE_CLASS_NAME)})}}]),makeSwipeDirective(&quot;ngSwipeLeft&quot;,-1,&quot;swipeleft&quot;),makeSwipeDirective(&quot;ngSwipeRight&quot;,1,&quot;swiperight&quot;)}(window,window.angular),function(undefined){function<sp/>dfl(a,b,c){switch(arguments.length){case<sp/>2:return<sp/>null!=a?a:b;case<sp/>3:return<sp/>null!=a?a:null!=b?b:c;default:throw<sp/>new<sp/>Error(&quot;Implement<sp/>me&quot;)}}function<sp/>hasOwnProp(a,b){return<sp/>hasOwnProperty.call(a,b)}function<sp/>defaultParsingFlags(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function<sp/>printMsg(msg){moment.suppressDeprecationWarnings===!1&amp;&amp;&quot;undefined&quot;!=typeof<sp/>console&amp;&amp;console.warn&amp;&amp;console.warn(&quot;Deprecation<sp/>warning:<sp/>&quot;+msg)}function<sp/>deprecate(msg,fn){var<sp/>firstTime=!0;return<sp/>extend(function(){return<sp/>firstTime&amp;&amp;(printMsg(msg),firstTime=!1),fn.apply(this,arguments)},fn)}function<sp/>deprecateSimple(name,msg){deprecations[name]||(printMsg(msg),deprecations[name]=!0)}function<sp/>padToken(func,count){return<sp/>function(a){return<sp/>leftZeroFill(func.call(this,a),count)}}function<sp/>ordinalizeToken(func,period){return<sp/>function(a){return<sp/>this.localeData().ordinal(func.call(this,a),period)}}function<sp/>monthDiff(a,b){var<sp/>anchor2,adjust,wholeMonthDiff=12*(b.year()-a.year())+(b.month()-a.month()),anchor=a.clone().add(wholeMonthDiff,&quot;months&quot;);return<sp/>0&gt;b-anchor?(anchor2=a.clone().add(wholeMonthDiff-1,&quot;months&quot;),adjust=(b-anchor)/(anchor-anchor2)):(anchor2=a.clone().add(wholeMonthDiff+1,&quot;months&quot;),adjust=(b-anchor)/(anchor2-anchor)),-(wholeMonthDiff+adjust)}function<sp/>meridiemFixWrap(locale,hour,meridiem){var<sp/>isPm;return<sp/>null==meridiem?hour:null!=locale.meridiemHour?locale.meridiemHour(hour,meridiem):null!=locale.isPM?(isPm=locale.isPM(meridiem),isPm&amp;&amp;12&gt;hour&amp;&amp;(hour+=12),isPm||12!==hour||(hour=0),hour):hour}function<sp/>Locale(){}function<sp/>Moment(config,skipOverflow){skipOverflow!==!1&amp;&amp;checkOverflow(config),copyConfig(this,config),this._d=new<sp/>Date(+config._d),updateInProgress===!1&amp;&amp;(updateInProgress=!0,moment.updateOffset(this),updateInProgress=!1)}function<sp/>Duration(duration){var<sp/>normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;this._milliseconds=+milliseconds+1e3*seconds+6e4*minutes+36e5*hours,this._days=+days+7*weeks,this._months=+months+3*quarters+12*years,this._data={},this._locale=moment.localeData(),this._bubble()}function<sp/>extend(a,b){for(var<sp/>i<sp/>in<sp/>b)hasOwnProp(b,i)&amp;&amp;(a[i]=b[i]);return<sp/>hasOwnProp(b,&quot;toString&quot;)&amp;&amp;(a.toString=b.toString),hasOwnProp(b,&quot;valueOf&quot;)&amp;&amp;(a.valueOf=b.valueOf),a}function<sp/>copyConfig(to,from){var<sp/>i,prop,val;if(&quot;undefined&quot;!=typeof<sp/>from._isAMomentObject&amp;&amp;(to._isAMomentObject=from._isAMomentObject),&quot;undefined&quot;!=typeof<sp/>from._i&amp;&amp;(to._i=from._i),&quot;undefined&quot;!=typeof<sp/>from._f&amp;&amp;(to._f=from._f),&quot;undefined&quot;!=typeof<sp/>from._l&amp;&amp;(to._l=from._l),&quot;undefined&quot;!=typeof<sp/>from._strict&amp;&amp;(to._strict=from._strict),&quot;undefined&quot;!=typeof<sp/>from._tzm&amp;&amp;(to._tzm=from._tzm),&quot;undefined&quot;!=typeof<sp/>from._isUTC&amp;&amp;(to._isUTC=from._isUTC),&quot;undefined&quot;!=typeof<sp/>from._offset&amp;&amp;(to._offset=from._offset),&quot;undefined&quot;!=typeof<sp/>from._pf&amp;&amp;(to._pf=from._pf),&quot;undefined&quot;!=typeof<sp/>from._locale&amp;&amp;(to._locale=from._locale),momentProperties.length&gt;0)for(i<sp/>in<sp/>momentProperties)prop=momentProperties[i],val=from[prop],&quot;undefined&quot;!=typeof<sp/>val&amp;&amp;(to[prop]=val);return<sp/>to}function<sp/>absRound(number){return<sp/>0&gt;number?Math.ceil(number):Math.floor(number)}function<sp/>leftZeroFill(number,targetLength,forceSign){for(var<sp/>output=&quot;&quot;+Math.abs(number),sign=number&gt;=0;output.length&lt;targetLength;)output=&quot;0&quot;+output;return(sign?forceSign?&quot;+&quot;:&quot;&quot;:&quot;-&quot;)+output}function<sp/>positiveMomentsDifference(base,other){var<sp/>res={milliseconds:0,months:0};return<sp/>res.months=other.month()-base.month()+12*(other.year()-base.year()),base.clone().add(res.months,&quot;M&quot;).isAfter(other)&amp;&amp;--res.months,res.milliseconds=+other-+base.clone().add(res.months,&quot;M&quot;),res}function<sp/>momentsDifference(base,other){var<sp/>res;return<sp/>other=makeAs(other,base),base.isBefore(other)?res=positiveMomentsDifference(base,other):(res=positiveMomentsDifference(other,base),res.milliseconds=-res.milliseconds,res.months=-res.months),res}function<sp/>createAdder(direction,name){return<sp/>function(val,period){var<sp/>dur,tmp;return<sp/>null===period||isNaN(+period)||(deprecateSimple(name,&quot;moment().&quot;+name+&quot;(period,<sp/>number)<sp/>is<sp/>deprecated.<sp/>Please<sp/>use<sp/>moment().&quot;+name+&quot;(number,<sp/>period).&quot;),tmp=val,val=period,period=tmp),val=&quot;string&quot;==typeof<sp/>val?+val:val,dur=moment.duration(val,period),addOrSubtractDurationFromMoment(this,dur,direction),this}}function<sp/>addOrSubtractDurationFromMoment(mom,duration,isAdding,updateOffset){var<sp/>milliseconds=duration._milliseconds,days=duration._days,months=duration._months;updateOffset=null==updateOffset?!0:updateOffset,milliseconds&amp;&amp;mom._d.setTime(+mom._d+milliseconds*isAdding),days&amp;&amp;rawSetter(mom,&quot;Date&quot;,rawGetter(mom,&quot;Date&quot;)+days*isAdding),months&amp;&amp;rawMonthSetter(mom,rawGetter(mom,&quot;Month&quot;)+months*isAdding),updateOffset&amp;&amp;moment.updateOffset(mom,days||months)}function<sp/>isArray(input){return&quot;[object<sp/>Array]&quot;===Object.prototype.toString.call(input)}function<sp/>isDate(input){return&quot;[object<sp/>Date]&quot;===Object.prototype.toString.call(input)||input<sp/>instanceof<sp/>Date}function<sp/>compareArrays(array1,array2,dontConvert){var<sp/>i,len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0;for(i=0;len&gt;i;i++)(dontConvert&amp;&amp;array1[i]!==array2[i]||!dontConvert&amp;&amp;toInt(array1[i])!==toInt(array2[i]))&amp;&amp;diffs++;return<sp/>diffs+lengthDiff}function<sp/>normalizeUnits(units){if(units){var<sp/>lowered=units.toLowerCase().replace(/(.)s$/,&quot;$1&quot;);units=unitAliases[units]||camelFunctions[lowered]||lowered}return<sp/>units}function<sp/>normalizeObjectUnits(inputObject){var<sp/>normalizedProp,prop,normalizedInput={};for(prop<sp/>in<sp/>inputObject)hasOwnProp(inputObject,prop)&amp;&amp;(normalizedProp=normalizeUnits(prop),normalizedProp&amp;&amp;(normalizedInput[normalizedProp]=inputObject[prop]));return<sp/>normalizedInput}function<sp/>makeList(field){var<sp/>count,setter;if(0===field.indexOf(&quot;week&quot;))count=7,setter=&quot;day&quot;;else{if(0!==field.indexOf(&quot;month&quot;))return;count=12,setter=&quot;month&quot;}moment[field]=function(format,index){var<sp/>i,getter,method=moment._locale[field],results=[];if(&quot;number&quot;==typeof<sp/>format&amp;&amp;(index=format,format=undefined),getter=function(i){var<sp/>m=moment().utc().set(setter,i);return<sp/>method.call(moment._locale,m,format||&quot;&quot;)},null!=index)return<sp/>getter(index);for(i=0;count&gt;i;i++)results.push(getter(i));return<sp/>results}}function<sp/>toInt(argumentForCoercion){var<sp/>coercedNumber=+argumentForCoercion,value=0;return<sp/>0!==coercedNumber&amp;&amp;isFinite(coercedNumber)&amp;&amp;(value=coercedNumber&gt;=0?Math.floor(coercedNumber):Math.ceil(coercedNumber)),value}function<sp/>daysInMonth(year,month){return<sp/>new<sp/>Date(Date.UTC(year,month+1,0)).getUTCDate()}function<sp/>weeksInYear(year,dow,doy){return<sp/>weekOfYear(moment([year,11,31+dow-doy]),dow,doy).week}function<sp/>daysInYear(year){return<sp/>isLeapYear(year)?366:365}function<sp/>isLeapYear(year){return<sp/>year%4===0&amp;&amp;year%100!==0||year%400===0}function<sp/>checkOverflow(m){var<sp/>overflow;m._a&amp;&amp;-2===m._pf.overflow&amp;&amp;(overflow=m._a[MONTH]&lt;0||m._a[MONTH]&gt;11?MONTH:m._a[DATE]&lt;1||m._a[DATE]&gt;daysInMonth(m._a[YEAR],m._a[MONTH])?DATE:m._a[HOUR]&lt;0||m._a[HOUR]&gt;24||24===m._a[HOUR]&amp;&amp;(0!==m._a[MINUTE]||0!==m._a[SECOND]||0!==m._a[MILLISECOND])?HOUR:m._a[MINUTE]&lt;0||m._a[MINUTE]&gt;59?MINUTE:m._a[SECOND]&lt;0||m._a[SECOND]&gt;59?SECOND:m._a[MILLISECOND]&lt;0||m._a[MILLISECOND]&gt;999?MILLISECOND:-1,m._pf._overflowDayOfYear&amp;&amp;(YEAR&gt;overflow||overflow&gt;DATE)&amp;&amp;(overflow=DATE),m._pf.overflow=overflow)}function<sp/>isValid(m){return<sp/>null==m._isValid&amp;&amp;(m._isValid=!isNaN(m._d.getTime())&amp;&amp;m._pf.overflow&lt;0&amp;&amp;!m._pf.empty&amp;&amp;!m._pf.invalidMonth&amp;&amp;!m._pf.nullInput&amp;&amp;!m._pf.invalidFormat&amp;&amp;!m._pf.userInvalidated,m._strict&amp;&amp;(m._isValid=m._isValid&amp;&amp;0===m._pf.charsLeftOver&amp;&amp;0===m._pf.unusedTokens.length&amp;&amp;m._pf.bigHour===undefined)),m._isValid}function<sp/>normalizeLocale(key){return<sp/>key?key.toLowerCase().replace(&quot;_&quot;,&quot;-&quot;):key}function<sp/>chooseLocale(names){for(var<sp/>j,next,locale,split,i=0;i&lt;names.length;){for(split=normalizeLocale(names[i]).split(&quot;-&quot;),j=split.length,next=normalizeLocale(names[i+1]),next=next?next.split(&quot;-&quot;):null;j&gt;0;){if(locale=loadLocale(split.slice(0,j).join(&quot;-&quot;)))return<sp/>locale;if(next&amp;&amp;next.length&gt;=j&amp;&amp;compareArrays(split,next,!0)&gt;=j-1)break;j--}i++}return<sp/>null}function<sp/>loadLocale(name){var<sp/>oldLocale=null;if(!locales[name]&amp;&amp;hasModule)try{oldLocale=moment.locale(),require(&quot;./locale/&quot;+name),moment.locale(oldLocale)}catch(e){}return<sp/>locales[name]}function<sp/>makeAs(input,model){var<sp/>res,diff;return<sp/>model._isUTC?(res=model.clone(),diff=(moment.isMoment(input)||isDate(input)?+input:+moment(input))-+res,res._d.setTime(+res._d+diff),moment.updateOffset(res,!1),res):moment(input).local()}function<sp/>removeFormattingTokens(input){return<sp/>input.match(/\[[\s\S]/)?input.replace(/^\[|\]$/g,&quot;&quot;):input.replace(/\\/g,&quot;&quot;)}function<sp/>makeFormatFunction(format){var<sp/>i,length,array=format.match(formattingTokens);for(i=0,length=array.length;length&gt;i;i++)formatTokenFunctions[array[i]]?array[i]=formatTokenFunctions[array[i]]:array[i]=removeFormattingTokens(array[i]);return<sp/>function(mom){var<sp/>output=&quot;&quot;;for(i=0;length&gt;i;i++)output+=array[i]instanceof<sp/>Function?array[i].call(mom,format):array[i];return<sp/>output}}function<sp/>formatMoment(m,format){return<sp/>m.isValid()?(format=expandFormat(format,m.localeData()),formatFunctions[format]||(formatFunctions[format]=makeFormatFunction(format)),formatFunctions[format](m)):m.localeData().invalidDate()}function<sp/>expandFormat(format,locale){function<sp/>replaceLongDateFormatTokens(input){return<sp/>locale.longDateFormat(input)||input}var<sp/>i=5;for(localFormattingTokens.lastIndex=0;i&gt;=0&amp;&amp;localFormattingTokens.test(format);)format=format.replace(localFormattingTokens,replaceLongDateFormatTokens),localFormattingTokens.lastIndex=0,i-=1;return<sp/>format}function<sp/>getParseRegexForToken(token,config){var<sp/>a,strict=config._strict;switch(token){case&quot;Q&quot;:return<sp/>parseTokenOneDigit;case&quot;DDDD&quot;:return<sp/>parseTokenThreeDigits;case&quot;YYYY&quot;:case&quot;GGGG&quot;:case&quot;gggg&quot;:return<sp/>strict?parseTokenFourDigits:parseTokenOneToFourDigits;case&quot;Y&quot;:case&quot;G&quot;:case&quot;g&quot;:return<sp/>parseTokenSignedNumber;case&quot;YYYYYY&quot;:case&quot;YYYYY&quot;:case&quot;GGGGG&quot;:case&quot;ggggg&quot;:return<sp/>strict?parseTokenSixDigits:parseTokenOneToSixDigits;case&quot;S&quot;:if(strict)return<sp/>parseTokenOneDigit;case&quot;SS&quot;:if(strict)return<sp/>parseTokenTwoDigits;case&quot;SSS&quot;:if(strict)return<sp/>parseTokenThreeDigits;case&quot;DDD&quot;:return<sp/>parseTokenOneToThreeDigits;case&quot;MMM&quot;:case&quot;MMMM&quot;:case&quot;dd&quot;:case&quot;ddd&quot;:case&quot;dddd&quot;:return<sp/>parseTokenWord;case&quot;a&quot;:case&quot;A&quot;:return<sp/>config._locale._meridiemParse;case&quot;x&quot;:return<sp/>parseTokenOffsetMs;case&quot;X&quot;:return<sp/>parseTokenTimestampMs;case&quot;Z&quot;:case&quot;ZZ&quot;:return<sp/>parseTokenTimezone;case&quot;T&quot;:return<sp/>parseTokenT;case&quot;SSSS&quot;:return<sp/>parseTokenDigits;case&quot;MM&quot;:case&quot;DD&quot;:case&quot;YY&quot;:case&quot;GG&quot;:case&quot;gg&quot;:case&quot;HH&quot;:case&quot;hh&quot;:case&quot;mm&quot;:case&quot;ss&quot;:case&quot;ww&quot;:case&quot;WW&quot;:return<sp/>strict?parseTokenTwoDigits:parseTokenOneOrTwoDigits;case&quot;M&quot;:case&quot;D&quot;:case&quot;d&quot;:case&quot;H&quot;:case&quot;h&quot;:case&quot;m&quot;:case&quot;s&quot;:case&quot;w&quot;:case&quot;W&quot;:case&quot;e&quot;:case&quot;E&quot;:return<sp/>parseTokenOneOrTwoDigits;case&quot;Do&quot;:return<sp/>strict?config._locale._ordinalParse:config._locale._ordinalParseLenient;default:return<sp/>a=new<sp/>RegExp(regexpEscape(unescapeFormat(token.replace(&quot;\\&quot;,&quot;&quot;)),&quot;i&quot;))}}function<sp/>utcOffsetFromString(string){string=string||&quot;&quot;;var<sp/>possibleTzMatches=string.match(parseTokenTimezone)||[],tzChunk=possibleTzMatches[possibleTzMatches.length-1]||[],parts=(tzChunk+&quot;&quot;).match(parseTimezoneChunker)||[&quot;-&quot;,0,0],minutes=+(60*parts[1])+toInt(parts[2]);return&quot;+&quot;===parts[0]?minutes:-minutes}function<sp/>addTimeToArrayFromToken(token,input,config){var<sp/>a,datePartArray=config._a;switch(token){case&quot;Q&quot;:null!=input&amp;&amp;(datePartArray[MONTH]=3*(toInt(input)-1));break;case&quot;M&quot;:case&quot;MM&quot;:null!=input&amp;&amp;(datePartArray[MONTH]=toInt(input)-1);break;case&quot;MMM&quot;:case&quot;MMMM&quot;:a=config._locale.monthsParse(input,token,config._strict),null!=a?datePartArray[MONTH]=a:config._pf.invalidMonth=input;break;case&quot;D&quot;:case&quot;DD&quot;:null!=input&amp;&amp;(datePartArray[DATE]=toInt(input));break;case&quot;Do&quot;:null!=input&amp;&amp;(datePartArray[DATE]=toInt(parseInt(input.match(/\d{1,2}/)[0],10)));break;case&quot;DDD&quot;:case&quot;DDDD&quot;:null!=input&amp;&amp;(config._dayOfYear=toInt(input));break;case&quot;YY&quot;:datePartArray[YEAR]=moment.parseTwoDigitYear(input);break;case&quot;YYYY&quot;:case&quot;YYYYY&quot;:case&quot;YYYYYY&quot;:datePartArray[YEAR]=toInt(input);break;case&quot;a&quot;:case&quot;A&quot;:config._meridiem=input;break;case&quot;h&quot;:case&quot;hh&quot;:config._pf.bigHour=!0;case&quot;H&quot;:case&quot;HH&quot;:datePartArray[HOUR]=toInt(input);break;case&quot;m&quot;:case&quot;mm&quot;:datePartArray[MINUTE]=toInt(input);break;case&quot;s&quot;:case&quot;ss&quot;:datePartArray[SECOND]=toInt(input);break;case&quot;S&quot;:case&quot;SS&quot;:case&quot;SSS&quot;:case&quot;SSSS&quot;:datePartArray[MILLISECOND]=toInt(1e3*(&quot;0.&quot;+input));break;case&quot;x&quot;:config._d=new<sp/>Date(toInt(input));break;case&quot;X&quot;:config._d=new<sp/>Date(1e3*parseFloat(input));break;case&quot;Z&quot;:case&quot;ZZ&quot;:config._useUTC=!0,config._tzm=utcOffsetFromString(input);break;case&quot;dd&quot;:case&quot;ddd&quot;:case&quot;dddd&quot;:a=config._locale.weekdaysParse(input),null!=a?(config._w=config._w||{},config._w.d=a):config._pf.invalidWeekday=input;break;case&quot;w&quot;:case&quot;ww&quot;:case&quot;W&quot;:case&quot;WW&quot;:case&quot;d&quot;:case&quot;e&quot;:case&quot;E&quot;:token=token.substr(0,1);case&quot;gggg&quot;:case&quot;GGGG&quot;:case&quot;GGGGG&quot;:token=token.substr(0,2),input&amp;&amp;(config._w=config._w||{},config._w[token]=toInt(input));break;case&quot;gg&quot;:case&quot;GG&quot;:config._w=config._w||{},config._w[token]=moment.parseTwoDigitYear(input)}}function<sp/>dayOfYearFromWeekInfo(config){var<sp/>w,weekYear,week,weekday,dow,doy,temp;w=config._w,null!=w.GG||null!=w.W||null!=w.E?(dow=1,doy=4,weekYear=dfl(w.GG,config._a[YEAR],weekOfYear(moment(),1,4).year),week=dfl(w.W,1),weekday=dfl(w.E,1)):(dow=config._locale._week.dow,doy=config._locale._week.doy,weekYear=dfl(w.gg,config._a[YEAR],weekOfYear(moment(),dow,doy).year),week=dfl(w.w,1),null!=w.d?(weekday=w.d,dow&gt;weekday&amp;&amp;++week):weekday=null!=w.e?w.e+dow:dow),temp=dayOfYearFromWeeks(weekYear,week,weekday,doy,dow),config._a[YEAR]=temp.year,config._dayOfYear=temp.dayOfYear}function<sp/>dateFromConfig(config){var<sp/>i,date,currentDate,yearToUse,input=[];if(!config._d){for(currentDate=currentDateArray(config),config._w&amp;&amp;null==config._a[DATE]&amp;&amp;null==config._a[MONTH]&amp;&amp;dayOfYearFromWeekInfo(config),config._dayOfYear&amp;&amp;(yearToUse=dfl(config._a[YEAR],currentDate[YEAR]),config._dayOfYear&gt;daysInYear(yearToUse)&amp;&amp;(config._pf._overflowDayOfYear=!0),date=makeUTCDate(yearToUse,0,config._dayOfYear),config._a[MONTH]=date.getUTCMonth(),config._a[DATE]=date.getUTCDate()),i=0;3&gt;i&amp;&amp;null==config._a[i];++i)config._a[i]=input[i]=currentDate[i];for(;7&gt;i;i++)config._a[i]=input[i]=null==config._a[i]?2===i?1:0:config._a[i];24===config._a[HOUR]&amp;&amp;0===config._a[MINUTE]&amp;&amp;0===config._a[SECOND]&amp;&amp;0===config._a[MILLISECOND]&amp;&amp;(config._nextDay=!0,config._a[HOUR]=0),config._d=(config._useUTC?makeUTCDate:makeDate).apply(null,input),null!=config._tzm&amp;&amp;config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm),config._nextDay&amp;&amp;(config._a[HOUR]=24)}}function<sp/>dateFromObject(config){var<sp/>normalizedInput;config._d||(normalizedInput=normalizeObjectUnits(config._i),config._a=[normalizedInput.year,normalizedInput.month,normalizedInput.day||normalizedInput.date,normalizedInput.hour,normalizedInput.minute,normalizedInput.second,normalizedInput.millisecond],dateFromConfig(config))}function<sp/>currentDateArray(config){var<sp/>now=new<sp/>Date;return<sp/>config._useUTC?[now.getUTCFullYear(),now.getUTCMonth(),now.getUTCDate()]:[now.getFullYear(),now.getMonth(),now.getDate()]}function<sp/>makeDateFromStringAndFormat(config){if(config._f===moment.ISO_8601)return<sp/>void<sp/>parseISO(config);config._a=[],config._pf.empty=!0;var<sp/>i,parsedInput,tokens,token,skipped,string=&quot;&quot;+config._i,stringLength=string.length,totalParsedInputLength=0;for(tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[],i=0;i&lt;tokens.length;i++)token=tokens[i],parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0],parsedInput&amp;&amp;(skipped=string.substr(0,string.indexOf(parsedInput)),skipped.length&gt;0&amp;&amp;config._pf.unusedInput.push(skipped),string=string.slice(string.indexOf(parsedInput)+parsedInput.length),totalParsedInputLength+=parsedInput.length),formatTokenFunctions[token]?(parsedInput?config._pf.empty=!1:config._pf.unusedTokens.push(token),addTimeToArrayFromToken(token,parsedInput,config)):config._strict&amp;&amp;!parsedInput&amp;&amp;config._pf.unusedTokens.push(token);config._pf.charsLeftOver=stringLength-totalParsedInputLength,string.length&gt;0&amp;&amp;config._pf.unusedInput.push(string),config._pf.bigHour===!0&amp;&amp;config._a[HOUR]&lt;=12&amp;&amp;(config._pf.bigHour=undefined),config._a[HOUR]=meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem),dateFromConfig(config),checkOverflow(config)}function<sp/>unescapeFormat(s){return<sp/>s.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return<sp/>p1||p2||p3||p4})}function<sp/>regexpEscape(s){return<sp/>s.replace(/[-\/\\^$*+?.()|[\]{}]/g,&quot;\\$&amp;&quot;)}function<sp/>makeDateFromStringAndArray(config){var<sp/>tempConfig,bestMoment,scoreToBeat,i,currentScore;if(0===config._f.length)return<sp/>config._pf.invalidFormat=!0,void(config._d=new<sp/>Date(NaN));for(i=0;i&lt;config._f.length;i++)currentScore=0,tempConfig=copyConfig({},config),null!=config._useUTC&amp;&amp;(tempConfig._useUTC=config._useUTC),tempConfig._pf=defaultParsingFlags(),tempConfig._f=config._f[i],makeDateFromStringAndFormat(tempConfig),isValid(tempConfig)&amp;&amp;(currentScore+=tempConfig._pf.charsLeftOver,currentScore+=10*tempConfig._pf.unusedTokens.length,tempConfig._pf.score=currentScore,(null==scoreToBeat||scoreToBeat&gt;currentScore)&amp;&amp;(scoreToBeat=currentScore,bestMoment=tempConfig));extend(config,bestMoment||tempConfig)}function<sp/>parseISO(config){var<sp/>i,l,string=config._i,match=isoRegex.exec(string);if(match){for(config._pf.iso=!0,i=0,l=isoDates.length;l&gt;i;i++)if(isoDates[i][1].exec(string)){config._f=isoDates[i][0]+(match[6]||&quot;<sp/>&quot;);break}for(i=0,l=isoTimes.length;l&gt;i;i++)if(isoTimes[i][1].exec(string)){config._f+=isoTimes[i][0];break}string.match(parseTokenTimezone)&amp;&amp;(config._f+=&quot;Z&quot;),makeDateFromStringAndFormat(config)}else<sp/>config._isValid=!1}function<sp/>makeDateFromString(config){parseISO(config),config._isValid===!1&amp;&amp;(delete<sp/>config._isValid,moment.createFromInputFallback(config))}function<sp/>map(arr,fn){var<sp/>i,res=[];for(i=0;i&lt;arr.length;++i)res.push(fn(arr[i],i));return<sp/>res}function<sp/>makeDateFromInput(config){var<sp/>matched,input=config._i;input===undefined?config._d=new<sp/>Date:isDate(input)?config._d=new<sp/>Date(+input):null!==(matched=aspNetJsonRegex.exec(input))?config._d=new<sp/>Date(+matched[1]):&quot;string&quot;==typeof<sp/>input?makeDateFromString(config):isArray(input)?(config._a=map(input.slice(0),function(obj){return<sp/>parseInt(obj,10)}),dateFromConfig(config)):&quot;object&quot;==typeof<sp/>input?dateFromObject(config):&quot;number&quot;==typeof<sp/>input?config._d=new<sp/>Date(input):moment.createFromInputFallback(config)}function<sp/>makeDate(y,m,d,h,M,s,ms){var<sp/>date=new<sp/>Date(y,m,d,h,M,s,ms);return<sp/>1970&gt;y&amp;&amp;date.setFullYear(y),date}function<sp/>makeUTCDate(y){var<sp/>date=new<sp/>Date(Date.UTC.apply(null,arguments));return<sp/>1970&gt;y&amp;&amp;date.setUTCFullYear(y),date}function<sp/>parseWeekday(input,locale){if(&quot;string&quot;==typeof<sp/>input)if(isNaN(input)){if(input=locale.weekdaysParse(input),&quot;number&quot;!=typeof<sp/>input)return<sp/>null}else<sp/>input=parseInt(input,10);return<sp/>input}function<sp/>substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){return<sp/>locale.relativeTime(number||1,!!withoutSuffix,string,isFuture)}function<sp/>relativeTime(posNegDuration,withoutSuffix,locale){var<sp/>duration=moment.duration(posNegDuration).abs(),seconds=round(duration.as(&quot;s&quot;)),minutes=round(duration.as(&quot;m&quot;)),hours=round(duration.as(&quot;h&quot;)),days=round(duration.as(&quot;d&quot;)),months=round(duration.as(&quot;M&quot;)),years=round(duration.as(&quot;y&quot;)),args=seconds&lt;relativeTimeThresholds.s&amp;&amp;[&quot;s&quot;,seconds]||1===minutes&amp;&amp;[&quot;m&quot;]||minutes&lt;relativeTimeThresholds.m&amp;&amp;[&quot;mm&quot;,minutes]||1===hours&amp;&amp;[&quot;h&quot;]||hours&lt;relativeTimeThresholds.h&amp;&amp;[&quot;hh&quot;,hours]||1===days&amp;&amp;[&quot;d&quot;]||days&lt;relativeTimeThresholds.d&amp;&amp;[&quot;dd&quot;,days]||1===months&amp;&amp;[&quot;M&quot;]||months&lt;relativeTimeThresholds.M&amp;&amp;[&quot;MM&quot;,months]||1===years&amp;&amp;[&quot;y&quot;]||[&quot;yy&quot;,years];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>args[2]=withoutSuffix,args[3]=+posNegDuration&gt;0,args[4]=locale,substituteTimeAgo.apply({},args)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>weekOfYear(mom,firstDayOfWeek,firstDayOfWeekOfYear){var<sp/>adjustedMoment,end=firstDayOfWeekOfYear-firstDayOfWeek,daysToDayOfWeek=firstDayOfWeekOfYear-mom.day();</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>daysToDayOfWeek&gt;end&amp;&amp;(daysToDayOfWeek-=7),end-7&gt;daysToDayOfWeek&amp;&amp;(daysToDayOfWeek+=7),adjustedMoment=moment(mom).add(daysToDayOfWeek,</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">),{week:Math.ceil(adjustedMoment.dayOfYear()/7),year:adjustedMoment.year()}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>dayOfYearFromWeeks(year,week,weekday,firstDayOfWeekOfYear,firstDayOfWeek){var<sp/>daysToAdd,dayOfYear,d=makeUTCDate(year,0,1).getUTCDay();</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d=0===d?7:d,weekday=null!=weekday?weekday:firstDayOfWeek,daysToAdd=firstDayOfWeek-d+(d&gt;firstDayOfWeekOfYear?7:0)-(firstDayOfWeek&gt;d?7:0),dayOfYear=7*(week-1)+(weekday-firstDayOfWeek)+daysToAdd+1,{year:dayOfYear&gt;0?year:year-1,dayOfYear:dayOfYear&gt;0?dayOfYear:daysInYear(year-1)+dayOfYear}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>makeMoment(config){var<sp/>res,input=config._i,format=config._f;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>config._locale=config._locale||moment.localeData(config._l),null===input||format===undefined&amp;&amp;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">===input?moment.invalid({nullInput:!0}):(</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">==typeof<sp/>input&amp;&amp;(config._i=input=config._locale.preparse(input)),moment.isMoment(input)?</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Moment(input,!0):(format?isArray(format)?makeDateFromStringAndArray(config):makeDateFromStringAndFormat(config):makeDateFromInput(config),res=new<sp/>Moment(config),res._nextDay&amp;&amp;(res.add(1,</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">),res._nextDay=undefined),res))}function<sp/>pickBy(fn,moments){var<sp/>res,i;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(1===moments.length&amp;&amp;isArray(moments[0])&amp;&amp;(moments=moments[0]),!moments.length)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>moment();</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(res=moments[0],i=1;i&lt;moments.length;++i)moments[i][fn](res)&amp;&amp;(res=moments[i]);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>rawMonthSetter(mom,value){var<sp/>dayOfMonth;</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">==typeof<sp/>value&amp;&amp;(value=mom.localeData().monthsParse(value),</highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal">!=typeof<sp/>value)?mom:(dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value)),mom._d[</highlight><highlight class="stringliteral">&quot;set&quot;</highlight><highlight class="normal">+(mom._isUTC?</highlight><highlight class="stringliteral">&quot;UTC&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&quot;Month&quot;</highlight><highlight class="normal">](value,dayOfMonth),mom)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>rawGetter(mom,unit){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mom._d[</highlight><highlight class="stringliteral">&quot;get&quot;</highlight><highlight class="normal">+(mom._isUTC?</highlight><highlight class="stringliteral">&quot;UTC&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+unit]()}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>rawSetter(mom,unit,value){</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;Month&quot;</highlight><highlight class="normal">===unit?rawMonthSetter(mom,value):mom._d[</highlight><highlight class="stringliteral">&quot;set&quot;</highlight><highlight class="normal">+(mom._isUTC?</highlight><highlight class="stringliteral">&quot;UTC&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)+unit](value)}function<sp/>makeAccessor(unit,keepTime){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(value){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null!=value?(rawSetter(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,unit,value),moment.updateOffset(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,keepTime),</highlight><highlight class="keyword">this</highlight><highlight class="normal">):rawGetter(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,unit)}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>daysToYears(days){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>400*days/146097}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>yearsToDays(years){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>146097*years/400}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>makeDurationGetter(name){moment.duration.fn[name]=</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this._data[name]}}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>makeGlobal(shouldDeprecate){</highlight><highlight class="stringliteral">&quot;undefined&quot;</highlight><highlight class="normal">==typeof<sp/>ender&amp;&amp;(oldGlobalMoment=globalScope.moment,shouldDeprecate?globalScope.moment=deprecate(</highlight><highlight class="stringliteral">&quot;Accessing<sp/>Moment<sp/>through<sp/>the<sp/>global<sp/>scope<sp/>is<sp/>deprecated,<sp/>and<sp/>will<sp/>be<sp/>removed<sp/>in<sp/>an<sp/>upcoming<sp/>release.&quot;</highlight><highlight class="normal">,moment):globalScope.moment=moment)}for(var<sp/>moment,oldGlobalMoment,i,VERSION=</highlight><highlight class="stringliteral">&quot;2.9.0&quot;</highlight><highlight class="normal">,globalScope=</highlight><highlight class="stringliteral">&quot;undefined&quot;</highlight><highlight class="normal">==typeof<sp/>global||</highlight><highlight class="stringliteral">&quot;undefined&quot;</highlight><highlight class="normal">!=typeof<sp/>window&amp;&amp;window!==global.window?this:global,round=Math.round,hasOwnProperty=Object.prototype.hasOwnProperty,YEAR=0,MONTH=1,DATE=2,HOUR=3,MINUTE=4,SECOND=5,MILLISECOND=6,locales={},momentProperties=[],hasModule=</highlight><highlight class="stringliteral">&quot;undefined&quot;</highlight><highlight class="normal">!=typeof<sp/>module&amp;&amp;module&amp;&amp;module.exports,aspNetJsonRegex=/^\/?Date\((\-?\d+)/i,aspNetTimeSpanJsonRegex=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,isoDurationRegex=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,formattingTokens=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|</highlight><highlight class="keywordflow">do</highlight><highlight class="normal">?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,parseTokenOneOrTwoDigits=/\d\d?/,parseTokenOneToThreeDigits=/\d{1,3}/,parseTokenOneToFourDigits=/\d{1,4}/,parseTokenOneToSixDigits=/[+\-]?\d{1,6}/,parseTokenDigits=/\d+/,parseTokenWord=/[0-9]*[</highlight><highlight class="stringliteral">&apos;a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,parseTokenTimezone=/Z|[\+\-]\d\d:?\d\d/gi,parseTokenT=/T/i,parseTokenOffsetMs=/[\+\-]?\d+/,parseTokenTimestampMs=/[\+\-]?\d+(\.\d{1,3})?/,parseTokenOneDigit=/\d/,parseTokenTwoDigits=/\d\d/,parseTokenThreeDigits=/\d{3}/,parseTokenFourDigits=/\d{4}/,parseTokenSixDigits=/[+-]?\d{6}/,parseTokenSignedNumber=/[+-]?\d+/,isoRegex=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T|<sp/>)(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,isoFormat=&quot;YYYY-MM-DDTHH:mm:ssZ&quot;,isoDates=[[&quot;YYYYYY-MM-DD&quot;,/[+-]\d{6}-\d{2}-\d{2}/],[&quot;YYYY-MM-DD&quot;,/\d{4}-\d{2}-\d{2}/],[&quot;GGGG-[W]WW-E&quot;,/\d{4}-W\d{2}-\d/],[&quot;GGGG-[W]WW&quot;,/\d{4}-W\d{2}/],[&quot;YYYY-DDD&quot;,/\d{4}-\d{3}/]],isoTimes=[[&quot;HH:mm:ss.SSSS&quot;,/(T|<sp/>)\d\d:\d\d:\d\d\.\d+/],[&quot;HH:mm:ss&quot;,/(T|<sp/>)\d\d:\d\d:\d\d/],[&quot;HH:mm&quot;,/(T|<sp/>)\d\d:\d\d/],[&quot;HH&quot;,/(T|<sp/>)\d\d/]],parseTimezoneChunker=/([\+\-]|\d\d)/gi,unitMillisecondFactors=(&quot;Date|Hours|Minutes|Seconds|Milliseconds&quot;.split(&quot;|&quot;),{Milliseconds:1,Seconds:1e3,Minutes:6e4,Hours:36e5,Days:864e5,Months:2592e6,Years:31536e6}),unitAliases={ms:&quot;millisecond&quot;,s:&quot;second&quot;,m:&quot;minute&quot;,h:&quot;hour&quot;,d:&quot;day&quot;,D:&quot;date&quot;,w:&quot;week&quot;,W:&quot;isoWeek&quot;,M:&quot;month&quot;,Q:&quot;quarter&quot;,y:&quot;year&quot;,DDD:&quot;dayOfYear&quot;,e:&quot;weekday&quot;,E:&quot;isoWeekday&quot;,gg:&quot;weekYear&quot;,GG:&quot;isoWeekYear&quot;},camelFunctions={dayofyear:&quot;dayOfYear&quot;,isoweekday:&quot;isoWeekday&quot;,isoweek:&quot;isoWeek&quot;,weekyear:&quot;weekYear&quot;,isoweekyear:&quot;isoWeekYear&quot;},formatFunctions={},relativeTimeThresholds={s:45,m:45,h:22,d:26,M:11},ordinalizeTokens=&quot;DDD<sp/>w<sp/>W<sp/>M<sp/>D<sp/>d&quot;.split(&quot;<sp/>&quot;),paddedTokens=&quot;M<sp/>D<sp/>H<sp/>h<sp/>m<sp/>s<sp/>w<sp/>W&quot;.split(&quot;<sp/>&quot;),formatTokenFunctions={M:function(){return<sp/>this.month()+1},MMM:function(format){return<sp/>this.localeData().monthsShort(this,format)},MMMM:function(format){return<sp/>this.localeData().months(this,format)},D:function(){return<sp/>this.date()},DDD:function(){return<sp/>this.dayOfYear()},d:function(){return<sp/>this.day()},dd:function(format){return<sp/>this.localeData().weekdaysMin(this,format)},ddd:function(format){return<sp/>this.localeData().weekdaysShort(this,format)},dddd:function(format){return<sp/>this.localeData().weekdays(this,format)},w:function(){return<sp/>this.week()},W:function(){return<sp/>this.isoWeek()},YY:function(){return<sp/>leftZeroFill(this.year()%100,2)},YYYY:function(){return<sp/>leftZeroFill(this.year(),4)},YYYYY:function(){return<sp/>leftZeroFill(this.year(),5)},YYYYYY:function(){var<sp/>y=this.year(),sign=y&gt;=0?&quot;+&quot;:&quot;-&quot;;return<sp/>sign+leftZeroFill(Math.abs(y),6)},gg:function(){return<sp/>leftZeroFill(this.weekYear()%100,2)},gggg:function(){return<sp/>leftZeroFill(this.weekYear(),4)},ggggg:function(){return<sp/>leftZeroFill(this.weekYear(),5)},GG:function(){return<sp/>leftZeroFill(this.isoWeekYear()%100,2)},GGGG:function(){return<sp/>leftZeroFill(this.isoWeekYear(),4)},GGGGG:function(){return<sp/>leftZeroFill(this.isoWeekYear(),5)},e:function(){return<sp/>this.weekday()},E:function(){return<sp/>this.isoWeekday()},a:function(){return<sp/>this.localeData().meridiem(this.hours(),this.minutes(),!0)},A:function(){return<sp/>this.localeData().meridiem(this.hours(),this.minutes(),!1)},H:function(){return<sp/>this.hours()},h:function(){return<sp/>this.hours()%12||12},m:function(){return<sp/>this.minutes()},s:function(){return<sp/>this.seconds()},S:function(){return<sp/>toInt(this.milliseconds()/100)},SS:function(){return<sp/>leftZeroFill(toInt(this.milliseconds()/10),2)},SSS:function(){return<sp/>leftZeroFill(this.milliseconds(),3)},SSSS:function(){return<sp/>leftZeroFill(this.milliseconds(),3)},Z:function(){var<sp/>a=this.utcOffset(),b=&quot;+&quot;;return<sp/>0&gt;a&amp;&amp;(a=-a,b=&quot;-&quot;),b+leftZeroFill(toInt(a/60),2)+&quot;:&quot;+leftZeroFill(toInt(a)%60,2)},ZZ:function(){var<sp/>a=this.utcOffset(),b=&quot;+&quot;;return<sp/>0&gt;a&amp;&amp;(a=-a,b=&quot;-&quot;),b+leftZeroFill(toInt(a/60),2)+leftZeroFill(toInt(a)%60,2)},z:function(){return<sp/>this.zoneAbbr()},zz:function(){return<sp/>this.zoneName()},x:function(){return<sp/>this.valueOf()},X:function(){return<sp/>this.unix()},Q:function(){return<sp/>this.quarter()}},deprecations={},lists=[&quot;months&quot;,&quot;monthsShort&quot;,&quot;weekdays&quot;,&quot;weekdaysShort&quot;,&quot;weekdaysMin&quot;],updateInProgress=!1;ordinalizeTokens.length;)i=ordinalizeTokens.pop(),formatTokenFunctions[i+&quot;o&quot;]=ordinalizeToken(formatTokenFunctions[i],i);for(;paddedTokens.length;)i=paddedTokens.pop(),formatTokenFunctions[i+i]=padToken(formatTokenFunctions[i],2);formatTokenFunctions.DDDD=padToken(formatTokenFunctions.DDD,3),extend(Locale.prototype,{set:function(config){var<sp/>prop,i;for(i<sp/>in<sp/>config)prop=config[i],&quot;function&quot;==typeof<sp/>prop?this[i]=prop:this[&quot;_&quot;+i]=prop;this._ordinalParseLenient=new<sp/>RegExp(this._ordinalParse.source+&quot;|&quot;+/\d{1,2}/.source)},_months:&quot;January_February_March_April_May_June_July_August_September_October_November_December&quot;.split(&quot;_&quot;),months:function(m){return<sp/>this._months[m.month()]},_monthsShort:&quot;Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec&quot;.split(&quot;_&quot;),monthsShort:function(m){return<sp/>this._monthsShort[m.month()]},monthsParse:function(monthName,format,strict){var<sp/>i,mom,regex;for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),i=0;12&gt;i;i++){if(mom=moment.utc([2e3,i]),strict&amp;&amp;!this._longMonthsParse[i]&amp;&amp;(this._longMonthsParse[i]=new<sp/>RegExp(&quot;^&quot;+this.months(mom,&quot;&quot;).replace(&quot;.&quot;,&quot;&quot;)+&quot;$&quot;,&quot;i&quot;),this._shortMonthsParse[i]=new<sp/>RegExp(&quot;^&quot;+this.monthsShort(mom,&quot;&quot;).replace(&quot;.&quot;,&quot;&quot;)+&quot;$&quot;,&quot;i&quot;)),strict||this._monthsParse[i]||(regex=&quot;^&quot;+this.months(mom,&quot;&quot;)+&quot;|^&quot;+this.monthsShort(mom,&quot;&quot;),this._monthsParse[i]=new<sp/>RegExp(regex.replace(&quot;.&quot;,&quot;&quot;),&quot;i&quot;)),strict&amp;&amp;&quot;MMMM&quot;===format&amp;&amp;this._longMonthsParse[i].test(monthName))return<sp/>i;if(strict&amp;&amp;&quot;MMM&quot;===format&amp;&amp;this._shortMonthsParse[i].test(monthName))return<sp/>i;if(!strict&amp;&amp;this._monthsParse[i].test(monthName))return<sp/>i}},_weekdays:&quot;Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday&quot;.split(&quot;_&quot;),weekdays:function(m){return<sp/>this._weekdays[m.day()]},_weekdaysShort:&quot;Sun_Mon_Tue_Wed_Thu_Fri_Sat&quot;.split(&quot;_&quot;),weekdaysShort:function(m){return<sp/>this._weekdaysShort[m.day()]},_weekdaysMin:&quot;Su_Mo_Tu_We_Th_Fr_Sa&quot;.split(&quot;_&quot;),weekdaysMin:function(m){return<sp/>this._weekdaysMin[m.day()]},weekdaysParse:function(weekdayName){var<sp/>i,mom,regex;for(this._weekdaysParse||(this._weekdaysParse=[]),i=0;7&gt;i;i++)if(this._weekdaysParse[i]||(mom=moment([2e3,1]).day(i),regex=&quot;^&quot;+this.weekdays(mom,&quot;&quot;)+&quot;|^&quot;+this.weekdaysShort(mom,&quot;&quot;)+&quot;|^&quot;+this.weekdaysMin(mom,&quot;&quot;),this._weekdaysParse[i]=new<sp/>RegExp(regex.replace(&quot;.&quot;,&quot;&quot;),&quot;i&quot;)),this._weekdaysParse[i].test(weekdayName))return<sp/>i},_longDateFormat:{LTS:&quot;h:mm:ss<sp/>A&quot;,LT:&quot;h:mm<sp/>A&quot;,L:&quot;MM/DD/YYYY&quot;,LL:&quot;MMMM<sp/>D,<sp/>YYYY&quot;,LLL:&quot;MMMM<sp/>D,<sp/>YYYY<sp/>LT&quot;,LLLL:&quot;dddd,<sp/>MMMM<sp/>D,<sp/>YYYY<sp/>LT&quot;},longDateFormat:function(key){var<sp/>output=this._longDateFormat[key];return!output&amp;&amp;this._longDateFormat[key.toUpperCase()]&amp;&amp;(output=this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,function(val){return<sp/>val.slice(1)}),this._longDateFormat[key]=output),output},isPM:function(input){return&quot;p&quot;===(input+&quot;&quot;).toLowerCase().charAt(0)},_meridiemParse:/[ap]\.?m?\.?/i,meridiem:function(hours,minutes,isLower){return<sp/>hours&gt;11?isLower?&quot;pm&quot;:&quot;PM&quot;:isLower?&quot;am&quot;:&quot;AM&quot;},_calendar:{sameDay:&quot;[Today<sp/>at]<sp/>LT&quot;,nextDay:&quot;[Tomorrow<sp/>at]<sp/>LT&quot;,nextWeek:&quot;dddd<sp/>[at]<sp/>LT&quot;,lastDay:&quot;[Yesterday<sp/>at]<sp/>LT&quot;,lastWeek:&quot;[Last]<sp/>dddd<sp/>[at]<sp/>LT&quot;,sameElse:&quot;L&quot;},calendar:function(key,mom,now){var<sp/>output=this._calendar[key];return&quot;function&quot;==typeof<sp/>output?output.apply(mom,[now]):output},_relativeTime:{future:&quot;in<sp/>%s&quot;,past:&quot;%s<sp/>ago&quot;,s:&quot;a<sp/>few<sp/>seconds&quot;,m:&quot;a<sp/>minute&quot;,mm:&quot;%d<sp/>minutes&quot;,h:&quot;an<sp/>hour&quot;,hh:&quot;%d<sp/>hours&quot;,d:&quot;a<sp/>day&quot;,dd:&quot;%d<sp/>days&quot;,M:&quot;a<sp/>month&quot;,MM:&quot;%d<sp/>months&quot;,y:&quot;a<sp/>year&quot;,yy:&quot;%d<sp/>years&quot;},relativeTime:function(number,withoutSuffix,string,isFuture){var<sp/>output=this._relativeTime[string];return&quot;function&quot;==typeof<sp/>output?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number)},pastFuture:function(diff,output){var<sp/>format=this._relativeTime[diff&gt;0?&quot;future&quot;:&quot;past&quot;];return&quot;function&quot;==typeof<sp/>format?format(output):format.replace(/%s/i,output)},ordinal:function(number){return<sp/>this._ordinal.replace(&quot;%d&quot;,number)},_ordinal:&quot;%d&quot;,_ordinalParse:/\d{1,2}/,preparse:function(string){return<sp/>string},postformat:function(string){return<sp/>string},week:function(mom){return<sp/>weekOfYear(mom,this._week.dow,this._week.doy).week},_week:{dow:0,doy:6},firstDayOfWeek:function(){return<sp/>this._week.dow},firstDayOfYear:function(){return<sp/>this._week.doy},_invalidDate:&quot;Invalid<sp/>date&quot;,invalidDate:function(){return<sp/>this._invalidDate}}),moment=function(input,format,locale,strict){var<sp/>c;return&quot;boolean&quot;==typeof<sp/>locale&amp;&amp;(strict=locale,locale=undefined),c={},c._isAMomentObject=!0,c._i=input,c._f=format,c._l=locale,c._strict=strict,c._isUTC=!1,c._pf=defaultParsingFlags(),makeMoment(c)},moment.suppressDeprecationWarnings=!1,moment.createFromInputFallback=deprecate(&quot;moment<sp/>construction<sp/>falls<sp/>back<sp/>to<sp/>js<sp/>Date.<sp/>This<sp/>is<sp/>discouraged<sp/>and<sp/>will<sp/>be<sp/>removed<sp/>in<sp/>upcoming<sp/>major<sp/>release.<sp/>Please<sp/>refer<sp/>to<sp/>https://github.com/moment/moment/issues/1407<sp/>for<sp/>more<sp/>info.&quot;,function(config){config._d=new<sp/>Date(config._i+(config._useUTC?&quot;<sp/>UTC&quot;:&quot;&quot;))}),moment.min=function(){var<sp/>args=[].slice.call(arguments,0);return<sp/>pickBy(&quot;isBefore&quot;,args)},moment.max=function(){var<sp/>args=[].slice.call(arguments,0);return<sp/>pickBy(&quot;isAfter&quot;,args)},moment.utc=function(input,format,locale,strict){var<sp/>c;return&quot;boolean&quot;==typeof<sp/>locale&amp;&amp;(strict=locale,locale=undefined),c={},c._isAMomentObject=!0,c._useUTC=!0,c._isUTC=!0,c._l=locale,c._i=input,c._f=format,c._strict=strict,c._pf=defaultParsingFlags(),makeMoment(c).utc()},moment.unix=function(input){return<sp/>moment(1e3*input)},moment.duration=function(input,key){var<sp/>sign,ret,parseIso,diffRes,duration=input,match=null;return<sp/>moment.isDuration(input)?duration={ms:input._milliseconds,d:input._days,M:input._months}:&quot;number&quot;==typeof<sp/>input?(duration={},key?duration[key]=input:duration.milliseconds=input):(match=aspNetTimeSpanJsonRegex.exec(input))?(sign=&quot;-&quot;===match[1]?-1:1,duration={y:0,d:toInt(match[DATE])*sign,h:toInt(match[HOUR])*sign,m:toInt(match[MINUTE])*sign,s:toInt(match[SECOND])*sign,ms:toInt(match[MILLISECOND])*sign}):(match=isoDurationRegex.exec(input))?(sign=&quot;-&quot;===match[1]?-1:1,parseIso=function(inp){var<sp/>res=inp&amp;&amp;parseFloat(inp.replace(&quot;,&quot;,&quot;.&quot;));return(isNaN(res)?0:res)*sign},duration={y:parseIso(match[2]),M:parseIso(match[3]),d:parseIso(match[4]),h:parseIso(match[5]),m:parseIso(match[6]),s:parseIso(match[7]),w:parseIso(match[8])}):null==duration?duration={}:&quot;object&quot;==typeof<sp/>duration&amp;&amp;(&quot;from&quot;in<sp/>duration||&quot;to&quot;in<sp/>duration)&amp;&amp;(diffRes=momentsDifference(moment(duration.from),moment(duration.to)),duration={},duration.ms=diffRes.milliseconds,duration.M=diffRes.months),ret=new<sp/>Duration(duration),moment.isDuration(input)&amp;&amp;hasOwnProp(input,&quot;_locale&quot;)&amp;&amp;(ret._locale=input._locale),ret},moment.version=VERSION,moment.defaultFormat=isoFormat,moment.ISO_8601=function(){},moment.momentProperties=momentProperties,moment.updateOffset=function(){},moment.relativeTimeThreshold=function(threshold,limit){return<sp/>relativeTimeThresholds[threshold]===undefined?!1:limit===undefined?relativeTimeThresholds[threshold]:(relativeTimeThresholds[threshold]=limit,!0)},moment.lang=deprecate(&quot;moment.lang<sp/>is<sp/>deprecated.<sp/>Use<sp/>moment.locale<sp/>instead.&quot;,function(key,value){return<sp/>moment.locale(key,value)}),moment.locale=function(key,values){var<sp/>data;return<sp/>key&amp;&amp;(data=&quot;undefined&quot;!=typeof<sp/>values?moment.defineLocale(key,values):moment.localeData(key),data&amp;&amp;(moment.duration._locale=moment._locale=data)),moment._locale._abbr},moment.defineLocale=function(name,values){return<sp/>null!==values?(values.abbr=name,locales[name]||(locales[name]=new<sp/>Locale),locales[name].set(values),moment.locale(name),locales[name]):(delete<sp/>locales[name],null)},moment.langData=deprecate(&quot;moment.langData<sp/>is<sp/>deprecated.<sp/>Use<sp/>moment.localeData<sp/>instead.&quot;,function(key){return<sp/>moment.localeData(key)}),moment.localeData=function(key){var<sp/>locale;if(key&amp;&amp;key._locale&amp;&amp;key._locale._abbr&amp;&amp;(key=key._locale._abbr),!key)return<sp/>moment._locale;if(!isArray(key)){if(locale=loadLocale(key))return<sp/>locale;key=[key]}return<sp/>chooseLocale(key)},moment.isMoment=function(obj){return<sp/>obj<sp/>instanceof<sp/>Moment||null!=obj&amp;&amp;hasOwnProp(obj,&quot;_isAMomentObject&quot;)},moment.isDuration=function(obj){return<sp/>obj<sp/>instanceof<sp/>Duration};for(i=lists.length-1;i&gt;=0;--i)makeList(lists[i]);moment.normalizeUnits=function(units){return<sp/>normalizeUnits(units)},moment.invalid=function(flags){var<sp/>m=moment.utc(NaN);return<sp/>null!=flags?extend(m._pf,flags):m._pf.userInvalidated=!0,m},moment.parseZone=function(){return<sp/>moment.apply(null,arguments).parseZone()},moment.parseTwoDigitYear=function(input){return<sp/>toInt(input)+(toInt(input)&gt;68?1900:2e3)},moment.isDate=isDate,extend(moment.fn=Moment.prototype,{clone:function(){return<sp/>moment(this)},valueOf:function(){return+this._d-6e4*(this._offset||0)},unix:function(){return<sp/>Math.floor(+this/1e3)},toString:function(){return<sp/>this.clone().locale(&quot;en&quot;).format(&quot;ddd<sp/>MMM<sp/>DD<sp/>YYYY<sp/>HH:mm:ss<sp/>[GMT]ZZ&quot;)},toDate:function(){return<sp/>this._offset?new<sp/>Date(+this):this._d},toISOString:function(){var<sp/>m=moment(this).utc();return<sp/>0&lt;m.year()&amp;&amp;m.year()&lt;=9999?&quot;function&quot;==typeof<sp/>Date.prototype.toISOString?this.toDate().toISOString():formatMoment(m,&quot;YYYY-MM-DD[T]HH:mm:ss.SSS[Z]&quot;):formatMoment(m,&quot;YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]&quot;)},toArray:function(){var<sp/>m=this;return[m.year(),m.month(),m.date(),m.hours(),m.minutes(),m.seconds(),m.milliseconds()]},isValid:function(){return<sp/>isValid(this)},isDSTShifted:function(){return<sp/>this._a?this.isValid()&amp;&amp;compareArrays(this._a,(this._isUTC?moment.utc(this._a):moment(this._a)).toArray())&gt;0:!1},parsingFlags:function(){return<sp/>extend({},this._pf)},invalidAt:function(){return<sp/>this._pf.overflow},utc:function(keepLocalTime){return<sp/>this.utcOffset(0,keepLocalTime)},local:function(keepLocalTime){return<sp/>this._isUTC&amp;&amp;(this.utcOffset(0,keepLocalTime),this._isUTC=!1,keepLocalTime&amp;&amp;this.subtract(this._dateUtcOffset(),&quot;m&quot;)),this},format:function(inputString){var<sp/>output=formatMoment(this,inputString||moment.defaultFormat);return<sp/>this.localeData().postformat(output)},add:createAdder(1,&quot;add&quot;),subtract:createAdder(-1,&quot;subtract&quot;),diff:function(input,units,asFloat){var<sp/>diff,output,that=makeAs(input,this),zoneDiff=6e4*(that.utcOffset()-this.utcOffset());return<sp/>units=normalizeUnits(units),&quot;year&quot;===units||&quot;month&quot;===units||&quot;quarter&quot;===units?(output=monthDiff(this,that),&quot;quarter&quot;===units?output/=3:&quot;year&quot;===units&amp;&amp;(output/=12)):(diff=this-that,output=&quot;second&quot;===units?diff/1e3:&quot;minute&quot;===units?diff/6e4:&quot;hour&quot;===units?diff/36e5:&quot;day&quot;===units?(diff-zoneDiff)/864e5:&quot;week&quot;===units?(diff-zoneDiff)/6048e5:diff),asFloat?output:absRound(output)},from:function(time,withoutSuffix){return<sp/>moment.duration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix)},fromNow:function(withoutSuffix){return<sp/>this.from(moment(),withoutSuffix)},calendar:function(time){var<sp/>now=time||moment(),sod=makeAs(now,this).startOf(&quot;day&quot;),diff=this.diff(sod,&quot;days&quot;,!0),format=-6&gt;diff?&quot;sameElse&quot;:-1&gt;diff?&quot;lastWeek&quot;:0&gt;diff?&quot;lastDay&quot;:1&gt;diff?&quot;sameDay&quot;:2&gt;diff?&quot;nextDay&quot;:7&gt;diff?&quot;nextWeek&quot;:&quot;sameElse&quot;;return<sp/>this.format(this.localeData().calendar(format,this,moment(now)))},isLeapYear:function(){return<sp/>isLeapYear(this.year())},isDST:function(){return<sp/>this.utcOffset()&gt;this.clone().month(0).utcOffset()||this.utcOffset()&gt;this.clone().month(5).utcOffset()},day:function(input){var<sp/>day=this._isUTC?this._d.getUTCDay():this._d.getDay();return<sp/>null!=input?(input=parseWeekday(input,this.localeData()),this.add(input-day,&quot;d&quot;)):day},month:makeAccessor(&quot;Month&quot;,!0),startOf:function(units){switch(units=normalizeUnits(units)){case&quot;year&quot;:this.month(0);case&quot;quarter&quot;:case&quot;month&quot;:this.date(1);case&quot;week&quot;:case&quot;isoWeek&quot;:case&quot;day&quot;:this.hours(0);case&quot;hour&quot;:this.minutes(0);case&quot;minute&quot;:this.seconds(0);case&quot;second&quot;:this.milliseconds(0)}return&quot;week&quot;===units?this.weekday(0):&quot;isoWeek&quot;===units&amp;&amp;this.isoWeekday(1),&quot;quarter&quot;===units&amp;&amp;this.month(3*Math.floor(this.month()/3)),this},endOf:function(units){return<sp/>units=normalizeUnits(units),units===undefined||&quot;millisecond&quot;===units?this:this.startOf(units).add(1,&quot;isoWeek&quot;===units?&quot;week&quot;:units).subtract(1,&quot;ms&quot;)},isAfter:function(input,units){var<sp/>inputMs;return<sp/>units=normalizeUnits(&quot;undefined&quot;!=typeof<sp/>units?units:&quot;millisecond&quot;),&quot;millisecond&quot;===units?(input=moment.isMoment(input)?input:moment(input),+this&gt;+input):(inputMs=moment.isMoment(input)?+input:+moment(input),inputMs&lt;+this.clone().startOf(units))},isBefore:function(input,units){var<sp/>inputMs;return<sp/>units=normalizeUnits(&quot;undefined&quot;!=typeof<sp/>units?units:&quot;millisecond&quot;),&quot;millisecond&quot;===units?(input=moment.isMoment(input)?input:moment(input),+input&gt;+this):(inputMs=moment.isMoment(input)?+input:+moment(input),+this.clone().endOf(units)&lt;inputMs)},isBetween:function(from,to,units){return<sp/>this.isAfter(from,units)&amp;&amp;this.isBefore(to,units)},isSame:function(input,units){var<sp/>inputMs;return<sp/>units=normalizeUnits(units||&quot;millisecond&quot;),&quot;millisecond&quot;===units?(input=moment.isMoment(input)?input:moment(input),+this===+input):(inputMs=+moment(input),+this.clone().startOf(units)&lt;=inputMs&amp;&amp;inputMs&lt;=+this.clone().endOf(units))},min:deprecate(&quot;moment().min<sp/>is<sp/>deprecated,<sp/>use<sp/>moment.min<sp/>instead.<sp/>https://github.com/moment/moment/issues/1548&quot;,function(other){return<sp/>other=moment.apply(null,arguments),this&gt;other?this:other}),max:deprecate(&quot;moment().max<sp/>is<sp/>deprecated,<sp/>use<sp/>moment.max<sp/>instead.<sp/>https://github.com/moment/moment/issues/1548&quot;,function(other){return<sp/>other=moment.apply(null,arguments),other&gt;this?this:other}),zone:deprecate(&quot;moment().zone<sp/>is<sp/>deprecated,<sp/>use<sp/>moment().utcOffset<sp/>instead.<sp/>https://github.com/moment/moment/issues/1779&quot;,function(input,keepLocalTime){return<sp/>null!=input?(&quot;string&quot;!=typeof<sp/>input&amp;&amp;(input=-input),this.utcOffset(input,keepLocalTime),this):-this.utcOffset()}),utcOffset:function(input,keepLocalTime){var<sp/>localAdjust,offset=this._offset||0;return<sp/>null!=input?(&quot;string&quot;==typeof<sp/>input&amp;&amp;(input=utcOffsetFromString(input)),Math.abs(input)&lt;16&amp;&amp;(input=60*input),!this._isUTC&amp;&amp;keepLocalTime&amp;&amp;(localAdjust=this._dateUtcOffset()),this._offset=input,this._isUTC=!0,null!=localAdjust&amp;&amp;this.add(localAdjust,&quot;m&quot;),offset!==input&amp;&amp;(!keepLocalTime||this._changeInProgress?addOrSubtractDurationFromMoment(this,moment.duration(input-offset,&quot;m&quot;),1,!1):this._changeInProgress||(this._changeInProgress=!0,moment.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?offset:this._dateUtcOffset()},isLocal:function(){return!this._isUTC},isUtcOffset:function(){return<sp/>this._isUTC},isUtc:function(){return<sp/>this._isUTC&amp;&amp;0===this._offset},zoneAbbr:function(){return<sp/>this._isUTC?&quot;UTC&quot;:&quot;&quot;},zoneName:function(){return<sp/>this._isUTC?&quot;Coordinated<sp/>Universal<sp/>Time&quot;:&quot;&quot;},parseZone:function(){return<sp/>this._tzm?this.utcOffset(this._tzm):&quot;string&quot;==typeof<sp/>this._i&amp;&amp;this.utcOffset(utcOffsetFromString(this._i)),this},hasAlignedHourOffset:function(input){return<sp/>input=input?moment(input).utcOffset():0,(this.utcOffset()-input)%60===0},daysInMonth:function(){return<sp/>daysInMonth(this.year(),this.month())},dayOfYear:function(input){var<sp/>dayOfYear=round((moment(this).startOf(&quot;day&quot;)-moment(this).startOf(&quot;year&quot;))/864e5)+1;return<sp/>null==input?dayOfYear:this.add(input-dayOfYear,&quot;d&quot;)},quarter:function(input){return<sp/>null==input?Math.ceil((this.month()+1)/3):this.month(3*(input-1)+this.month()%3)},weekYear:function(input){var<sp/>year=weekOfYear(this,this.localeData()._week.dow,this.localeData()._week.doy).year;return<sp/>null==input?year:this.add(input-year,&quot;y&quot;)},isoWeekYear:function(input){var<sp/>year=weekOfYear(this,1,4).year;return<sp/>null==input?year:this.add(input-year,&quot;y&quot;)},week:function(input){var<sp/>week=this.localeData().week(this);return<sp/>null==input?week:this.add(7*(input-week),&quot;d&quot;)},isoWeek:function(input){var<sp/>week=weekOfYear(this,1,4).week;return<sp/>null==input?week:this.add(7*(input-week),&quot;d&quot;)},weekday:function(input){var<sp/>weekday=(this.day()+7-this.localeData()._week.dow)%7;return<sp/>null==input?weekday:this.add(input-weekday,&quot;d&quot;)},isoWeekday:function(input){return<sp/>null==input?this.day()||7:this.day(this.day()%7?input:input-7)},isoWeeksInYear:function(){return<sp/>weeksInYear(this.year(),1,4)},weeksInYear:function(){var<sp/>weekInfo=this.localeData()._week;return<sp/>weeksInYear(this.year(),weekInfo.dow,weekInfo.doy)},get:function(units){return<sp/>units=normalizeUnits(units),this[units]()},set:function(units,value){var<sp/>unit;if(&quot;object&quot;==typeof<sp/>units)for(unit<sp/>in<sp/>units)this.set(unit,units[unit]);else<sp/>units=normalizeUnits(units),&quot;function&quot;==typeof<sp/>this[units]&amp;&amp;this[units](value);return<sp/>this},locale:function(key){var<sp/>newLocaleData;return<sp/>key===undefined?this._locale._abbr:(newLocaleData=moment.localeData(key),null!=newLocaleData&amp;&amp;(this._locale=newLocaleData),this)},lang:deprecate(&quot;moment().lang()<sp/>is<sp/>deprecated.<sp/>Instead,<sp/>use<sp/>moment().localeData()<sp/>to<sp/>get<sp/>the<sp/>language<sp/>configuration.<sp/>Use<sp/>moment().locale()<sp/>to<sp/>change<sp/>languages.&quot;,function(key){return<sp/>key===undefined?this.localeData():this.locale(key)}),localeData:function(){return<sp/>this._locale},_dateUtcOffset:function(){return<sp/>15*-Math.round(this._d.getTimezoneOffset()/15)}}),moment.fn.millisecond=moment.fn.milliseconds=makeAccessor(&quot;Milliseconds&quot;,!1),moment.fn.second=moment.fn.seconds=makeAccessor(&quot;Seconds&quot;,!1),moment.fn.minute=moment.fn.minutes=makeAccessor(&quot;Minutes&quot;,!1),moment.fn.hour=moment.fn.hours=makeAccessor(&quot;Hours&quot;,!0),moment.fn.date=makeAccessor(&quot;Date&quot;,!0),moment.fn.dates=deprecate(&quot;dates<sp/>accessor<sp/>is<sp/>deprecated.<sp/>Use<sp/>date<sp/>instead.&quot;,makeAccessor(&quot;Date&quot;,!0)),moment.fn.year=makeAccessor(&quot;FullYear&quot;,!0),moment.fn.years=deprecate(&quot;years<sp/>accessor<sp/>is<sp/>deprecated.<sp/>Use<sp/>year<sp/>instead.&quot;,makeAccessor(&quot;FullYear&quot;,!0)),moment.fn.days=moment.fn.day,moment.fn.months=moment.fn.month,moment.fn.weeks=moment.fn.week,moment.fn.isoWeeks=moment.fn.isoWeek,moment.fn.quarters=moment.fn.quarter,moment.fn.toJSON=moment.fn.toISOString,moment.fn.isUTC=moment.fn.isUtc,extend(moment.duration.fn=Duration.prototype,{_bubble:function(){var<sp/>seconds,minutes,hours,milliseconds=this._milliseconds,days=this._days,months=this._months,data=this._data,years=0;data.milliseconds=milliseconds%1e3,seconds=absRound(milliseconds/1e3),data.seconds=seconds%60,minutes=absRound(seconds/60),data.minutes=minutes%60,hours=absRound(minutes/60),data.hours=hours%24,days+=absRound(hours/24),years=absRound(daysToYears(days)),days-=absRound(yearsToDays(years)),months+=absRound(days/30),days%=30,years+=absRound(months/12),months%=12,data.days=days,data.months=months,data.years=years},abs:function(){return<sp/>this._milliseconds=Math.abs(this._milliseconds),this._days=Math.abs(this._days),this._months=Math.abs(this._months),this._data.milliseconds=Math.abs(this._data.milliseconds),this._data.seconds=Math.abs(this._data.seconds),this._data.minutes=Math.abs(this._data.minutes),this._data.hours=Math.abs(this._data.hours),this._data.months=Math.abs(this._data.months),this._data.years=Math.abs(this._data.years),this},weeks:function(){return<sp/>absRound(this.days()/7)},valueOf:function(){return<sp/>this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*toInt(this._months/12)},humanize:function(withSuffix){var<sp/>output=relativeTime(this,!withSuffix,this.localeData());return<sp/>withSuffix&amp;&amp;(output=this.localeData().pastFuture(+this,output)),this.localeData().postformat(output)},add:function(input,val){var<sp/>dur=moment.duration(input,val);return<sp/>this._milliseconds+=dur._milliseconds,this._days+=dur._days,this._months+=dur._months,this._bubble(),this},subtract:function(input,val){var<sp/>dur=moment.duration(input,val);return<sp/>this._milliseconds-=dur._milliseconds,this._days-=dur._days,this._months-=dur._months,this._bubble(),this},get:function(units){return<sp/>units=normalizeUnits(units),this[units.toLowerCase()+&quot;s&quot;]()},as:function(units){var<sp/>days,months;if(units=normalizeUnits(units),&quot;month&quot;===units||&quot;year&quot;===units)return<sp/>days=this._days+this._milliseconds/864e5,months=this._months+12*daysToYears(days),&quot;month&quot;===units?months:months/12;switch(days=this._days+Math.round(yearsToDays(this._months/12)),units){case&quot;week&quot;:return<sp/>days/7+this._milliseconds/6048e5;case&quot;day&quot;:return<sp/>days+this._milliseconds/864e5;case&quot;hour&quot;:return<sp/>24*days+this._milliseconds/36e5;case&quot;minute&quot;:return<sp/>24*days*60+this._milliseconds/6e4;case&quot;second&quot;:return<sp/>24*days*60*60+this._milliseconds/1e3;case&quot;millisecond&quot;:return<sp/>Math.floor(24*days*60*60*1e3)+this._milliseconds;default:throw<sp/>new<sp/>Error(&quot;Unknown<sp/>unit<sp/>&quot;+units)}},lang:moment.fn.lang,locale:moment.fn.locale,toIsoString:deprecate(&quot;toIsoString()<sp/>is<sp/>deprecated.<sp/>Please<sp/>use<sp/>toISOString()<sp/>instead<sp/>(notice<sp/>the<sp/>capitals)&quot;,function(){return<sp/>this.toISOString()}),toISOString:function(){var<sp/>years=Math.abs(this.years()),months=Math.abs(this.months()),days=Math.abs(this.days()),hours=Math.abs(this.hours()),minutes=Math.abs(this.minutes()),seconds=Math.abs(this.seconds()+this.milliseconds()/1e3);return<sp/>this.asSeconds()?(this.asSeconds()&lt;0?&quot;-&quot;:&quot;&quot;)+&quot;P&quot;+(years?years+&quot;Y&quot;:&quot;&quot;)+(months?months+&quot;M&quot;:&quot;&quot;)+(days?days+&quot;D&quot;:&quot;&quot;)+(hours||minutes||seconds?&quot;T&quot;:&quot;&quot;)+(hours?hours+&quot;H&quot;:&quot;&quot;)+(minutes?minutes+&quot;M&quot;:&quot;&quot;)+(seconds?seconds+&quot;S&quot;:&quot;&quot;):&quot;P0D&quot;},localeData:function(){return<sp/>this._locale},toJSON:function(){return<sp/>this.toISOString()}}),moment.duration.fn.toString=moment.duration.fn.toISOString;for(i<sp/>in<sp/>unitMillisecondFactors)hasOwnProp(unitMillisecondFactors,i)&amp;&amp;makeDurationGetter(i.toLowerCase());moment.duration.fn.asMilliseconds=function(){return<sp/>this.as(&quot;ms&quot;)},moment.duration.fn.asSeconds=function(){return<sp/>this.as(&quot;s&quot;)},moment.duration.fn.asMinutes=function(){return<sp/>this.as(&quot;m&quot;)},moment.duration.fn.asHours=function(){return<sp/>this.as(&quot;h&quot;)},moment.duration.fn.asDays=function(){return<sp/>this.as(&quot;d&quot;)},moment.duration.fn.asWeeks=function(){return<sp/>this.as(&quot;weeks&quot;)},moment.duration.fn.asMonths=function(){return<sp/>this.as(&quot;M&quot;)},moment.duration.fn.asYears=function(){return<sp/>this.as(&quot;y&quot;)},moment.locale(&quot;en&quot;,{ordinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(number){var<sp/>b=number%10,output=1===toInt(number%100/10)?&quot;th&quot;:1===b?&quot;st&quot;:2===b?&quot;nd&quot;:3===b?&quot;rd&quot;:&quot;th&quot;;return<sp/>number+output}}),hasModule?module.exports=moment:&quot;function&quot;==typeof<sp/>define&amp;&amp;define.amd?(define(function(require,exports,module){return<sp/>module.config&amp;&amp;module.config()&amp;&amp;module.config().noGlobal===!0&amp;&amp;(globalScope.moment=oldGlobalMoment),moment}),makeGlobal(!0)):makeGlobal()}.call(this),function(){function<sp/>humanizer(passedOptions){var<sp/>result=function(ms,humanizerOptions){var<sp/>options=extend({},result,humanizerOptions||{});return<sp/>doHumanization(ms,options)};return<sp/>extend(result,{language:&quot;en&quot;,delimiter:&quot;,<sp/>&quot;,spacer:&quot;<sp/>&quot;,units:[&quot;year&quot;,&quot;month&quot;,&quot;week&quot;,&quot;day&quot;,&quot;hour&quot;,&quot;minute&quot;,&quot;second&quot;],languages:{},halfUnit:!0,round:!1},passedOptions)}function<sp/>humanizeDuration(){return<sp/>defaultHumanizer.apply(defaultHumanizer,arguments)}function<sp/>doHumanization(ms,options){if(ms=Math.abs(ms),0===ms)return&quot;0&quot;;var<sp/>dictionary=options.languages[options.language]||languages[options.language];if(!dictionary)throw<sp/>new<sp/>Error(&quot;No<sp/>language<sp/>&quot;+dictionary+&quot;.&quot;);for(var<sp/>unitName,unitMS,unitCount,mightBeHalfUnit,result=[],i=0,len=options.units.length;len&gt;i;i++){if(unitName=options.units[i],&quot;s&quot;===unitName[unitName.length-1]&amp;&amp;(unitName=unitName.substring(0,unitName.length-1)),unitMS=UNITS[unitName],0===result.length&amp;&amp;options.halfUnit&amp;&amp;(mightBeHalfUnit=ms/unitMS*2,mightBeHalfUnit===Math.floor(mightBeHalfUnit)))return<sp/>render(mightBeHalfUnit/2,unitName,dictionary,options.spacer);i+1===len?(unitCount=ms/unitMS,options.round&amp;&amp;(unitCount=Math.round(unitCount))):unitCount=Math.floor(ms/unitMS),unitCount&amp;&amp;result.push(render(unitCount,unitName,dictionary,options.spacer)),ms-=unitCount*unitMS}return<sp/>result.join(options.delimiter)}function<sp/>render(count,type,dictionary,spacer){var<sp/>word,dictionaryValue=dictionary[type];return<sp/>word=&quot;function&quot;==typeof<sp/>dictionaryValue?dictionaryValue(count):dictionaryValue,count+spacer+word}function<sp/>extend(destination){for(var<sp/>source,i=1;i&lt;arguments.length;i++){source=arguments[i];for(var<sp/>prop<sp/>in<sp/>source)source.hasOwnProperty(prop)&amp;&amp;(destination[prop]=source[prop])}return<sp/>destination}function<sp/>getPolishForm(c){return<sp/>1===c?0:Math.floor(c)!==c?1:c%10&gt;=2&amp;&amp;4&gt;=c%10&amp;&amp;!(c%100&gt;10&amp;&amp;20&gt;c%100)?2:3}function<sp/>getRussianForm(c){return<sp/>Math.floor(c)!==c?2:0===c||c&gt;=5&amp;&amp;20&gt;=c||c%10&gt;=5&amp;&amp;9&gt;=c%10||c%10===0?0:1===c||c%10===1?1:c&gt;1?2:0}function<sp/>getSupportedLanguages(){var<sp/>result=[];for(var<sp/>language<sp/>in<sp/>languages)languages.hasOwnProperty(language)&amp;&amp;result.push(language);return<sp/>result}var<sp/>UNITS={year:315576e5,month:26298e5,week:6048e5,day:864e5,hour:36e5,minute:6e4,second:1e3,millisecond:1},languages={ar:{year:function(c){return<sp/>1===c?&quot;سنة&quot;:&quot;سنوات&quot;},month:function(c){return<sp/>1===c?&quot;شهر&quot;:&quot;أشهر&quot;},week:function(c){return<sp/>1===c?&quot;أسبوع&quot;:&quot;أسابيع&quot;;</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">},day:function(c){return<sp/>1===c?&quot;يوم&quot;:&quot;أيام&quot;},hour:function(c){return<sp/>1===c?&quot;ساعة&quot;:&quot;ساعات&quot;},minute:function(c){return<sp/>1===c?&quot;دقيقة&quot;:&quot;دقائق&quot;},second:function(c){return<sp/>1===c?&quot;ثانية&quot;:&quot;ثواني&quot;},millisecond:function(c){return<sp/>1===c?&quot;جزء<sp/>من<sp/>الثانية&quot;:&quot;أجزاء<sp/>من<sp/>الثانية&quot;}},ca:{year:function(c){return&quot;any&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},month:function(c){return&quot;mes&quot;+(1!==c?&quot;os&quot;:&quot;&quot;)},week:function(c){return&quot;setman&quot;+(1!==c?&quot;es&quot;:&quot;a&quot;)},day:function(c){return&quot;di&quot;+(1!==c?&quot;es&quot;:&quot;a&quot;)},hour:function(c){return&quot;hor&quot;+(1!==c?&quot;es&quot;:&quot;a&quot;)},minute:function(c){return&quot;minut&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},second:function(c){return&quot;segon&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},millisecond:function(c){return&quot;milisegon&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)}},da:{year:&quot;år&quot;,month:function(c){return&quot;måned&quot;+(1!==c?&quot;er&quot;:&quot;&quot;)},week:function(c){return&quot;uge&quot;+(1!==c?&quot;r&quot;:&quot;&quot;)},day:function(c){return&quot;dag&quot;+(1!==c?&quot;e&quot;:&quot;&quot;)},hour:function(c){return&quot;time&quot;+(1!==c?&quot;r&quot;:&quot;&quot;)},minute:function(c){return&quot;minut&quot;+(1!==c?&quot;ter&quot;:&quot;&quot;)},second:function(c){return&quot;sekund&quot;+(1!==c?&quot;er&quot;:&quot;&quot;)},millisecond:function(c){return&quot;millisekund&quot;+(1!==c?&quot;er&quot;:&quot;&quot;)}},de:{year:function(c){return&quot;Jahr&quot;+(1!==c?&quot;e&quot;:&quot;&quot;)},month:function(c){return&quot;Monat&quot;+(1!==c?&quot;e&quot;:&quot;&quot;)},week:function(c){return&quot;Woche&quot;+(1!==c?&quot;n&quot;:&quot;&quot;)},day:function(c){return&quot;Tag&quot;+(1!==c?&quot;e&quot;:&quot;&quot;)},hour:function(c){return&quot;Stunde&quot;+(1!==c?&quot;n&quot;:&quot;&quot;)},minute:function(c){return&quot;Minute&quot;+(1!==c?&quot;n&quot;:&quot;&quot;)},second:function(c){return&quot;Sekunde&quot;+(1!==c?&quot;n&quot;:&quot;&quot;)},millisecond:function(c){return&quot;Millisekunde&quot;+(1!==c?&quot;n&quot;:&quot;&quot;)}},en:{year:function(c){return&quot;year&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},month:function(c){return&quot;month&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},week:function(c){return&quot;week&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},day:function(c){return&quot;day&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},hour:function(c){return&quot;hour&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},minute:function(c){return&quot;minute&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},second:function(c){return&quot;second&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},millisecond:function(c){return&quot;millisecond&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)}},es:{year:function(c){return&quot;año&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},month:function(c){return&quot;mes&quot;+(1!==c?&quot;es&quot;:&quot;&quot;)},week:function(c){return&quot;semana&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},day:function(c){return&quot;día&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},hour:function(c){return&quot;hora&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},minute:function(c){return&quot;minuto&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},second:function(c){return&quot;segundo&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},millisecond:function(c){return&quot;milisegundo&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)}},fr:{year:function(c){return&quot;an&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},month:&quot;mois&quot;,week:function(c){return&quot;semaine&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},day:function(c){return&quot;jour&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},hour:function(c){return&quot;heure&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},minute:function(c){return&quot;minute&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},second:function(c){return&quot;seconde&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},millisecond:function(c){return&quot;milliseconde&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)}},hu:{year:&quot;év&quot;,month:&quot;hónap&quot;,week:&quot;hét&quot;,day:&quot;nap&quot;,hour:&quot;óra&quot;,minute:&quot;perc&quot;,second:&quot;másodperc&quot;,millisecond:&quot;ezredmásodperc&quot;},it:{year:function(c){return&quot;ann&quot;+(1!==c?&quot;i&quot;:&quot;o&quot;)},month:function(c){return&quot;mes&quot;+(1!==c?&quot;i&quot;:&quot;e&quot;)},week:function(c){return&quot;settiman&quot;+(1!==c?&quot;e&quot;:&quot;a&quot;)},day:function(c){return&quot;giorn&quot;+(1!==c?&quot;i&quot;:&quot;o&quot;)},hour:function(c){return&quot;or&quot;+(1!==c?&quot;e&quot;:&quot;a&quot;)},minute:function(c){return&quot;minut&quot;+(1!==c?&quot;i&quot;:&quot;o&quot;)},second:function(c){return&quot;second&quot;+(1!==c?&quot;i&quot;:&quot;o&quot;)},millisecond:function(c){return&quot;millisecond&quot;+(1!==c?&quot;i&quot;:&quot;o&quot;)}},ja:{year:&quot;年&quot;,month:&quot;月&quot;,week:&quot;週&quot;,day:&quot;日&quot;,hour:&quot;時間&quot;,minute:&quot;分&quot;,second:&quot;秒&quot;,millisecond:&quot;ミリ秒&quot;},ko:{year:&quot;년&quot;,month:&quot;개월&quot;,week:&quot;주일&quot;,day:&quot;일&quot;,hour:&quot;시간&quot;,minute:&quot;분&quot;,second:&quot;초&quot;,millisecond:&quot;밀리<sp/>초&quot;},nl:{year:&quot;jaar&quot;,month:function(c){return<sp/>1===c?&quot;maand&quot;:&quot;maanden&quot;},week:function(c){return<sp/>1===c?&quot;week&quot;:&quot;weken&quot;},day:function(c){return<sp/>1===c?&quot;dag&quot;:&quot;dagen&quot;},hour:&quot;uur&quot;,minute:function(c){return<sp/>1===c?&quot;minuut&quot;:&quot;minuten&quot;},second:function(c){return<sp/>1===c?&quot;seconde&quot;:&quot;seconden&quot;},millisecond:function(c){return<sp/>1===c?&quot;milliseconde&quot;:&quot;milliseconden&quot;}},nob:{year:&quot;år&quot;,month:function(c){return&quot;måned&quot;+(1!==c?&quot;er&quot;:&quot;&quot;)},week:function(c){return&quot;uke&quot;+(1!==c?&quot;r&quot;:&quot;&quot;)},day:function(c){return&quot;dag&quot;+(1!==c?&quot;er&quot;:&quot;&quot;)},hour:function(c){return&quot;time&quot;+(1!==c?&quot;r&quot;:&quot;&quot;)},minute:function(c){return&quot;minutt&quot;+(1!==c?&quot;er&quot;:&quot;&quot;)},second:function(c){return&quot;sekund&quot;+(1!==c?&quot;er&quot;:&quot;&quot;)},millisecond:function(c){return&quot;millisekund&quot;+(1!==c?&quot;er&quot;:&quot;&quot;)}},pl:{year:function(c){return[&quot;rok&quot;,&quot;roku&quot;,&quot;lata&quot;,&quot;lat&quot;][getPolishForm(c)]},month:function(c){return[&quot;miesiąc&quot;,&quot;miesiąca&quot;,&quot;miesiące&quot;,&quot;miesięcy&quot;][getPolishForm(c)]},week:function(c){return[&quot;tydzień&quot;,&quot;tygodnia&quot;,&quot;tygodnie&quot;,&quot;tygodni&quot;][getPolishForm(c)]},day:function(c){return[&quot;dzień&quot;,&quot;dnia&quot;,&quot;dni&quot;,&quot;dni&quot;][getPolishForm(c)]},hour:function(c){return[&quot;godzina&quot;,&quot;godziny&quot;,&quot;godziny&quot;,&quot;godzin&quot;][getPolishForm(c)]},minute:function(c){return[&quot;minuta&quot;,&quot;minuty&quot;,&quot;minuty&quot;,&quot;minut&quot;][getPolishForm(c)]},second:function(c){return[&quot;sekunda&quot;,&quot;sekundy&quot;,&quot;sekundy&quot;,&quot;sekund&quot;][getPolishForm(c)]},millisecond:function(c){return[&quot;milisekunda&quot;,&quot;milisekundy&quot;,&quot;milisekundy&quot;,&quot;milisekund&quot;][getPolishForm(c)]}},pt:{year:function(c){return&quot;ano&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},month:function(c){return<sp/>1!==c?&quot;meses&quot;:&quot;mês&quot;},week:function(c){return&quot;semana&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},day:function(c){return&quot;dia&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},hour:function(c){return&quot;hora&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},minute:function(c){return&quot;minuto&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},second:function(c){return&quot;segundo&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)},millisecond:function(c){return&quot;milissegundo&quot;+(1!==c?&quot;s&quot;:&quot;&quot;)}},ru:{year:function(c){return[&quot;лет&quot;,&quot;год&quot;,&quot;года&quot;][getRussianForm(c)]},month:function(c){return[&quot;месяцев&quot;,&quot;месяц&quot;,&quot;месяца&quot;][getRussianForm(c)]},week:function(c){return[&quot;недель&quot;,&quot;неделя&quot;,&quot;недели&quot;][getRussianForm(c)]},day:function(c){return[&quot;дней&quot;,&quot;день&quot;,&quot;дня&quot;][getRussianForm(c)]},hour:function(c){return[&quot;часов&quot;,&quot;час&quot;,&quot;часа&quot;][getRussianForm(c)]},minute:function(c){return[&quot;минут&quot;,&quot;минута&quot;,&quot;минуты&quot;][getRussianForm(c)]},second:function(c){return[&quot;секунд&quot;,&quot;секунда&quot;,&quot;секунды&quot;][getRussianForm(c)]},millisecond:function(c){return[&quot;миллисекунд&quot;,&quot;миллисекунда&quot;,&quot;миллисекунды&quot;][getRussianForm(c)]}},sv:{year:&quot;år&quot;,month:function(c){return&quot;månad&quot;+(1!==c?&quot;er&quot;:&quot;&quot;)},week:function(c){return&quot;veck&quot;+(1!==c?&quot;or&quot;:&quot;a&quot;)},day:function(c){return&quot;dag&quot;+(1!==c?&quot;ar&quot;:&quot;&quot;)},hour:function(c){return&quot;timm&quot;+(1!==c?&quot;ar&quot;:&quot;e&quot;)},minute:function(c){return&quot;minut&quot;+(1!==c?&quot;er&quot;:&quot;&quot;)},second:function(c){return&quot;sekund&quot;+(1!==c?&quot;er&quot;:&quot;&quot;)},millisecond:function(c){return&quot;millisekund&quot;+(1!==c?&quot;er&quot;:&quot;&quot;)}},tr:{year:&quot;yıl&quot;,month:&quot;ay&quot;,week:&quot;hafta&quot;,day:&quot;gün&quot;,hour:&quot;saat&quot;,minute:&quot;dakika&quot;,second:&quot;saniye&quot;,millisecond:&quot;milisaniye&quot;},&quot;zh-CN&quot;:{year:&quot;年&quot;,month:&quot;个月&quot;,week:&quot;周&quot;,day:&quot;天&quot;,hour:&quot;小时&quot;,minute:&quot;分钟&quot;,second:&quot;秒&quot;,millisecond:&quot;毫秒&quot;},&quot;zh-TW&quot;:{year:&quot;年&quot;,month:&quot;個月&quot;,week:&quot;周&quot;,day:&quot;天&quot;,hour:&quot;小時&quot;,minute:&quot;分鐘&quot;,second:&quot;秒&quot;,millisecond:&quot;毫秒&quot;}},defaultHumanizer=humanizer({});humanizeDuration.humanizer=humanizer,humanizeDuration.getSupportedLanguages=getSupportedLanguages,&quot;function&quot;==typeof<sp/>define&amp;&amp;define.amd?define(function(){return<sp/>humanizeDuration}):&quot;undefined&quot;!=typeof<sp/>module&amp;&amp;module.exports?module.exports=humanizeDuration:this.humanizeDuration=humanizeDuration}();var<sp/>timerModule=angular.module(&quot;timer&quot;,[]).directive(&quot;timer&quot;,[&quot;$compile&quot;,function($compile){return{restrict:&quot;EA&quot;,replace:!1,scope:{interval:&quot;=interval&quot;,startTimeAttr:&quot;=startTime&quot;,endTimeAttr:&quot;=endTime&quot;,countdownattr:&quot;=countdown&quot;,finishCallback:&quot;&amp;finishCallback&quot;,autoStart:&quot;&amp;autoStart&quot;,language:&quot;@?&quot;,fallback:&quot;@?&quot;,maxTimeUnit:&quot;=&quot;},controller:[&quot;$scope&quot;,&quot;$element&quot;,&quot;$attrs&quot;,&quot;$timeout&quot;,&quot;I18nService&quot;,&quot;$interpolate&quot;,&quot;progressBarService&quot;,function($scope,$element,$attrs,$timeout,I18nService,$interpolate,progressBarService){function<sp/>resetTimeout(){$scope.timeoutId&amp;&amp;clearTimeout($scope.timeoutId)}function<sp/>calculateTimeUnits(){var<sp/>timeUnits={};void<sp/>0!==$attrs.startTime&amp;&amp;($scope.millis=moment().diff(moment($scope.startTimeAttr))),timeUnits=i18nService.getTimeUnits($scope.millis),$scope.maxTimeUnit&amp;&amp;&quot;day&quot;!==$scope.maxTimeUnit?&quot;second&quot;===$scope.maxTimeUnit?($scope.seconds=Math.floor($scope.millis/1e3),$scope.minutes=0,$scope.hours=0,$scope.days=0,$scope.months=0,$scope.years=0):&quot;minute&quot;===$scope.maxTimeUnit?($scope.seconds=Math.floor($scope.millis/1e3%60),$scope.minutes=Math.floor($scope.millis/6e4),$scope.hours=0,$scope.days=0,$scope.months=0,$scope.years=0):&quot;hour&quot;===$scope.maxTimeUnit?($scope.seconds=Math.floor($scope.millis/1e3%60),$scope.minutes=Math.floor($scope.millis/6e4%60),$scope.hours=Math.floor($scope.millis/36e5),$scope.days=0,$scope.months=0,$scope.years=0):&quot;month&quot;===$scope.maxTimeUnit?($scope.seconds=Math.floor($scope.millis/1e3%60),$scope.minutes=Math.floor($scope.millis/6e4%60),$scope.hours=Math.floor($scope.millis/36e5%24),$scope.days=Math.floor($scope.millis/36e5/24%30),$scope.months=Math.floor($scope.millis/36e5/24/30),$scope.years=0):&quot;year&quot;===$scope.maxTimeUnit&amp;&amp;($scope.seconds=Math.floor($scope.millis/1e3%60),$scope.minutes=Math.floor($scope.millis/6e4%60),$scope.hours=Math.floor($scope.millis/36e5%24),$scope.days=Math.floor($scope.millis/36e5/24%30),$scope.months=Math.floor($scope.millis/36e5/24/30%12),$scope.years=Math.floor($scope.millis/36e5/24/365)):($scope.seconds=Math.floor($scope.millis/1e3%60),$scope.minutes=Math.floor($scope.millis/6e4%60),$scope.hours=Math.floor($scope.millis/36e5%24),$scope.days=Math.floor($scope.millis/36e5/24),$scope.months=0,$scope.years=0),$scope.secondsS=1===$scope.seconds?&quot;&quot;:&quot;s&quot;,$scope.minutesS=1===$scope.minutes?&quot;&quot;:&quot;s&quot;,$scope.hoursS=1===$scope.hours?&quot;&quot;:&quot;s&quot;,$scope.daysS=1===$scope.days?&quot;&quot;:&quot;s&quot;,$scope.monthsS=1===$scope.months?&quot;&quot;:&quot;s&quot;,$scope.yearsS=1===$scope.years?&quot;&quot;:&quot;s&quot;,$scope.secondUnit=timeUnits.seconds,$scope.minuteUnit=timeUnits.minutes,$scope.hourUnit=timeUnits.hours,$scope.dayUnit=timeUnits.days,$scope.monthUnit=timeUnits.months,$scope.yearUnit=timeUnits.years,$scope.sseconds=$scope.seconds&lt;10?&quot;0&quot;+$scope.seconds:$scope.seconds,$scope.mminutes=$scope.minutes&lt;10?&quot;0&quot;+$scope.minutes:$scope.minutes,$scope.hhours=$scope.hours&lt;10?&quot;0&quot;+$scope.hours:$scope.hours,$scope.ddays=$scope.days&lt;10?&quot;0&quot;+$scope.days:$scope.days,$scope.mmonths=$scope.months&lt;10?&quot;0&quot;+$scope.months:$scope.months,$scope.yyears=$scope.years&lt;10?&quot;0&quot;+$scope.years:$scope.years}&quot;function&quot;!=typeof<sp/>String.prototype.trim&amp;&amp;(String.prototype.trim=function(){return<sp/>this.replace(/^\s+|\s+$/g,&quot;&quot;)}),$scope.autoStart=$attrs.autoStart||$attrs.autostart,$scope.language=$scope.language||&quot;en&quot;,$scope.fallback=$scope.fallback||&quot;en&quot;,$scope.$watch(&quot;language&quot;,function(newVal,oldVal){void<sp/>0!==newVal&amp;&amp;i18nService.init(newVal,$scope.fallback)});var<sp/>i18nService=new<sp/>I18nService;i18nService.init($scope.language,$scope.fallback),$scope.displayProgressBar=0,$scope.displayProgressActive=&quot;active&quot;,0===$element.html().trim().length?$element.append($compile(&quot;&lt;span&gt;&quot;+$interpolate.startSymbol()+&quot;millis&quot;+$interpolate.endSymbol()+&quot;&lt;/span&gt;&quot;)($scope)):$element.append($compile($element.contents())($scope)),$scope.startTime=null,$scope.endTime=null,$scope.timeoutId=null,$scope.countdown=$scope.countdownattr&amp;&amp;parseInt($scope.countdownattr,10)&gt;=0?parseInt($scope.countdownattr,10):void<sp/>0,$scope.isRunning=!1,$scope.$on(&quot;timer-start&quot;,function(){$scope.start()}),$scope.$on(&quot;timer-resume&quot;,function(){$scope.resume()}),$scope.$on(&quot;timer-stop&quot;,function(){$scope.stop()}),$scope.$on(&quot;timer-clear&quot;,function(){$scope.clear()}),$scope.$on(&quot;timer-reset&quot;,function(){$scope.reset()}),$scope.$on(&quot;timer-set-countdown&quot;,function(e,countdown){$scope.countdown=countdown}),$scope.$watch(&quot;startTimeAttr&quot;,function(newValue,oldValue){newValue!==oldValue&amp;&amp;$scope.isRunning&amp;&amp;$scope.start()}),$scope.$watch(&quot;endTimeAttr&quot;,function(newValue,oldValue){newValue!==oldValue&amp;&amp;$scope.isRunning&amp;&amp;$scope.start()}),$scope.start=$element[0].start=function(){$scope.startTime=$scope.startTimeAttr?moment($scope.startTimeAttr):moment(),$scope.endTime=$scope.endTimeAttr?moment($scope.endTimeAttr):null,$scope.countdown||($scope.countdown=$scope.countdownattr&amp;&amp;parseInt($scope.countdownattr,10)&gt;0?parseInt($scope.countdownattr,10):void<sp/>0),resetTimeout(),tick(),$scope.isRunning=!0},$scope.resume=$element[0].resume=function(){resetTimeout(),$scope.countdownattr&amp;&amp;($scope.countdown+=1),$scope.startTime=moment().diff(moment($scope.stoppedTime).diff(moment($scope.startTime))),tick(),$scope.isRunning=!0},$scope.stop=$scope.pause=$element[0].stop=$element[0].pause=function(){var<sp/>timeoutId=$scope.timeoutId;$scope.clear(),$scope.$emit(&quot;timer-stopped&quot;,{timeoutId:timeoutId,millis:$scope.millis,seconds:$scope.seconds,minutes:$scope.minutes,hours:$scope.hours,days:$scope.days})},$scope.clear=$element[0].clear=function(){$scope.stoppedTime=moment(),resetTimeout(),$scope.timeoutId=null,$scope.isRunning=!1},$scope.reset=$element[0].reset=function(){$scope.startTime=$scope.startTimeAttr?moment($scope.startTimeAttr):moment(),$scope.endTime=$scope.endTimeAttr?moment($scope.endTimeAttr):null,$scope.countdown=$scope.countdownattr&amp;&amp;parseInt($scope.countdownattr,10)&gt;0?parseInt($scope.countdownattr,10):void<sp/>0,resetTimeout(),tick(),$scope.isRunning=!1,$scope.clear()},$element.bind(&quot;$destroy&quot;,function(){resetTimeout(),$scope.isRunning=!1}),$scope.countdownattr?($scope.millis=1e3*$scope.countdownattr,$scope.addCDSeconds=$element[0].addCDSeconds=function(extraSeconds){$scope.countdown+=extraSeconds,$scope.$digest(),$scope.isRunning||$scope.start()},$scope.$on(&quot;timer-add-cd-seconds&quot;,function(e,extraSeconds){$timeout(function(){$scope.addCDSeconds(extraSeconds)})}),$scope.$on(&quot;timer-set-countdown-seconds&quot;,function(e,countdownSeconds){$scope.isRunning||$scope.clear(),$scope.countdown=countdownSeconds,$scope.millis=1e3*countdownSeconds,calculateTimeUnits()})):$scope.millis=0,calculateTimeUnits();var<sp/>tick=function<sp/>tick(){var<sp/>typeTimer=null;$scope.millis=moment().diff($scope.startTime);var<sp/>adjustment=$scope.millis%1e3;return<sp/>$scope.endTimeAttr&amp;&amp;(typeTimer=$scope.endTimeAttr,$scope.millis=moment($scope.endTime).diff(moment()),adjustment=$scope.interval-$scope.millis%1e3),$scope.countdownattr&amp;&amp;(typeTimer=$scope.countdownattr,$scope.millis=1e3*$scope.countdown),$scope.millis&lt;0?($scope.stop(),$scope.millis=0,calculateTimeUnits(),void($scope.finishCallback&amp;&amp;$scope.$eval($scope.finishCallback))):(calculateTimeUnits(),$scope.timeoutId=setTimeout(function(){tick(),$scope.$digest()},$scope.interval-adjustment),$scope.$emit(&quot;timer-tick&quot;,{timeoutId:$scope.timeoutId,millis:$scope.millis}),$scope.countdown&gt;0?$scope.countdown--:$scope.countdown&lt;=0&amp;&amp;($scope.stop(),$scope.finishCallback&amp;&amp;$scope.$eval($scope.finishCallback)),void(null!==typeTimer&amp;&amp;($scope.progressBar=progressBarService.calculateProgressBar($scope.startTime,$scope.millis,$scope.endTime,$scope.countdownattr),100===$scope.progressBar&amp;&amp;($scope.displayProgressActive=&quot;&quot;))))};(void<sp/>0===$scope.autoStart||$scope.autoStart===!0)&amp;&amp;$scope.start()}]}}]);&quot;undefined&quot;!=typeof<sp/>module&amp;&amp;&quot;undefined&quot;!=typeof<sp/>exports&amp;&amp;module.exports===exports&amp;&amp;(module.exports=timerModule);var<sp/>app=angular.module(&quot;timer&quot;);app.factory(&quot;I18nService&quot;,function(){var<sp/>I18nService=function(){};return<sp/>I18nService.prototype.language=&quot;en&quot;,I18nService.prototype.fallback=&quot;en&quot;,I18nService.prototype.timeHumanizer={},I18nService.prototype.init=function(lang,fallback){var<sp/>supported_languages=humanizeDuration.getSupportedLanguages();this.fallback=void<sp/>0!==fallback?fallback:&quot;en&quot;,-1===supported_languages.indexOf(fallback)&amp;&amp;(this.fallback=&quot;en&quot;),this.language=lang,-1===supported_languages.indexOf(lang)&amp;&amp;(this.language=this.fallback),moment.locale(this.language),this.timeHumanizer=humanizeDuration.humanizer({language:this.language,halfUnit:!1})},I18nService.prototype.getTimeUnits=function(millis){var<sp/>diffFromAlarm=1e3*Math.round(millis/1e3),time={};return&quot;undefined&quot;!=typeof<sp/>this.timeHumanizer?time={millis:this.timeHumanizer(diffFromAlarm,{units:[&quot;milliseconds&quot;]}),seconds:this.timeHumanizer(diffFromAlarm,{units:[&quot;seconds&quot;]}),minutes:this.timeHumanizer(diffFromAlarm,{units:[&quot;minutes&quot;,&quot;seconds&quot;]}),hours:this.timeHumanizer(diffFromAlarm,{units:[&quot;hours&quot;,&quot;minutes&quot;,&quot;seconds&quot;]}),days:this.timeHumanizer(diffFromAlarm,{units:[&quot;days&quot;,&quot;hours&quot;,&quot;minutes&quot;,&quot;seconds&quot;]}),months:this.timeHumanizer(diffFromAlarm,{units:[&quot;months&quot;,&quot;days&quot;,&quot;hours&quot;,&quot;minutes&quot;,&quot;seconds&quot;]}),years:this.timeHumanizer(diffFromAlarm,{units:[&quot;years&quot;,&quot;months&quot;,&quot;days&quot;,&quot;hours&quot;,&quot;minutes&quot;,&quot;seconds&quot;]})}:console.error(&apos;</highlight><highlight class="normal">i18nService<sp/>has<sp/>not<sp/>been<sp/>initialized.<sp/>You<sp/>must<sp/>call<sp/>i18nService.init(</highlight><highlight class="stringliteral">&quot;en&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>example</highlight><highlight class="stringliteral">&apos;),time},I18nService});var<sp/>app=angular.module(&quot;timer&quot;);app.factory(&quot;progressBarService&quot;,function(){var<sp/>ProgressBarService=function(){};return<sp/>ProgressBarService.prototype.calculateProgressBar=function(startValue,remainingTime,endTimeAttr,coutdown){var<sp/>endTimeValue,initialCountdown,displayProgressBar=0;return<sp/>remainingTime/=1e3,null!==endTimeAttr?(endTimeValue=moment(endTimeAttr),initialCountdown=endTimeValue.diff(startValue,&quot;seconds&quot;),displayProgressBar=100*remainingTime/initialCountdown):displayProgressBar=100*remainingTime/coutdown,displayProgressBar=100-displayProgressBar,displayProgressBar=Math.round(10*displayProgressBar)/10,displayProgressBar&gt;100&amp;&amp;(displayProgressBar=100),displayProgressBar},new<sp/>ProgressBarService}),function(){&quot;use<sp/>strict&quot;;function<sp/>addLibraryPlugin(lib){lib.fn.swiper=function(params){var<sp/>firstInstance;return<sp/>lib(this).each(function(){var<sp/>s=new<sp/>Swiper(this,params);firstInstance||(firstInstance=s)}),firstInstance}}var<sp/>Swiper=function(container,params){function<sp/>isH(){return&quot;horizontal&quot;===s.params.direction}function<sp/>autoplay(){s.autoplayTimeoutId=setTimeout(function(){s.params.loop?(s.fixLoop(),s._slideNext()):s.isEnd?params.autoplayStopOnLast?s.stopAutoplay():s._slideTo(0):s._slideNext()},s.params.autoplay)}function<sp/>findElementInEvent(e,selector){var<sp/>el=$(e.target);if(!el.is(selector))if(&quot;string&quot;==typeof<sp/>selector)el=el.parents(selector);else<sp/>if(selector.nodeType){var<sp/>found;return<sp/>el.parents().each(function(index,_el){_el===selector&amp;&amp;(found=selector)}),found?selector:void<sp/>0}return<sp/>0===el.length?void<sp/>0:el[0]}function<sp/>initObserver(target,options){options=options||{};var<sp/>ObserverFunc=window.MutationObserver||window.WebkitMutationObserver,observer=new<sp/>ObserverFunc(function(mutations){mutations.forEach(function(mutation){s.onResize(!0),s.emit(&quot;onObserverUpdate&quot;,s,mutation)})});observer.observe(target,{attributes:&quot;undefined&quot;==typeof<sp/>options.attributes?!0:options.attributes,childList:&quot;undefined&quot;==typeof<sp/>options.childList?!0:options.childList,characterData:&quot;undefined&quot;==typeof<sp/>options.characterData?!0:options.characterData}),s.observers.push(observer)}function<sp/>handleKeyboard(e){e.originalEvent&amp;&amp;(e=e.originalEvent);var<sp/>kc=e.keyCode||e.charCode;if(!s.params.allowSwipeToNext&amp;&amp;(isH()&amp;&amp;39===kc||!isH()&amp;&amp;40===kc))return!1;if(!s.params.allowSwipeToPrev&amp;&amp;(isH()&amp;&amp;37===kc||!isH()&amp;&amp;38===kc))return!1;if(!(e.shiftKey||e.altKey||e.ctrlKey||e.metaKey||document.activeElement&amp;&amp;document.activeElement.nodeName&amp;&amp;(&quot;input&quot;===document.activeElement.nodeName.toLowerCase()||&quot;textarea&quot;===document.activeElement.nodeName.toLowerCase()))){if(37===kc||39===kc||38===kc||40===kc){var<sp/>inView=!1;if(s.container.parents(&quot;.swiper-slide&quot;).length&gt;0&amp;&amp;0===s.container.parents(&quot;.swiper-slide-active&quot;).length)return;for(var<sp/>windowScroll={left:window.pageXOffset,top:window.pageYOffset},windowWidth=window.innerWidth,windowHeight=window.innerHeight,swiperOffset=s.container.offset(),swiperCoord=[[swiperOffset.left,swiperOffset.top],[swiperOffset.left+s.width,swiperOffset.top],[swiperOffset.left,swiperOffset.top+s.height],[swiperOffset.left+s.width,swiperOffset.top+s.height]],i=0;i&lt;swiperCoord.length;i++){var<sp/>point=swiperCoord[i];point[0]&gt;=windowScroll.left&amp;&amp;point[0]&lt;=windowScroll.left+windowWidth&amp;&amp;point[1]&gt;=windowScroll.top&amp;&amp;point[1]&lt;=windowScroll.top+windowHeight&amp;&amp;(inView=!0)}if(!inView)return}isH()?((37===kc||39===kc)&amp;&amp;(e.preventDefault?e.preventDefault():e.returnValue=!1),39===kc&amp;&amp;s.slideNext(),37===kc&amp;&amp;s.slidePrev()):((38===kc||40===kc)&amp;&amp;(e.preventDefault?e.preventDefault():e.returnValue=!1),40===kc&amp;&amp;s.slideNext(),38===kc&amp;&amp;s.slidePrev())}}function<sp/>handleMousewheel(e){e.originalEvent&amp;&amp;(e=e.originalEvent);var<sp/>we=s._wheelEvent,delta=0;if(e.detail)delta=-e.detail;else<sp/>if(&quot;mousewheel&quot;===we)if(s.params.mousewheelForceToAxis)if(isH()){if(!(Math.abs(e.wheelDeltaX)&gt;Math.abs(e.wheelDeltaY)))return;delta=e.wheelDeltaX}else{if(!(Math.abs(e.wheelDeltaY)&gt;Math.abs(e.wheelDeltaX)))return;delta=e.wheelDeltaY}else<sp/>delta=e.wheelDelta;else<sp/>if(&quot;DOMMouseScroll&quot;===we)delta=-e.detail;else<sp/>if(&quot;wheel&quot;===we)if(s.params.mousewheelForceToAxis)if(isH()){if(!(Math.abs(e.deltaX)&gt;Math.abs(e.deltaY)))return;delta=-e.deltaX}else{if(!(Math.abs(e.deltaY)&gt;Math.abs(e.deltaX)))return;delta=-e.deltaY}else<sp/>delta=Math.abs(e.deltaX)&gt;Math.abs(e.deltaY)?-e.deltaX:-e.deltaY;if(s.params.freeMode){var<sp/>position=s.getWrapperTranslate()+delta;if(position&gt;0&amp;&amp;(position=0),position&lt;s.maxTranslate()&amp;&amp;(position=s.maxTranslate()),s.setWrapperTransition(0),s.setWrapperTranslate(position),s.updateProgress(),s.updateActiveIndex(),0===position||position===s.maxTranslate())return}else(new<sp/>window.Date).getTime()-s._lastWheelScrollTime&gt;60&amp;&amp;(0&gt;delta?s.slideNext():s.slidePrev()),s._lastWheelScrollTime=(new<sp/>window.Date).getTime();return<sp/>s.params.autoplay&amp;&amp;s.stopAutoplay(),e.preventDefault?e.preventDefault():e.returnValue=!1,!1}function<sp/>setParallaxTransform(el,progress){el=$(el);var<sp/>p,pX,pY;p=el.attr(&quot;data-swiper-parallax&quot;)||&quot;0&quot;,pX=el.attr(&quot;data-swiper-parallax-x&quot;),pY=el.attr(&quot;data-swiper-parallax-y&quot;),pX||pY?(pX=pX||&quot;0&quot;,pY=pY||&quot;0&quot;):isH()?(pX=p,pY=&quot;0&quot;):(pY=p,pX=&quot;0&quot;),pX=pX.indexOf(&quot;%&quot;)&gt;=0?parseInt(pX,10)*progress+&quot;%&quot;:pX*progress+&quot;px&quot;,pY=pY.indexOf(&quot;%&quot;)&gt;=0?parseInt(pY,10)*progress+&quot;%&quot;:pY*progress+&quot;px&quot;,el.transform(&quot;translate3d(&quot;+pX+&quot;,<sp/>&quot;+pY+&quot;,0px)&quot;)}function<sp/>normalizeEventName(eventName){return<sp/>0!==eventName.indexOf(&quot;on&quot;)&amp;&amp;(eventName=eventName[0]!==eventName[0].toUpperCase()?&quot;on&quot;+eventName[0].toUpperCase()+eventName.substring(1):&quot;on&quot;+eventName),eventName}if(!(this<sp/>instanceof<sp/>Swiper))return<sp/>new<sp/>Swiper(container,params);var<sp/>defaults={direction:&quot;horizontal&quot;,touchEventsTarget:&quot;container&quot;,initialSlide:0,speed:300,autoplay:!1,autoplayDisableOnInteraction:!0,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeSticky:!1,setWrapperSize:!1,virtualTranslate:!1,effect:&quot;slide&quot;,coverflow:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0},cube:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94},fade:{crossFade:!1},parallax:!1,scrollbar:null,scrollbarHide:!0,keyboardControl:!1,mousewheelControl:!1,mousewheelForceToAxis:!1,hashnav:!1,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:&quot;column&quot;,slidesPerGroup:1,centeredSlides:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,onlyExternal:!1,threshold:0,touchMoveStopPropagation:!0,pagination:null,paginationClickable:!1,paginationHide:!1,paginationBulletRender:null,resistance:!0,resistanceRatio:.85,nextButton:null,prevButton:null,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,lazyLoading:!1,lazyLoadingInPrevNext:!1,lazyLoadingOnTransitionStart:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,control:void<sp/>0,controlInverse:!1,allowSwipeToPrev:!0,allowSwipeToNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:&quot;swiper-no-swiping&quot;,slideClass:&quot;swiper-slide&quot;,slideActiveClass:&quot;swiper-slide-active&quot;,slideVisibleClass:&quot;swiper-slide-visible&quot;,slideDuplicateClass:&quot;swiper-slide-duplicate&quot;,slideNextClass:&quot;swiper-slide-next&quot;,slidePrevClass:&quot;swiper-slide-prev&quot;,wrapperClass:&quot;swiper-wrapper&quot;,bulletClass:&quot;swiper-pagination-bullet&quot;,bulletActiveClass:&quot;swiper-pagination-bullet-active&quot;,buttonDisabledClass:&quot;swiper-button-disabled&quot;,paginationHiddenClass:&quot;swiper-pagination-hidden&quot;,observer:!1,observeParents:!1,a11y:!1,prevSlideMessage:&quot;Previous<sp/>slide&quot;,nextSlideMessage:&quot;Next<sp/>slide&quot;,firstSlideMessage:&quot;This<sp/>is<sp/>the<sp/>first<sp/>slide&quot;,lastSlideMessage:&quot;This<sp/>is<sp/>the<sp/>last<sp/>slide&quot;,runCallbacksOnInit:!0},initialVirtualTranslate=params&amp;&amp;params.virtualTranslate;params=params||{};for(var<sp/>def<sp/>in<sp/>defaults)if(&quot;undefined&quot;==typeof<sp/>params[def])params[def]=defaults[def];else<sp/>if(&quot;object&quot;==typeof<sp/>params[def])for(var<sp/>deepDef<sp/>in<sp/>defaults[def])&quot;undefined&quot;==typeof<sp/>params[def][deepDef]&amp;&amp;(params[def][deepDef]=defaults[def][deepDef]);var<sp/>s=this;s.version=&quot;3.0.7&quot;,s.params=params,s.classNames=[];var<sp/>$;if($=&quot;undefined&quot;==typeof<sp/>Dom7?window.Dom7||window.Zepto||window.jQuery:Dom7,$&amp;&amp;(s.$=$,s.container=$(container),0!==s.container.length)){if(s.container.length&gt;1)return<sp/>void<sp/>s.container.each(function(){new<sp/>Swiper(this,params)});s.container[0].swiper=s,s.container.data(&quot;swiper&quot;,s),s.classNames.push(&quot;swiper-container-&quot;+s.params.direction),s.params.freeMode&amp;&amp;s.classNames.push(&quot;swiper-container-free-mode&quot;),s.support.flexbox||(s.classNames.push(&quot;swiper-container-no-flexbox&quot;),s.params.slidesPerColumn=1),(s.params.parallax||s.params.watchSlidesVisibility)&amp;&amp;(s.params.watchSlidesProgress=!0),[&quot;cube&quot;,&quot;coverflow&quot;].indexOf(s.params.effect)&gt;=0&amp;&amp;(s.support.transforms3d?(s.params.watchSlidesProgress=!0,s.classNames.push(&quot;swiper-container-3d&quot;)):s.params.effect=&quot;slide&quot;),&quot;slide&quot;!==s.params.effect&amp;&amp;s.classNames.push(&quot;swiper-container-&quot;+s.params.effect),&quot;cube&quot;===s.params.effect&amp;&amp;(s.params.resistanceRatio=0,s.params.slidesPerView=1,s.params.slidesPerColumn=1,s.params.slidesPerGroup=1,s.params.centeredSlides=!1,s.params.spaceBetween=0,s.params.virtualTranslate=!0,s.params.setWrapperSize=!1),&quot;fade&quot;===s.params.effect&amp;&amp;(s.params.slidesPerView=1,s.params.slidesPerColumn=1,s.params.slidesPerGroup=1,s.params.watchSlidesProgress=!0,s.params.spaceBetween=0,&quot;undefined&quot;==typeof<sp/>initialVirtualTranslate&amp;&amp;(s.params.virtualTranslate=!0)),s.params.grabCursor&amp;&amp;s.support.touch&amp;&amp;(s.params.grabCursor=!1),s.wrapper=s.container.children(&quot;.&quot;+s.params.wrapperClass),s.params.pagination&amp;&amp;(s.paginationContainer=$(s.params.pagination),s.params.paginationClickable&amp;&amp;s.paginationContainer.addClass(&quot;swiper-pagination-clickable&quot;)),s.rtl=isH()&amp;&amp;(&quot;rtl&quot;===s.container[0].dir.toLowerCase()||&quot;rtl&quot;===s.container.css(&quot;direction&quot;)),s.rtl&amp;&amp;s.classNames.push(&quot;swiper-container-rtl&quot;),s.rtl&amp;&amp;(s.wrongRTL=&quot;-webkit-box&quot;===s.wrapper.css(&quot;display&quot;)),s.params.slidesPerColumn&gt;1&amp;&amp;s.classNames.push(&quot;swiper-container-multirow&quot;),s.device.android&amp;&amp;s.classNames.push(&quot;swiper-container-android&quot;),s.container.addClass(s.classNames.join(&quot;<sp/>&quot;)),s.translate=0,s.progress=0,s.velocity=0,s.lockSwipeToNext=function(){s.params.allowSwipeToNext=!1},s.lockSwipeToPrev=function(){s.params.allowSwipeToPrev=!1},s.lockSwipes=function(){s.params.allowSwipeToNext=s.params.allowSwipeToPrev=!1},s.unlockSwipeToNext=function(){s.params.allowSwipeToNext=!0},s.unlockSwipeToPrev=function(){s.params.allowSwipeToPrev=!0},s.unlockSwipes=function(){s.params.allowSwipeToNext=s.params.allowSwipeToPrev=!0},s.params.grabCursor&amp;&amp;(s.container[0].style.cursor=&quot;move&quot;,s.container[0].style.cursor=&quot;-webkit-grab&quot;,s.container[0].style.cursor=&quot;-moz-grab&quot;,s.container[0].style.cursor=&quot;grab&quot;),s.imagesToLoad=[],s.imagesLoaded=0,s.loadImage=function(imgElement,src,checkForComplete,callback){function<sp/>onReady(){callback&amp;&amp;callback()}var<sp/>image;imgElement.complete&amp;&amp;checkForComplete?onReady():src?(image=new<sp/>window.Image,image.onload=onReady,image.onerror=onReady,image.src=src):onReady()},s.preloadImages=function(){function<sp/>_onReady(){&quot;undefined&quot;!=typeof<sp/>s&amp;&amp;null!==s&amp;&amp;(void<sp/>0!==s.imagesLoaded&amp;&amp;s.imagesLoaded++,s.imagesLoaded===s.imagesToLoad.length&amp;&amp;(s.params.updateOnImagesReady&amp;&amp;s.update(),s.emit(&quot;onImagesReady&quot;,s)))}s.imagesToLoad=s.container.find(&quot;img&quot;);for(var<sp/>i=0;i&lt;s.imagesToLoad.length;i++)s.loadImage(s.imagesToLoad[i],s.imagesToLoad[i].currentSrc||s.imagesToLoad[i].getAttribute(&quot;src&quot;),!0,_onReady)},s.autoplayTimeoutId=void<sp/>0,s.autoplaying=!1,s.autoplayPaused=!1,s.startAutoplay=function(){return&quot;undefined&quot;!=typeof<sp/>s.autoplayTimeoutId?!1:s.params.autoplay?s.autoplaying?!1:(s.autoplaying=!0,s.emit(&quot;onAutoplayStart&quot;,s),void<sp/>autoplay()):!1},s.stopAutoplay=function(internal){s.autoplayTimeoutId&amp;&amp;(s.autoplayTimeoutId&amp;&amp;clearTimeout(s.autoplayTimeoutId),s.autoplaying=!1,s.autoplayTimeoutId=void<sp/>0,s.emit(&quot;onAutoplayStop&quot;,s))},s.pauseAutoplay=function(speed){s.autoplayPaused||(s.autoplayTimeoutId&amp;&amp;clearTimeout(s.autoplayTimeoutId),s.autoplayPaused=!0,0===speed?(s.autoplayPaused=!1,autoplay()):s.wrapper.transitionEnd(function(){s&amp;&amp;(s.autoplayPaused=!1,s.autoplaying?autoplay():s.stopAutoplay())}))},s.minTranslate=function(){return-s.snapGrid[0]},s.maxTranslate=function(){return-s.snapGrid[s.snapGrid.length-1]},s.updateContainerSize=function(){var<sp/>width,height;width=&quot;undefined&quot;!=typeof<sp/>s.params.width?s.params.width:s.container[0].clientWidth,height=&quot;undefined&quot;!=typeof<sp/>s.params.height?s.params.height:s.container[0].clientHeight,0===width&amp;&amp;isH()||0===height&amp;&amp;!isH()||(s.width=width,s.height=height,s.size=isH()?s.width:s.height)},s.updateSlidesSize=function(){s.slides=s.wrapper.children(&quot;.&quot;+s.params.slideClass),s.snapGrid=[],s.slidesGrid=[],s.slidesSizesGrid=[];var<sp/>i,spaceBetween=s.params.spaceBetween,slidePosition=0,prevSlideSize=0,index=0;&quot;string&quot;==typeof<sp/>spaceBetween&amp;&amp;spaceBetween.indexOf(&quot;%&quot;)&gt;=0&amp;&amp;(spaceBetween=parseFloat(spaceBetween.replace(&quot;%&quot;,&quot;&quot;))/100*s.size),s.virtualSize=-spaceBetween,s.rtl?s.slides.css({marginLeft:&quot;&quot;,marginTop:&quot;&quot;}):s.slides.css({marginRight:&quot;&quot;,marginBottom:&quot;&quot;});var<sp/>slidesNumberEvenToRows;s.params.slidesPerColumn&gt;1&amp;&amp;(slidesNumberEvenToRows=Math.floor(s.slides.length/s.params.slidesPerColumn)===s.slides.length/s.params.slidesPerColumn?s.slides.length:Math.ceil(s.slides.length/s.params.slidesPerColumn)*s.params.slidesPerColumn);var<sp/>slideSize;for(i=0;i&lt;s.slides.length;i++){slideSize=0;var<sp/>slide=s.slides.eq(i);if(s.params.slidesPerColumn&gt;1){var<sp/>newSlideOrderIndex,column,row,slidesPerRow,slidesPerColumn=s.params.slidesPerColumn;&quot;column&quot;===s.params.slidesPerColumnFill?(column=Math.floor(i/slidesPerColumn),row=i-column*slidesPerColumn,newSlideOrderIndex=column+row*slidesNumberEvenToRows/slidesPerColumn,slide.css({&quot;-webkit-box-ordinal-group&quot;:newSlideOrderIndex,&quot;-moz-box-ordinal-group&quot;:newSlideOrderIndex,&quot;-ms-flex-order&quot;:newSlideOrderIndex,&quot;-webkit-order&quot;:newSlideOrderIndex,order:newSlideOrderIndex})):(slidesPerRow=slidesNumberEvenToRows/slidesPerColumn,row=Math.floor(i/slidesPerRow),column=i-row*slidesPerRow),slide.css({&quot;margin-top&quot;:0!==row&amp;&amp;s.params.spaceBetween&amp;&amp;s.params.spaceBetween+&quot;px&quot;}).attr(&quot;data-swiper-column&quot;,column).attr(&quot;data-swiper-row&quot;,row)}&quot;none&quot;!==slide.css(&quot;display&quot;)&amp;&amp;(&quot;auto&quot;===s.params.slidesPerView?slideSize=isH()?slide.outerWidth(!0):slide.outerHeight(!0):(slideSize=(s.size-(s.params.slidesPerView-1)*spaceBetween)/s.params.slidesPerView,isH()?s.slides[i].style.width=slideSize+&quot;px&quot;:s.slides[i].style.height=slideSize+&quot;px&quot;),s.slides[i].swiperSlideSize=slideSize,s.slidesSizesGrid.push(slideSize),s.params.centeredSlides?(slidePosition=slidePosition+slideSize/2+prevSlideSize/2+spaceBetween,0===i&amp;&amp;(slidePosition=slidePosition-s.size/2-spaceBetween),Math.abs(slidePosition)&lt;.001&amp;&amp;(slidePosition=0),index%s.params.slidesPerGroup===0&amp;&amp;s.snapGrid.push(slidePosition),s.slidesGrid.push(slidePosition)):(index%s.params.slidesPerGroup===0&amp;&amp;s.snapGrid.push(slidePosition),s.slidesGrid.push(slidePosition),slidePosition=slidePosition+slideSize+spaceBetween),s.virtualSize+=slideSize+spaceBetween,prevSlideSize=slideSize,index++)}s.virtualSize=Math.max(s.virtualSize,s.size);var<sp/>newSlidesGrid;if(s.rtl&amp;&amp;s.wrongRTL&amp;&amp;(&quot;slide&quot;===s.params.effect||&quot;coverflow&quot;===s.params.effect)&amp;&amp;s.wrapper.css({width:s.virtualSize+s.params.spaceBetween+&quot;px&quot;}),(!s.support.flexbox||s.params.setWrapperSize)&amp;&amp;(isH()?s.wrapper.css({width:s.virtualSize+s.params.spaceBetween+&quot;px&quot;}):s.wrapper.css({height:s.virtualSize+s.params.spaceBetween+&quot;px&quot;})),s.params.slidesPerColumn&gt;1&amp;&amp;(s.virtualSize=(slideSize+s.params.spaceBetween)*slidesNumberEvenToRows,s.virtualSize=Math.ceil(s.virtualSize/s.params.slidesPerColumn)-s.params.spaceBetween,s.wrapper.css({width:s.virtualSize+s.params.spaceBetween+&quot;px&quot;}),s.params.centeredSlides)){for(newSlidesGrid=[],i=0;i&lt;s.snapGrid.length;i++)s.snapGrid[i]&lt;s.virtualSize+s.snapGrid[0]&amp;&amp;newSlidesGrid.push(s.snapGrid[i]);s.snapGrid=newSlidesGrid}if(!s.params.centeredSlides){for(newSlidesGrid=[],i=0;i&lt;s.snapGrid.length;i++)s.snapGrid[i]&lt;=s.virtualSize-s.size&amp;&amp;newSlidesGrid.push(s.snapGrid[i]);s.snapGrid=newSlidesGrid,Math.floor(s.virtualSize-s.size)&gt;Math.floor(s.snapGrid[s.snapGrid.length-1])&amp;&amp;s.snapGrid.push(s.virtualSize-s.size)}0===s.snapGrid.length&amp;&amp;(s.snapGrid=[0]),0!==s.params.spaceBetween&amp;&amp;(isH()?s.rtl?s.slides.css({marginLeft:spaceBetween+&quot;px&quot;</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">}):s.slides.css({marginRight:spaceBetween+&quot;px&quot;}):s.slides.css({marginBottom:spaceBetween+&quot;px&quot;})),s.params.watchSlidesProgress&amp;&amp;s.updateSlidesOffset()},s.updateSlidesOffset=function(){for(var<sp/>i=0;i&lt;s.slides.length;i++)s.slides[i].swiperSlideOffset=isH()?s.slides[i].offsetLeft:s.slides[i].offsetTop},s.updateSlidesProgress=function(translate){if(&quot;undefined&quot;==typeof<sp/>translate&amp;&amp;(translate=s.translate||0),0!==s.slides.length){&quot;undefined&quot;==typeof<sp/>s.slides[0].swiperSlideOffset&amp;&amp;s.updateSlidesOffset();var<sp/>offsetCenter=s.params.centeredSlides?-translate+s.size/2:-translate;s.rtl&amp;&amp;(offsetCenter=s.params.centeredSlides?translate-s.size/2:translate);s.container[0].getBoundingClientRect(),isH()?&quot;left&quot;:&quot;top&quot;,isH()?&quot;right&quot;:&quot;bottom&quot;;s.slides.removeClass(s.params.slideVisibleClass);for(var<sp/>i=0;i&lt;s.slides.length;i++){var<sp/>slide=s.slides[i],slideCenterOffset=s.params.centeredSlides===!0?slide.swiperSlideSize/2:0,slideProgress=(offsetCenter-slide.swiperSlideOffset-slideCenterOffset)/(slide.swiperSlideSize+s.params.spaceBetween);if(s.params.watchSlidesVisibility){var<sp/>slideBefore=-(offsetCenter-slide.swiperSlideOffset-slideCenterOffset),slideAfter=slideBefore+s.slidesSizesGrid[i],isVisible=slideBefore&gt;=0&amp;&amp;slideBefore&lt;s.size||slideAfter&gt;0&amp;&amp;slideAfter&lt;=s.size||0&gt;=slideBefore&amp;&amp;slideAfter&gt;=s.size;isVisible&amp;&amp;s.slides.eq(i).addClass(s.params.slideVisibleClass)}slide.progress=s.rtl?-slideProgress:slideProgress}}},s.updateProgress=function(translate){&quot;undefined&quot;==typeof<sp/>translate&amp;&amp;(translate=s.translate||0);var<sp/>translatesDiff=s.maxTranslate()-s.minTranslate();0===translatesDiff?(s.progress=0,s.isBeginning=s.isEnd=!0):(s.progress=(translate-s.minTranslate())/translatesDiff,s.isBeginning=s.progress&lt;=0,s.isEnd=s.progress&gt;=1),s.isBeginning&amp;&amp;s.emit(&quot;onReachBeginning&quot;,s),s.isEnd&amp;&amp;s.emit(&quot;onReachEnd&quot;,s),s.params.watchSlidesProgress&amp;&amp;s.updateSlidesProgress(translate),s.emit(&quot;onProgress&quot;,s,s.progress)},s.updateActiveIndex=function(){var<sp/>newActiveIndex,i,snapIndex,translate=s.rtl?s.translate:-s.translate;for(i=0;i&lt;s.slidesGrid.length;i++)&quot;undefined&quot;!=typeof<sp/>s.slidesGrid[i+1]?translate&gt;=s.slidesGrid[i]&amp;&amp;translate&lt;s.slidesGrid[i+1]-(s.slidesGrid[i+1]-s.slidesGrid[i])/2?newActiveIndex=i:translate&gt;=s.slidesGrid[i]&amp;&amp;translate&lt;s.slidesGrid[i+1]&amp;&amp;(newActiveIndex=i+1):translate&gt;=s.slidesGrid[i]&amp;&amp;(newActiveIndex=i);(0&gt;newActiveIndex||&quot;undefined&quot;==typeof<sp/>newActiveIndex)&amp;&amp;(newActiveIndex=0),snapIndex=Math.floor(newActiveIndex/s.params.slidesPerGroup),snapIndex&gt;=s.snapGrid.length&amp;&amp;(snapIndex=s.snapGrid.length-1),newActiveIndex!==s.activeIndex&amp;&amp;(s.snapIndex=snapIndex,s.previousIndex=s.activeIndex,s.activeIndex=newActiveIndex,s.updateClasses())},s.updateClasses=function(){s.slides.removeClass(s.params.slideActiveClass+&quot;<sp/>&quot;+s.params.slideNextClass+&quot;<sp/>&quot;+s.params.slidePrevClass);var<sp/>activeSlide=s.slides.eq(s.activeIndex);if(activeSlide.addClass(s.params.slideActiveClass),activeSlide.next(&quot;.&quot;+s.params.slideClass).addClass(s.params.slideNextClass),activeSlide.prev(&quot;.&quot;+s.params.slideClass).addClass(s.params.slidePrevClass),s.bullets&amp;&amp;s.bullets.length&gt;0){s.bullets.removeClass(s.params.bulletActiveClass);var<sp/>bulletIndex;s.params.loop?(bulletIndex=Math.ceil(s.activeIndex-s.loopedSlides)/s.params.slidesPerGroup,bulletIndex&gt;s.slides.length-1-2*s.loopedSlides&amp;&amp;(bulletIndex-=s.slides.length-2*s.loopedSlides),bulletIndex&gt;s.bullets.length-1&amp;&amp;(bulletIndex-=s.bullets.length)):bulletIndex=&quot;undefined&quot;!=typeof<sp/>s.snapIndex?s.snapIndex:s.activeIndex||0,s.paginationContainer.length&gt;1?s.bullets.each(function(){$(this).index()===bulletIndex&amp;&amp;$(this).addClass(s.params.bulletActiveClass)}):s.bullets.eq(bulletIndex).addClass(s.params.bulletActiveClass)}s.params.loop||(s.params.prevButton&amp;&amp;(s.isBeginning?($(s.params.prevButton).addClass(s.params.buttonDisabledClass),s.params.a11y&amp;&amp;s.a11y&amp;&amp;s.a11y.disable($(s.params.prevButton))):($(s.params.prevButton).removeClass(s.params.buttonDisabledClass),s.params.a11y&amp;&amp;s.a11y&amp;&amp;s.a11y.enable($(s.params.prevButton)))),s.params.nextButton&amp;&amp;(s.isEnd?($(s.params.nextButton).addClass(s.params.buttonDisabledClass),s.params.a11y&amp;&amp;s.a11y&amp;&amp;s.a11y.disable($(s.params.nextButton))):($(s.params.nextButton).removeClass(s.params.buttonDisabledClass),s.params.a11y&amp;&amp;s.a11y&amp;&amp;s.a11y.enable($(s.params.nextButton)))))},s.updatePagination=function(){if(s.params.pagination&amp;&amp;s.paginationContainer&amp;&amp;s.paginationContainer.length&gt;0){for(var<sp/>bulletsHTML=&quot;&quot;,numberOfBullets=s.params.loop?Math.ceil((s.slides.length-2*s.loopedSlides)/s.params.slidesPerGroup):s.snapGrid.length,i=0;numberOfBullets&gt;i;i++)bulletsHTML+=s.params.paginationBulletRender?s.params.paginationBulletRender(i,s.params.bulletClass):&apos;</highlight><highlight class="normal">&lt;span<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;&apos;+s.params.bulletClass+&apos;&quot;</highlight><highlight class="normal">&gt;&lt;/span&gt;</highlight><highlight class="stringliteral">&apos;;s.paginationContainer.html(bulletsHTML),s.bullets=s.paginationContainer.find(&quot;.&quot;+s.params.bulletClass)}},s.update=function(updateTranslate){function<sp/>forceSetTranslate(){newTranslate=Math.min(Math.max(s.translate,s.maxTranslate()),s.minTranslate()),s.setWrapperTranslate(newTranslate),s.updateActiveIndex(),s.updateClasses()}if(s.updateContainerSize(),s.updateSlidesSize(),s.updateProgress(),s.updatePagination(),s.updateClasses(),s.params.scrollbar&amp;&amp;s.scrollbar&amp;&amp;s.scrollbar.set(),updateTranslate){var<sp/>translated,newTranslate;s.params.freeMode?forceSetTranslate():(translated=&quot;auto&quot;===s.params.slidesPerView&amp;&amp;s.isEnd&amp;&amp;!s.params.centeredSlides?s.slideTo(s.slides.length-1,0,!1,!0):s.slideTo(s.activeIndex,0,!1,!0),translated||forceSetTranslate())}},s.onResize=function(forceUpdatePagination){if(s.updateContainerSize(),s.updateSlidesSize(),s.updateProgress(),(&quot;auto&quot;===s.params.slidesPerView||s.params.freeMode||forceUpdatePagination)&amp;&amp;s.updatePagination(),s.params.scrollbar&amp;&amp;s.scrollbar&amp;&amp;s.scrollbar.set(),s.params.freeMode){var<sp/>newTranslate=Math.min(Math.max(s.translate,s.maxTranslate()),s.minTranslate());s.setWrapperTranslate(newTranslate),s.updateActiveIndex(),s.updateClasses()}else<sp/>s.updateClasses(),&quot;auto&quot;===s.params.slidesPerView&amp;&amp;s.isEnd&amp;&amp;!s.params.centeredSlides?s.slideTo(s.slides.length-1,0,!1,!0):s.slideTo(s.activeIndex,0,!1,!0)};var<sp/>desktopEvents=[&quot;mousedown&quot;,&quot;mousemove&quot;,&quot;mouseup&quot;];window.navigator.pointerEnabled?desktopEvents=[&quot;pointerdown&quot;,&quot;pointermove&quot;,&quot;pointerup&quot;]:window.navigator.msPointerEnabled&amp;&amp;(desktopEvents=[&quot;MSPointerDown&quot;,&quot;MSPointerMove&quot;,&quot;MSPointerUp&quot;]),s.touchEvents={start:s.support.touch||!s.params.simulateTouch?&quot;touchstart&quot;:desktopEvents[0],move:s.support.touch||!s.params.simulateTouch?&quot;touchmove&quot;:desktopEvents[1],end:s.support.touch||!s.params.simulateTouch?&quot;touchend&quot;:desktopEvents[2]},(window.navigator.pointerEnabled||window.navigator.msPointerEnabled)&amp;&amp;(&quot;container&quot;===s.params.touchEventsTarget?s.container:s.wrapper).addClass(&quot;swiper-wp8-&quot;+s.params.direction),s.initEvents=function(detach){var<sp/>actionDom=detach?&quot;off&quot;:&quot;on&quot;,action=detach?&quot;removeEventListener&quot;:&quot;addEventListener&quot;,touchEventsTarget=&quot;container&quot;===s.params.touchEventsTarget?s.container[0]:s.wrapper[0],target=s.support.touch?touchEventsTarget:document,moveCapture=s.params.nested?!0:!1;s.browser.ie?(touchEventsTarget[action](s.touchEvents.start,s.onTouchStart,!1),target[action](s.touchEvents.move,s.onTouchMove,moveCapture),target[action](s.touchEvents.end,s.onTouchEnd,!1)):(s.support.touch&amp;&amp;(touchEventsTarget[action](s.touchEvents.start,s.onTouchStart,!1),touchEventsTarget[action](s.touchEvents.move,s.onTouchMove,moveCapture),touchEventsTarget[action](s.touchEvents.end,s.onTouchEnd,!1)),!params.simulateTouch||s.device.ios||s.device.android||(touchEventsTarget[action](&quot;mousedown&quot;,s.onTouchStart,!1),document[action](&quot;mousemove&quot;,s.onTouchMove,moveCapture),document[action](&quot;mouseup&quot;,s.onTouchEnd,!1))),window[action](&quot;resize&quot;,s.onResize),s.params.nextButton&amp;&amp;($(s.params.nextButton)[actionDom](&quot;click&quot;,s.onClickNext),s.params.a11y&amp;&amp;s.a11y&amp;&amp;$(s.params.nextButton)[actionDom](&quot;keydown&quot;,s.a11y.onEnterKey)),s.params.prevButton&amp;&amp;($(s.params.prevButton)[actionDom](&quot;click&quot;,s.onClickPrev),s.params.a11y&amp;&amp;s.a11y&amp;&amp;$(s.params.prevButton)[actionDom](&quot;keydown&quot;,s.a11y.onEnterKey)),s.params.pagination&amp;&amp;s.params.paginationClickable&amp;&amp;$(s.paginationContainer)[actionDom](&quot;click&quot;,&quot;.&quot;+s.params.bulletClass,s.onClickIndex),(s.params.preventClicks||s.params.preventClicksPropagation)&amp;&amp;touchEventsTarget[action](&quot;click&quot;,s.preventClicks,!0)},s.attachEvents=function(detach){s.initEvents()},s.detachEvents=function(){s.initEvents(!0)},s.allowClick=!0,s.preventClicks=function(e){s.allowClick||(s.params.preventClicks&amp;&amp;e.preventDefault(),s.params.preventClicksPropagation&amp;&amp;(e.stopPropagation(),e.stopImmediatePropagation()))},s.onClickNext=function(e){e.preventDefault(),s.slideNext()},s.onClickPrev=function(e){e.preventDefault(),s.slidePrev()},s.onClickIndex=function(e){e.preventDefault();var<sp/>index=$(this).index()*s.params.slidesPerGroup;s.params.loop&amp;&amp;(index+=s.loopedSlides),s.slideTo(index)},s.updateClickedSlide=function(e){var<sp/>slide=findElementInEvent(e,&quot;.&quot;+s.params.slideClass),slideFound=!1;if(slide)for(var<sp/>i=0;i&lt;s.slides.length;i++)s.slides[i]===slide&amp;&amp;(slideFound=!0);if(!slide||!slideFound)return<sp/>s.clickedSlide=void<sp/>0,void(s.clickedIndex=void<sp/>0);if(s.clickedSlide=slide,s.clickedIndex=$(slide).index(),s.params.slideToClickedSlide&amp;&amp;void<sp/>0!==s.clickedIndex&amp;&amp;s.clickedIndex!==s.activeIndex){var<sp/>realIndex,slideToIndex=s.clickedIndex;if(s.params.loop)if(realIndex=$(s.clickedSlide).attr(&quot;data-swiper-slide-index&quot;),slideToIndex&gt;s.slides.length-s.params.slidesPerView)s.fixLoop(),slideToIndex=s.wrapper.children(&quot;.&quot;+s.params.slideClass+&apos;</highlight><highlight class="normal">[data-swiper-slide-index=</highlight><highlight class="stringliteral">&quot;&apos;+realIndex+&apos;&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&apos;).eq(0).index(),setTimeout(function(){s.slideTo(slideToIndex)},0);else<sp/>if(slideToIndex&lt;s.params.slidesPerView-1){s.fixLoop();var<sp/>duplicatedSlides=s.wrapper.children(&quot;.&quot;+s.params.slideClass+&apos;</highlight><highlight class="normal">[data-swiper-slide-index=</highlight><highlight class="stringliteral">&quot;&apos;+realIndex+&apos;&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&apos;);slideToIndex=duplicatedSlides.eq(duplicatedSlides.length-1).index(),setTimeout(function(){s.slideTo(slideToIndex)},0)}else<sp/>s.slideTo(slideToIndex);else<sp/>s.slideTo(slideToIndex)}};var<sp/>isTouched,isMoved,touchStartTime,isScrolling,currentTranslate,startTranslate,allowThresholdMove,clickTimeout,allowMomentumBounce,formElements=&quot;input,<sp/>select,<sp/>textarea,<sp/>button&quot;,lastClickTime=Date.now(),velocities=[];s.animating=!1,s.touches={startX:0,startY:0,currentX:0,currentY:0,diff:0};var<sp/>isTouchEvent,startMoving;if(s.onTouchStart=function(e){if(e.originalEvent&amp;&amp;(e=e.originalEvent),isTouchEvent=&quot;touchstart&quot;===e.type,isTouchEvent||!(&quot;which&quot;in<sp/>e)||3!==e.which){if(s.params.noSwiping&amp;&amp;findElementInEvent(e,&quot;.&quot;+s.params.noSwipingClass))return<sp/>void(s.allowClick=!0);if(!s.params.swipeHandler||findElementInEvent(e,s.params.swipeHandler)){if(isTouched=!0,isMoved=!1,isScrolling=void<sp/>0,startMoving=void<sp/>0,s.touches.startX=s.touches.currentX=&quot;touchstart&quot;===e.type?e.targetTouches[0].pageX:e.pageX,s.touches.startY=s.touches.currentY=&quot;touchstart&quot;===e.type?e.targetTouches[0].pageY:e.pageY,touchStartTime=Date.now(),s.allowClick=!0,s.updateContainerSize(),s.swipeDirection=void<sp/>0,s.params.threshold&gt;0&amp;&amp;(allowThresholdMove=!1),&quot;touchstart&quot;!==e.type){var<sp/>preventDefault=!0;$(e.target).is(formElements)&amp;&amp;(preventDefault=!1),document.activeElement&amp;&amp;$(document.activeElement).is(formElements)&amp;&amp;document.activeElement.blur(),preventDefault&amp;&amp;e.preventDefault()}s.emit(&quot;onTouchStart&quot;,s,e)}}},s.onTouchMove=function(e){if(e.originalEvent&amp;&amp;(e=e.originalEvent),!(isTouchEvent&amp;&amp;&quot;mousemove&quot;===e.type||e.preventedByNestedSwiper)){if(s.params.onlyExternal)return<sp/>isMoved=!0,void(s.allowClick=!1);if(isTouchEvent&amp;&amp;document.activeElement&amp;&amp;e.target===document.activeElement&amp;&amp;$(e.target).is(formElements))return<sp/>isMoved=!0,void(s.allowClick=!1);if(s.emit(&quot;onTouchMove&quot;,s,e),!(e.targetTouches&amp;&amp;e.targetTouches.length&gt;1)){if(s.touches.currentX=&quot;touchmove&quot;===e.type?e.targetTouches[0].pageX:e.pageX,s.touches.currentY=&quot;touchmove&quot;===e.type?e.targetTouches[0].pageY:e.pageY,&quot;undefined&quot;==typeof<sp/>isScrolling){var<sp/>touchAngle=180*Math.atan2(Math.abs(s.touches.currentY-s.touches.startY),Math.abs(s.touches.currentX-s.touches.startX))/Math.PI;isScrolling=isH()?touchAngle&gt;s.params.touchAngle:90-touchAngle&gt;s.params.touchAngle}if(isScrolling&amp;&amp;s.emit(&quot;onTouchMoveOpposite&quot;,s,e),&quot;undefined&quot;==typeof<sp/>startMoving&amp;&amp;s.browser.ieTouch&amp;&amp;(s.touches.currentX!==s.touches.startX||s.touches.currentY!==s.touches.startY)&amp;&amp;(startMoving=!0),isTouched){if(isScrolling)return<sp/>void(isTouched=!1);if(startMoving||!s.browser.ieTouch){s.allowClick=!1,s.emit(&quot;onSliderMove&quot;,s,e),e.preventDefault(),s.params.touchMoveStopPropagation&amp;&amp;!s.params.nested&amp;&amp;e.stopPropagation(),isMoved||(params.loop&amp;&amp;s.fixLoop(),startTranslate=s.getWrapperTranslate(),s.setWrapperTransition(0),s.animating&amp;&amp;s.wrapper.trigger(&quot;webkitTransitionEnd<sp/>transitionend<sp/>oTransitionEnd<sp/>MSTransitionEnd<sp/>msTransitionEnd&quot;),s.params.autoplay&amp;&amp;s.autoplaying&amp;&amp;(s.params.autoplayDisableOnInteraction?s.stopAutoplay():s.pauseAutoplay()),allowMomentumBounce=!1,s.params.grabCursor&amp;&amp;(s.container[0].style.cursor=&quot;move&quot;,s.container[0].style.cursor=&quot;-webkit-grabbing&quot;,s.container[0].style.cursor=&quot;-moz-grabbin&quot;,s.container[0].style.cursor=&quot;grabbing&quot;)),isMoved=!0;var<sp/>diff=s.touches.diff=isH()?s.touches.currentX-s.touches.startX:s.touches.currentY-s.touches.startY;diff*=s.params.touchRatio,s.rtl&amp;&amp;(diff=-diff),s.swipeDirection=diff&gt;0?&quot;prev&quot;:&quot;next&quot;,currentTranslate=diff+startTranslate;var<sp/>disableParentSwiper=!0;if(diff&gt;0&amp;&amp;currentTranslate&gt;s.minTranslate()?(disableParentSwiper=!1,s.params.resistance&amp;&amp;(currentTranslate=s.minTranslate()-1+Math.pow(-s.minTranslate()+startTranslate+diff,s.params.resistanceRatio))):0&gt;diff&amp;&amp;currentTranslate&lt;s.maxTranslate()&amp;&amp;(disableParentSwiper=!1,s.params.resistance&amp;&amp;(currentTranslate=s.maxTranslate()+1-Math.pow(s.maxTranslate()-startTranslate-diff,s.params.resistanceRatio))),disableParentSwiper&amp;&amp;(e.preventedByNestedSwiper=!0),!s.params.allowSwipeToNext&amp;&amp;&quot;next&quot;===s.swipeDirection&amp;&amp;startTranslate&gt;currentTranslate&amp;&amp;(currentTranslate=startTranslate),!s.params.allowSwipeToPrev&amp;&amp;&quot;prev&quot;===s.swipeDirection&amp;&amp;currentTranslate&gt;startTranslate&amp;&amp;(currentTranslate=startTranslate),s.params.followFinger){if(s.params.threshold&gt;0){if(!(Math.abs(diff)&gt;s.params.threshold||allowThresholdMove))return<sp/>void(currentTranslate=startTranslate);if(!allowThresholdMove)return<sp/>allowThresholdMove=!0,s.touches.startX=s.touches.currentX,s.touches.startY=s.touches.currentY,currentTranslate=startTranslate,void(s.touches.diff=isH()?s.touches.currentX-s.touches.startX:s.touches.currentY-s.touches.startY)}(s.params.freeMode||s.params.watchSlidesProgress)&amp;&amp;s.updateActiveIndex(),s.params.freeMode&amp;&amp;(0===velocities.length&amp;&amp;velocities.push({position:s.touches[isH()?&quot;startX&quot;:&quot;startY&quot;],time:touchStartTime}),velocities.push({position:s.touches[isH()?&quot;currentX&quot;:&quot;currentY&quot;],time:(new<sp/>window.Date).getTime()})),s.updateProgress(currentTranslate),s.setWrapperTranslate(currentTranslate)}}}}}},s.onTouchEnd=function(e){if(e.originalEvent&amp;&amp;(e=e.originalEvent),s.emit(&quot;onTouchEnd&quot;,s,e),isTouched){s.params.grabCursor&amp;&amp;isMoved&amp;&amp;isTouched&amp;&amp;(s.container[0].style.cursor=&quot;move&quot;,s.container[0].style.cursor=&quot;-webkit-grab&quot;,s.container[0].style.cursor=&quot;-moz-grab&quot;,s.container[0].style.cursor=&quot;grab&quot;);var<sp/>touchEndTime=Date.now(),timeDiff=touchEndTime-touchStartTime;if(s.allowClick&amp;&amp;(s.updateClickedSlide(e),s.emit(&quot;onTap&quot;,s,e),300&gt;timeDiff&amp;&amp;touchEndTime-lastClickTime&gt;300&amp;&amp;(clickTimeout&amp;&amp;clearTimeout(clickTimeout),clickTimeout=setTimeout(function(){s&amp;&amp;(s.params.paginationHide&amp;&amp;s.paginationContainer.length&gt;0&amp;&amp;!$(e.target).hasClass(s.params.bulletClass)&amp;&amp;s.paginationContainer.toggleClass(s.params.paginationHiddenClass),s.emit(&quot;onClick&quot;,s,e))},300)),300&gt;timeDiff&amp;&amp;300&gt;touchEndTime-lastClickTime&amp;&amp;(clickTimeout&amp;&amp;clearTimeout(clickTimeout),s.emit(&quot;onDoubleTap&quot;,s,e))),lastClickTime=Date.now(),setTimeout(function(){s&amp;&amp;s.allowClick&amp;&amp;(s.allowClick=!0)},0),!isTouched||!isMoved||!s.swipeDirection||0===s.touches.diff||currentTranslate===startTranslate)return<sp/>void(isTouched=isMoved=!1);isTouched=isMoved=!1;var<sp/>currentPos;if(currentPos=s.params.followFinger?s.rtl?s.translate:-s.translate:-currentTranslate,s.params.freeMode){if(currentPos&lt;-s.minTranslate())return<sp/>void<sp/>s.slideTo(s.activeIndex);if(currentPos&gt;-s.maxTranslate())return<sp/>void(s.slides.length&lt;s.snapGrid.length?s.slideTo(s.snapGrid.length-1):s.slideTo(s.slides.length-1));if(s.params.freeModeMomentum){if(velocities.length&gt;1){var<sp/>lastMoveEvent=velocities.pop(),velocityEvent=velocities.pop(),distance=lastMoveEvent.position-velocityEvent.position,time=lastMoveEvent.time-velocityEvent.time;s.velocity=distance/time,s.velocity=s.velocity/2,Math.abs(s.velocity)&lt;.02&amp;&amp;(s.velocity=0),(time&gt;150||(new<sp/>window.Date).getTime()-lastMoveEvent.time&gt;300)&amp;&amp;(s.velocity=0)}else<sp/>s.velocity=0;velocities.length=0;var<sp/>momentumDuration=1e3*s.params.freeModeMomentumRatio,momentumDistance=s.velocity*momentumDuration,newPosition=s.translate+momentumDistance;s.rtl&amp;&amp;(newPosition=-newPosition);var<sp/>afterBouncePosition,doBounce=!1,bounceAmount=20*Math.abs(s.velocity)*s.params.freeModeMomentumBounceRatio;if(newPosition&lt;s.maxTranslate())s.params.freeModeMomentumBounce?(newPosition+s.maxTranslate()&lt;-bounceAmount&amp;&amp;(newPosition=s.maxTranslate()-bounceAmount),afterBouncePosition=s.maxTranslate(),doBounce=!0,allowMomentumBounce=!0):newPosition=s.maxTranslate();else<sp/>if(newPosition&gt;s.minTranslate())s.params.freeModeMomentumBounce?(newPosition-s.minTranslate()&gt;bounceAmount&amp;&amp;(newPosition=s.minTranslate()+bounceAmount),afterBouncePosition=s.minTranslate(),doBounce=!0,allowMomentumBounce=!0):newPosition=s.minTranslate();else<sp/>if(s.params.freeModeSticky){var<sp/>nextSlide,j=0;for(j=0;j&lt;s.snapGrid.length;j+=1)if(s.snapGrid[j]&gt;-newPosition){nextSlide=j;break}newPosition=Math.abs(s.snapGrid[nextSlide]-newPosition)&lt;Math.abs(s.snapGrid[nextSlide-1]-newPosition)||&quot;next&quot;===s.swipeDirection?s.snapGrid[nextSlide]:s.snapGrid[nextSlide-1],s.rtl||(newPosition=-newPosition)}if(0!==s.velocity)momentumDuration=s.rtl?Math.abs((-newPosition-s.translate)/s.velocity):Math.abs((newPosition-s.translate)/s.velocity);else<sp/>if(s.params.freeModeSticky)return<sp/>void<sp/>s.slideReset();s.params.freeModeMomentumBounce&amp;&amp;doBounce?(s.updateProgress(afterBouncePosition),s.setWrapperTransition(momentumDuration),s.setWrapperTranslate(newPosition),s.onTransitionStart(),s.animating=!0,s.wrapper.transitionEnd(function(){s&amp;&amp;allowMomentumBounce&amp;&amp;(s.emit(&quot;onMomentumBounce&quot;,s),s.setWrapperTransition(s.params.speed),s.setWrapperTranslate(afterBouncePosition),s.wrapper.transitionEnd(function(){s&amp;&amp;s.onTransitionEnd()}))})):s.velocity?(s.updateProgress(newPosition),s.setWrapperTransition(momentumDuration),s.setWrapperTranslate(newPosition),s.onTransitionStart(),s.animating||(s.animating=!0,s.wrapper.transitionEnd(function(){s&amp;&amp;s.onTransitionEnd()}))):s.updateProgress(newPosition),s.updateActiveIndex()}return<sp/>void((!s.params.freeModeMomentum||timeDiff&gt;=s.params.longSwipesMs)&amp;&amp;(s.updateProgress(),s.updateActiveIndex()))}var<sp/>i,stopIndex=0,groupSize=s.slidesSizesGrid[0];for(i=0;i&lt;s.slidesGrid.length;i+=s.params.slidesPerGroup)&quot;undefined&quot;!=typeof<sp/>s.slidesGrid[i+s.params.slidesPerGroup]?currentPos&gt;=s.slidesGrid[i]&amp;&amp;currentPos&lt;s.slidesGrid[i+s.params.slidesPerGroup]&amp;&amp;(stopIndex=i,groupSize=s.slidesGrid[i+s.params.slidesPerGroup]-s.slidesGrid[i]):currentPos&gt;=s.slidesGrid[i]&amp;&amp;(stopIndex=i,groupSize=s.slidesGrid[s.slidesGrid.length-1]-s.slidesGrid[s.slidesGrid.length-2]);var<sp/>ratio=(currentPos-s.slidesGrid[stopIndex])/groupSize;if(timeDiff&gt;s.params.longSwipesMs){if(!s.params.longSwipes)return<sp/>void<sp/>s.slideTo(s.activeIndex);&quot;next&quot;===s.swipeDirection&amp;&amp;(ratio&gt;=s.params.longSwipesRatio?s.slideTo(stopIndex+s.params.slidesPerGroup):s.slideTo(stopIndex)),&quot;prev&quot;===s.swipeDirection&amp;&amp;(ratio&gt;1-s.params.longSwipesRatio?s.slideTo(stopIndex+s.params.slidesPerGroup):s.slideTo(stopIndex))}else{if(!s.params.shortSwipes)return<sp/>void<sp/>s.slideTo(s.activeIndex);&quot;next&quot;===s.swipeDirection&amp;&amp;s.slideTo(stopIndex+s.params.slidesPerGroup),&quot;prev&quot;===s.swipeDirection&amp;&amp;s.slideTo(stopIndex)}}},s._slideTo=function(slideIndex,speed){return<sp/>s.slideTo(slideIndex,speed,!0,!0)},s.slideTo=function(slideIndex,speed,runCallbacks,internal){&quot;undefined&quot;==typeof<sp/>runCallbacks&amp;&amp;(runCallbacks=!0),&quot;undefined&quot;==typeof<sp/>slideIndex&amp;&amp;(slideIndex=0),0&gt;slideIndex&amp;&amp;(slideIndex=0),s.snapIndex=Math.floor(slideIndex/s.params.slidesPerGroup),s.snapIndex&gt;=s.snapGrid.length&amp;&amp;(s.snapIndex=s.snapGrid.length-1);var<sp/>translate=-s.snapGrid[s.snapIndex];if(!s.params.allowSwipeToNext&amp;&amp;translate&lt;s.translate)return!1;if(!s.params.allowSwipeToPrev&amp;&amp;translate&gt;s.translate)return!1;s.params.autoplay&amp;&amp;s.autoplaying&amp;&amp;(internal||!s.params.autoplayDisableOnInteraction?s.pauseAutoplay(speed):s.stopAutoplay()),s.updateProgress(translate);for(var<sp/>i=0;i&lt;s.slidesGrid.length;i++)-translate&gt;=s.slidesGrid[i]&amp;&amp;(slideIndex=i);if(&quot;undefined&quot;==typeof<sp/>speed&amp;&amp;(speed=s.params.speed),s.previousIndex=s.activeIndex||0,s.activeIndex=slideIndex,translate===s.translate)return<sp/>s.updateClasses(),!1;s.updateClasses(),s.onTransitionStart(runCallbacks);isH()?translate:0,isH()?0:translate;return<sp/>0===speed?(s.setWrapperTransition(0),s.setWrapperTranslate(translate),s.onTransitionEnd(runCallbacks)):(s.setWrapperTransition(speed),s.setWrapperTranslate(translate),s.animating||(s.animating=!0,s.wrapper.transitionEnd(function(){s&amp;&amp;s.onTransitionEnd(runCallbacks)}))),!0},s.onTransitionStart=function(runCallbacks){&quot;undefined&quot;==typeof<sp/>runCallbacks&amp;&amp;(runCallbacks=!0),s.lazy&amp;&amp;s.lazy.onTransitionStart(),runCallbacks&amp;&amp;(s.emit(&quot;onTransitionStart&quot;,s),s.activeIndex!==s.previousIndex&amp;&amp;s.emit(&quot;onSlideChangeStart&quot;,s))},s.onTransitionEnd=function(runCallbacks){s.animating=!1,s.setWrapperTransition(0),&quot;undefined&quot;==typeof<sp/>runCallbacks&amp;&amp;(runCallbacks=!0),s.lazy&amp;&amp;s.lazy.onTransitionEnd(),runCallbacks&amp;&amp;(s.emit(&quot;onTransitionEnd&quot;,s),s.activeIndex!==s.previousIndex&amp;&amp;s.emit(&quot;onSlideChangeEnd&quot;,s)),s.params.hashnav&amp;&amp;s.hashnav&amp;&amp;s.hashnav.setHash()},s.slideNext=function(runCallbacks,speed,internal){if(s.params.loop){if(s.animating)return!1;s.fixLoop();s.container[0].clientLeft;return<sp/>s.slideTo(s.activeIndex+s.params.slidesPerGroup,speed,runCallbacks,internal)}return<sp/>s.slideTo(s.activeIndex+s.params.slidesPerGroup,speed,runCallbacks,internal)},s._slideNext=function(speed){return<sp/>s.slideNext(!0,speed,!0)},s.slidePrev=function(runCallbacks,speed,internal){if(s.params.loop){if(s.animating)return!1;s.fixLoop();s.container[0].clientLeft;return<sp/>s.slideTo(s.activeIndex-1,speed,runCallbacks,internal)}return<sp/>s.slideTo(s.activeIndex-1,speed,runCallbacks,internal)},s._slidePrev=function(speed){return<sp/>s.slidePrev(!0,speed,!0)},s.slideReset=function(runCallbacks,speed,internal){return<sp/>s.slideTo(s.activeIndex,speed,runCallbacks)},s.setWrapperTransition=function(duration,byController){s.wrapper.transition(duration),&quot;slide&quot;!==s.params.effect&amp;&amp;s.effects[s.params.effect]&amp;&amp;s.effects[s.params.effect].setTransition(duration),s.params.parallax&amp;&amp;s.parallax&amp;&amp;s.parallax.setTransition(duration),s.params.scrollbar&amp;&amp;s.scrollbar&amp;&amp;s.scrollbar.setTransition(duration),s.params.control&amp;&amp;s.controller&amp;&amp;s.controller.setTransition(duration,byController),s.emit(&quot;onSetTransition&quot;,s,duration)},s.setWrapperTranslate=function(translate,updateActiveIndex,byController){var<sp/>x=0,y=0,z=0;isH()?x=s.rtl?-translate:translate:y=translate,s.params.virtualTranslate||(s.support.transforms3d?s.wrapper.transform(&quot;translate3d(&quot;+x+&quot;px,<sp/>&quot;+y+&quot;px,<sp/>&quot;+z+&quot;px)&quot;):s.wrapper.transform(&quot;translate(&quot;+x+&quot;px,<sp/>&quot;+y+&quot;px)&quot;)),s.translate=isH()?x:y,updateActiveIndex&amp;&amp;s.updateActiveIndex(),&quot;slide&quot;!==s.params.effect&amp;&amp;s.effects[s.params.effect]&amp;&amp;s.effects[s.params.effect].setTranslate(s.translate),s.params.parallax&amp;&amp;s.parallax&amp;&amp;s.parallax.setTranslate(s.translate),s.params.scrollbar&amp;&amp;s.scrollbar&amp;&amp;s.scrollbar.setTranslate(s.translate),s.params.control&amp;&amp;s.controller&amp;&amp;s.controller.setTranslate(s.translate,byController),s.emit(&quot;onSetTranslate&quot;,s,s.translate)},s.getTranslate=function(el,axis){var<sp/>matrix,curTransform,curStyle,transformMatrix;return&quot;undefined&quot;==typeof<sp/>axis&amp;&amp;(axis=&quot;x&quot;),s.params.virtualTranslate?s.rtl?-s.translate:s.translate:(curStyle=window.getComputedStyle(el,null),window.WebKitCSSMatrix?transformMatrix=new<sp/>window.WebKitCSSMatrix(&quot;none&quot;===curStyle.webkitTransform?&quot;&quot;:curStyle.webkitTransform):(transformMatrix=curStyle.MozTransform||curStyle.OTransform||curStyle.MsTransform||curStyle.msTransform||curStyle.transform||curStyle.getPropertyValue(&quot;transform&quot;).replace(&quot;translate(&quot;,&quot;matrix(1,<sp/>0,<sp/>0,<sp/>1,&quot;),matrix=transformMatrix.toString().split(&quot;,&quot;)),&quot;x&quot;===axis&amp;&amp;(curTransform=window.WebKitCSSMatrix?transformMatrix.m41:16===matrix.length?parseFloat(matrix[12]):parseFloat(matrix[4])),&quot;y&quot;===axis&amp;&amp;(curTransform=window.WebKitCSSMatrix?transformMatrix.m42:16===matrix.length?parseFloat(matrix[13]):parseFloat(matrix[5])),s.rtl&amp;&amp;curTransform&amp;&amp;(curTransform=-curTransform),curTransform||0)},s.getWrapperTranslate=function(axis){return&quot;undefined&quot;==typeof<sp/>axis&amp;&amp;(axis=isH()?&quot;x&quot;:&quot;y&quot;),s.getTranslate(s.wrapper[0],axis)},s.observers=[],s.initObservers=function(){if(s.params.observeParents)for(var<sp/>containerParents=s.container.parents(),i=0;i&lt;containerParents.length;i++)initObserver(containerParents[i]);initObserver(s.container[0],{childList:!1}),initObserver(s.wrapper[0],{attributes:!1})},s.disconnectObservers=function(){for(var<sp/>i=0;i&lt;s.observers.length;i++)s.observers[i].disconnect();s.observers=[]},s.createLoop=function(){s.wrapper.children(&quot;.&quot;+s.params.slideClass+&quot;.&quot;+s.params.slideDuplicateClass).remove();var<sp/>slides=s.wrapper.children(&quot;.&quot;+s.params.slideClass);s.loopedSlides=parseInt(s.params.loopedSlides||s.params.slidesPerView,10),s.loopedSlides=s.loopedSlides+s.params.loopAdditionalSlides,s.loopedSlides&gt;slides.length&amp;&amp;(s.loopedSlides=slides.length);var<sp/>i,prependSlides=[],appendSlides=[];for(slides.each(function(index,el){var<sp/>slide=$(this);index&lt;s.loopedSlides&amp;&amp;appendSlides.push(el),index&lt;slides.length&amp;&amp;index&gt;=slides.length-s.loopedSlides&amp;&amp;prependSlides.push(el),slide.attr(&quot;data-swiper-slide-index&quot;,index)}),i=0;i&lt;appendSlides.length;i++)s.wrapper.append($(appendSlides[i].cloneNode(!0)).addClass(s.params.slideDuplicateClass));for(i=prependSlides.length-1;i&gt;=0;i--)s.wrapper.prepend($(prependSlides[i].cloneNode(!0)).addClass(s.params.slideDuplicateClass))},s.destroyLoop=function(){s.wrapper.children(&quot;.&quot;+s.params.slideClass+&quot;.&quot;+s.params.slideDuplicateClass).remove(),s.slides.removeAttr(&quot;data-swiper-slide-index&quot;)},s.fixLoop=function(){var<sp/>newIndex;s.activeIndex&lt;s.loopedSlides?(newIndex=s.slides.length-3*s.loopedSlides+s.activeIndex,newIndex+=s.loopedSlides,s.slideTo(newIndex,0,!1,!0)):(&quot;auto&quot;===s.params.slidesPerView&amp;&amp;s.activeIndex&gt;=2*s.loopedSlides||s.activeIndex&gt;s.slides.length-2*s.params.slidesPerView)&amp;&amp;(newIndex=-s.slides.length+s.activeIndex+s.loopedSlides,newIndex+=s.loopedSlides,s.slideTo(newIndex,0,!1,!0))},s.appendSlide=function(slides){if(s.params.loop&amp;&amp;s.destroyLoop(),&quot;object&quot;==typeof<sp/>slides&amp;&amp;slides.length)for(var<sp/>i=0;i&lt;slides.length;i++)slides[i]&amp;&amp;s.wrapper.append(slides[i]);else<sp/>s.wrapper.append(slides);s.params.loop&amp;&amp;s.createLoop(),s.params.observer&amp;&amp;s.support.observer||s.update(!0)},s.prependSlide=function(slides){s.params.loop&amp;&amp;s.destroyLoop();var<sp/>newActiveIndex=s.activeIndex+1;if(&quot;object&quot;==typeof<sp/>slides&amp;&amp;slides.length){for(var<sp/>i=0;i&lt;slides.length;i++)slides[i]&amp;&amp;s.wrapper.prepend(slides[i]);newActiveIndex=s.activeIndex+slides.length}else<sp/>s.wrapper.prepend(slides);s.params.loop&amp;&amp;s.createLoop(),s.params.observer&amp;&amp;s.support.observer||s.update(!0),s.slideTo(newActiveIndex,0,!1)},s.removeSlide=function(slidesIndexes){s.params.loop&amp;&amp;(s.destroyLoop(),s.slides=s.wrapper.children(&quot;.&quot;+s.params.slideClass));var<sp/>indexToRemove,newActiveIndex=s.activeIndex;if(&quot;object&quot;==typeof<sp/>slidesIndexes&amp;&amp;slidesIndexes.length){for(var<sp/>i=0;i&lt;slidesIndexes.length;i++)indexToRemove=slidesIndexes[i],s.slides[indexToRemove]&amp;&amp;s.slides.eq(indexToRemove).remove(),newActiveIndex&gt;indexToRemove&amp;&amp;newActiveIndex--;newActiveIndex=Math.max(newActiveIndex,0)}else<sp/>indexToRemove=slidesIndexes,s.slides[indexToRemove]&amp;&amp;s.slides.eq(indexToRemove).remove(),newActiveIndex&gt;indexToRemove&amp;&amp;newActiveIndex--,newActiveIndex=Math.max(newActiveIndex,0);s.params.loop&amp;&amp;s.createLoop(),s.params.observer&amp;&amp;s.support.observer||s.update(!0),s.params.loop?s.slideTo(newActiveIndex+s.loopedSlides,0,!1):s.slideTo(newActiveIndex,0,!1)},s.removeAllSlides=function(){for(var<sp/>slidesIndexes=[],i=0;i&lt;s.slides.length;i++)slidesIndexes.push(i);s.removeSlide(slidesIndexes)},s.effects={fade:{fadeIndex:null,setTranslate:function(){for(var<sp/>i=0;i&lt;s.slides.length;i++){var<sp/>slide=s.slides.eq(i),offset=slide[0].swiperSlideOffset,tx=-offset;s.params.virtualTranslate||(tx-=s.translate);var<sp/>ty=0;isH()||(ty=tx,tx=0);var<sp/>slideOpacity=s.params.fade.crossFade?Math.max(1-Math.abs(slide[0].progress),0):1+Math.min(Math.max(slide[0].progress,-1),0);slideOpacity&gt;0&amp;&amp;1&gt;slideOpacity&amp;&amp;(s.effects.fade.fadeIndex=i),slide.css({opacity:slideOpacity}).transform(&quot;translate3d(&quot;+tx+&quot;px,<sp/>&quot;+ty+&quot;px,<sp/>0px)&quot;)}},setTransition:function(duration){if(s.slides.transition(duration),s.params.virtualTranslate&amp;&amp;0!==duration){var<sp/>fadeIndex=null!==s.effects.fade.fadeIndex?s.effects.fade.fadeIndex:s.activeIndex;s.params.loop||s.params.fade.crossFade||0!==fadeIndex||(fadeIndex=s.slides.length-1),s.slides.eq(fadeIndex).transitionEnd(function(){if(s)for(var<sp/>triggerEvents=[&quot;webkitTransitionEnd&quot;,&quot;transitionend&quot;,&quot;oTransitionEnd&quot;,&quot;MSTransitionEnd&quot;,&quot;msTransitionEnd&quot;],i=0;i&lt;triggerEvents.length;i++)s.wrapper.trigger(triggerEvents[i])})}}},cube:{setTranslate:function(){var<sp/>cubeShadow,wrapperRotate=0;s.params.cube.shadow&amp;&amp;(isH()?(cubeShadow=s.wrapper.find(&quot;.swiper-cube-shadow&quot;),0===cubeShadow.length&amp;&amp;(cubeShadow=$(&apos;</highlight><highlight class="normal">&lt;div<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;swiper-cube-shadow&quot;</highlight><highlight class="normal">&gt;&lt;/div&gt;</highlight><highlight class="stringliteral">&apos;),s.wrapper.append(cubeShadow)),cubeShadow.css({height:s.width+&quot;px&quot;})):(cubeShadow=s.container.find(&quot;.swiper-cube-shadow&quot;),0===cubeShadow.length&amp;&amp;(cubeShadow=$(&apos;</highlight><highlight class="normal">&lt;div<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;swiper-cube-shadow&quot;</highlight><highlight class="normal">&gt;&lt;/div&gt;</highlight><highlight class="stringliteral">&apos;),s.container.append(cubeShadow))));for(var<sp/>i=0;i&lt;s.slides.length;i++){var<sp/>slide=s.slides.eq(i),slideAngle=90*i,round=Math.floor(slideAngle/360);s.rtl&amp;&amp;(slideAngle=-slideAngle,round=Math.floor(-slideAngle/360));var<sp/>progress=Math.max(Math.min(slide[0].progress,1),-1),tx=0,ty=0,tz=0;i%4===0?(tx=4*-round*s.size,tz=0):(i-1)%4===0?(tx=0,tz=4*-round*s.size):(i-2)%4===0?(tx=s.size+4*round*s.size,tz=s.size):(i-3)%4===0&amp;&amp;(tx=-s.size,tz=3*s.size+4*s.size*round),s.rtl&amp;&amp;(tx=-tx),isH()||(ty=tx,tx=0);var<sp/>transform=&quot;rotateX(&quot;+(isH()?0:-slideAngle)+&quot;deg)<sp/>rotateY(&quot;+(isH()?slideAngle:0)+&quot;deg)<sp/>translate3d(&quot;+tx+&quot;px,<sp/>&quot;+ty+&quot;px,<sp/>&quot;+tz+&quot;px)&quot;;if(1&gt;=progress&amp;&amp;progress&gt;-1&amp;&amp;(wrapperRotate=90*i+90*progress,s.rtl&amp;&amp;(wrapperRotate=90*-i-90*progress)),slide.transform(transform),s.params.cube.slideShadows){var<sp/>shadowBefore=isH()?slide.find(&quot;.swiper-slide-shadow-left&quot;):slide.find(&quot;.swiper-slide-shadow-top&quot;),shadowAfter=isH()?slide.find(&quot;.swiper-slide-shadow-right&quot;):slide.find(&quot;.swiper-slide-shadow-bottom&quot;);0===shadowBefore.length&amp;&amp;(shadowBefore=$(&apos;</highlight><highlight class="normal">&lt;div<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;swiper-slide-shadow-&apos;+(isH()?&quot;</highlight><highlight class="normal">left</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;)+&apos;&quot;</highlight><highlight class="normal">&gt;&lt;/div&gt;</highlight><highlight class="stringliteral">&apos;),slide.append(shadowBefore)),0===shadowAfter.length&amp;&amp;(shadowAfter=$(&apos;</highlight><highlight class="normal">&lt;div<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;swiper-slide-shadow-&apos;+(isH()?&quot;</highlight><highlight class="normal">right</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">bottom</highlight><highlight class="stringliteral">&quot;)+&apos;&quot;</highlight><highlight class="normal">&gt;&lt;/div&gt;</highlight><highlight class="stringliteral">&apos;),slide.append(shadowAfter));slide[0].progress;shadowBefore.length&amp;&amp;(shadowBefore[0].style.opacity=-slide[0].progress),shadowAfter.length&amp;&amp;(shadowAfter[0].style.opacity=slide[0].progress)}}if(s.wrapper.css({&quot;-webkit-transform-origin&quot;:&quot;50%<sp/>50%<sp/>-&quot;+s.size/2+&quot;px&quot;,&quot;-moz-transform-origin&quot;:&quot;50%<sp/>50%<sp/>-&quot;+s.size/2+&quot;px&quot;,&quot;-ms-transform-origin&quot;:&quot;50%<sp/>50%<sp/>-&quot;+s.size/2+&quot;px&quot;,&quot;transform-origin&quot;:&quot;50%<sp/>50%<sp/>-&quot;+s.size/2+&quot;px&quot;}),s.params.cube.shadow)if(isH())cubeShadow.transform(&quot;translate3d(0px,<sp/>&quot;+(s.width/2+s.params.cube.shadowOffset)+&quot;px,<sp/>&quot;+-s.width/2+&quot;px)<sp/>rotateX(90deg)<sp/>rotateZ(0deg)<sp/>scale(&quot;+s.params.cube.shadowScale+&quot;)&quot;);else{var<sp/>shadowAngle=Math.abs(wrapperRotate)-90*Math.floor(Math.abs(wrapperRotate)/90),multiplier=1.5-(Math.sin(2*shadowAngle*Math.PI/360)/2+Math.cos(2*shadowAngle*Math.PI/360)/2),scale1=s.params.cube.shadowScale,scale2=s.params.cube.shadowScale/multiplier,offset=s.params.cube.shadowOffset;cubeShadow.transform(&quot;scale3d(&quot;+scale1+&quot;,<sp/>1,<sp/>&quot;+scale2+&quot;)<sp/>translate3d(0px,<sp/>&quot;+(s.height/2+offset)+&quot;px,<sp/>&quot;+-s.height/2/scale2+&quot;px)<sp/>rotateX(-90deg)&quot;)}var<sp/>zFactor=s.isSafari||s.isUiWebView?-s.size/2:0;s.wrapper.transform(&quot;translate3d(0px,0,&quot;+zFactor+&quot;px)<sp/>rotateX(&quot;+(isH()?0:wrapperRotate)+&quot;deg)<sp/>rotateY(&quot;+(isH()?-wrapperRotate:0)+&quot;deg)&quot;)},</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral">setTransition:function(duration){s.slides.transition(duration).find(&quot;.swiper-slide-shadow-top,<sp/>.swiper-slide-shadow-right,<sp/>.swiper-slide-shadow-bottom,<sp/>.swiper-slide-shadow-left&quot;).transition(duration),s.params.cube.shadow&amp;&amp;!isH()&amp;&amp;s.container.find(&quot;.swiper-cube-shadow&quot;).transition(duration)}},coverflow:{setTranslate:function(){for(var<sp/>transform=s.translate,center=isH()?-transform+s.width/2:-transform+s.height/2,rotate=isH()?s.params.coverflow.rotate:-s.params.coverflow.rotate,translate=s.params.coverflow.depth,i=0,length=s.slides.length;length&gt;i;i++){var<sp/>slide=s.slides.eq(i),slideSize=s.slidesSizesGrid[i],slideOffset=slide[0].swiperSlideOffset,offsetMultiplier=(center-slideOffset-slideSize/2)/slideSize*s.params.coverflow.modifier,rotateY=isH()?rotate*offsetMultiplier:0,rotateX=isH()?0:rotate*offsetMultiplier,translateZ=-translate*Math.abs(offsetMultiplier),translateY=isH()?0:s.params.coverflow.stretch*offsetMultiplier,translateX=isH()?s.params.coverflow.stretch*offsetMultiplier:0;Math.abs(translateX)&lt;.001&amp;&amp;(translateX=0),Math.abs(translateY)&lt;.001&amp;&amp;(translateY=0),Math.abs(translateZ)&lt;.001&amp;&amp;(translateZ=0),Math.abs(rotateY)&lt;.001&amp;&amp;(rotateY=0),Math.abs(rotateX)&lt;.001&amp;&amp;(rotateX=0);var<sp/>slideTransform=&quot;translate3d(&quot;+translateX+&quot;px,&quot;+translateY+&quot;px,&quot;+translateZ+&quot;px)<sp/><sp/>rotateX(&quot;+rotateX+&quot;deg)<sp/>rotateY(&quot;+rotateY+&quot;deg)&quot;;if(slide.transform(slideTransform),slide[0].style.zIndex=-Math.abs(Math.round(offsetMultiplier))+1,s.params.coverflow.slideShadows){var<sp/>shadowBefore=isH()?slide.find(&quot;.swiper-slide-shadow-left&quot;):slide.find(&quot;.swiper-slide-shadow-top&quot;),shadowAfter=isH()?slide.find(&quot;.swiper-slide-shadow-right&quot;):slide.find(&quot;.swiper-slide-shadow-bottom&quot;);0===shadowBefore.length&amp;&amp;(shadowBefore=$(&apos;</highlight><highlight class="normal">&lt;div<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;swiper-slide-shadow-&apos;+(isH()?&quot;</highlight><highlight class="normal">left</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">top</highlight><highlight class="stringliteral">&quot;)+&apos;&quot;</highlight><highlight class="normal">&gt;&lt;/div&gt;</highlight><highlight class="stringliteral">&apos;),slide.append(shadowBefore)),0===shadowAfter.length&amp;&amp;(shadowAfter=$(&apos;</highlight><highlight class="normal">&lt;div<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;swiper-slide-shadow-&apos;+(isH()?&quot;</highlight><highlight class="normal">right</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">bottom</highlight><highlight class="stringliteral">&quot;)+&apos;&quot;</highlight><highlight class="normal">&gt;&lt;/div&gt;</highlight><highlight class="stringliteral">&apos;),slide.append(shadowAfter)),shadowBefore.length&amp;&amp;(shadowBefore[0].style.opacity=offsetMultiplier&gt;0?offsetMultiplier:0),shadowAfter.length&amp;&amp;(shadowAfter[0].style.opacity=-offsetMultiplier&gt;0?-offsetMultiplier:0)}}if(s.browser.ie){var<sp/>ws=s.wrapper[0].style;ws.perspectiveOrigin=center+&quot;px<sp/>50%&quot;}},setTransition:function(duration){s.slides.transition(duration).find(&quot;.swiper-slide-shadow-top,<sp/>.swiper-slide-shadow-right,<sp/>.swiper-slide-shadow-bottom,<sp/>.swiper-slide-shadow-left&quot;).transition(duration)}}},s.lazy={initialImageLoaded:!1,loadImageInSlide:function(index,loadInDuplicate){if(&quot;undefined&quot;!=typeof<sp/>index&amp;&amp;(&quot;undefined&quot;==typeof<sp/>loadInDuplicate&amp;&amp;(loadInDuplicate=!0),0!==s.slides.length)){var<sp/>slide=s.slides.eq(index),img=slide.find(&quot;.swiper-lazy:not(.swiper-lazy-loaded):not(.swiper-lazy-loading)&quot;);!slide.hasClass(&quot;swiper-lazy&quot;)||slide.hasClass(&quot;swiper-lazy-loaded&quot;)||slide.hasClass(&quot;swiper-lazy-loading&quot;)||img.add(slide[0]),0!==img.length&amp;&amp;img.each(function(){var<sp/>_img=$(this);_img.addClass(&quot;swiper-lazy-loading&quot;);var<sp/>background=_img.attr(&quot;data-background&quot;),src=_img.attr(&quot;data-src&quot;);s.loadImage(_img[0],src||background,!1,function(){if(background?(_img.css(&quot;background-image&quot;,&quot;url(&quot;+background+&quot;)&quot;),_img.removeAttr(&quot;data-background&quot;)):(_img.attr(&quot;src&quot;,src),_img.removeAttr(&quot;data-src&quot;)),_img.addClass(&quot;swiper-lazy-loaded&quot;).removeClass(&quot;swiper-lazy-loading&quot;),slide.find(&quot;.swiper-lazy-preloader,<sp/>.preloader&quot;).remove(),s.params.loop&amp;&amp;loadInDuplicate){var<sp/>slideOriginalIndex=slide.attr(&quot;data-swiper-slide-index&quot;);if(slide.hasClass(s.params.slideDuplicateClass)){var<sp/>originalSlide=s.wrapper.children(&apos;</highlight><highlight class="normal">[data-swiper-slide-index=</highlight><highlight class="stringliteral">&quot;&apos;+slideOriginalIndex+&apos;&quot;</highlight><highlight class="normal">]:not(.</highlight><highlight class="stringliteral">&apos;+s.params.slideDuplicateClass+&quot;)&quot;);s.lazy.loadImageInSlide(originalSlide.index(),!1)}else{var<sp/>duplicatedSlide=s.wrapper.children(&quot;.&quot;+s.params.slideDuplicateClass+&apos;</highlight><highlight class="normal">[data-swiper-slide-index=</highlight><highlight class="stringliteral">&quot;&apos;+slideOriginalIndex+&apos;&quot;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&apos;);s.lazy.loadImageInSlide(duplicatedSlide.index(),!1)}}s.emit(&quot;onLazyImageReady&quot;,s,slide[0],_img[0])}),s.emit(&quot;onLazyImageLoad&quot;,s,slide[0],_img[0])})}},load:function(){if(s.params.watchSlidesVisibility)s.wrapper.children(&quot;.&quot;+s.params.slideVisibleClass).each(function(){s.lazy.loadImageInSlide($(this).index())});else<sp/>if(s.params.slidesPerView&gt;1)for(var<sp/>i=s.activeIndex;i&lt;s.activeIndex+s.params.slidesPerView;i++)s.slides[i]&amp;&amp;s.lazy.loadImageInSlide(i);else<sp/>s.lazy.loadImageInSlide(s.activeIndex);if(s.params.lazyLoadingInPrevNext){var<sp/>nextSlide=s.wrapper.children(&quot;.&quot;+s.params.slideNextClass);nextSlide.length&gt;0&amp;&amp;s.lazy.loadImageInSlide(nextSlide.index());var<sp/>prevSlide=s.wrapper.children(&quot;.&quot;+s.params.slidePrevClass);prevSlide.length&gt;0&amp;&amp;s.lazy.loadImageInSlide(prevSlide.index())}},onTransitionStart:function(){s.params.lazyLoading&amp;&amp;(s.params.lazyLoadingOnTransitionStart||!s.params.lazyLoadingOnTransitionStart&amp;&amp;!s.lazy.initialImageLoaded)&amp;&amp;s.lazy.load()},onTransitionEnd:function(){s.params.lazyLoading&amp;&amp;!s.params.lazyLoadingOnTransitionStart&amp;&amp;s.lazy.load()}},s.scrollbar={set:function(){if(s.params.scrollbar){var<sp/>sb=s.scrollbar;sb.track=$(s.params.scrollbar),sb.drag=sb.track.find(&quot;.swiper-scrollbar-drag&quot;),0===sb.drag.length&amp;&amp;(sb.drag=$(&apos;</highlight><highlight class="normal">&lt;div<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;swiper-scrollbar-drag&quot;</highlight><highlight class="normal">&gt;&lt;/div&gt;</highlight><highlight class="stringliteral">&apos;),sb.track.append(sb.drag)),sb.drag[0].style.width=&quot;&quot;,sb.drag[0].style.height=&quot;&quot;,sb.trackSize=isH()?sb.track[0].offsetWidth:sb.track[0].offsetHeight,sb.divider=s.size/s.virtualSize,sb.moveDivider=sb.divider*(sb.trackSize/s.size),sb.dragSize=sb.trackSize*sb.divider,isH()?sb.drag[0].style.width=sb.dragSize+&quot;px&quot;:sb.drag[0].style.height=sb.dragSize+&quot;px&quot;,sb.divider&gt;=1?sb.track[0].style.display=&quot;none&quot;:sb.track[0].style.display=&quot;&quot;,s.params.scrollbarHide&amp;&amp;(sb.track[0].style.opacity=0)}},setTranslate:function(){if(s.params.scrollbar){var<sp/>newPos,sb=s.scrollbar,newSize=(s.translate||0,sb.dragSize);newPos=(sb.trackSize-sb.dragSize)*s.progress,s.rtl&amp;&amp;isH()?(newPos=-newPos,newPos&gt;0?(newSize=sb.dragSize-newPos,newPos=0):-newPos+sb.dragSize&gt;sb.trackSize&amp;&amp;(newSize=sb.trackSize+newPos)):0&gt;newPos?(newSize=sb.dragSize+newPos,newPos=0):newPos+sb.dragSize&gt;sb.trackSize&amp;&amp;(newSize=sb.trackSize-newPos),isH()?(s.support.transforms3d?sb.drag.transform(&quot;translate3d(&quot;+newPos+&quot;px,<sp/>0,<sp/>0)&quot;):sb.drag.transform(&quot;translateX(&quot;+newPos+&quot;px)&quot;),sb.drag[0].style.width=newSize+&quot;px&quot;):(s.support.transforms3d?sb.drag.transform(&quot;translate3d(0px,<sp/>&quot;+newPos+&quot;px,<sp/>0)&quot;):sb.drag.transform(&quot;translateY(&quot;+newPos+&quot;px)&quot;),sb.drag[0].style.height=newSize+&quot;px&quot;),s.params.scrollbarHide&amp;&amp;(clearTimeout(sb.timeout),sb.track[0].style.opacity=1,sb.timeout=setTimeout(function(){sb.track[0].style.opacity=0,sb.track.transition(400)},1e3))}},setTransition:function(duration){s.params.scrollbar&amp;&amp;s.scrollbar.drag.transition(duration)}},s.controller={setTranslate:function(translate,byController){function<sp/>setControlledTranslate(c){translate=c.rtl&amp;&amp;&quot;horizontal&quot;===c.params.direction?-s.translate:s.translate,multiplier=(c.maxTranslate()-c.minTranslate())/(s.maxTranslate()-s.minTranslate()),controlledTranslate=(translate-s.minTranslate())*multiplier+c.minTranslate(),s.params.controlInverse&amp;&amp;(controlledTranslate=c.maxTranslate()-controlledTranslate),c.updateProgress(controlledTranslate),c.setWrapperTranslate(controlledTranslate,!1,s),c.updateActiveIndex()}var<sp/>multiplier,controlledTranslate,controlled=s.params.control;if(s.isArray(controlled))for(var<sp/>i=0;i&lt;controlled.length;i++)controlled[i]!==byController&amp;&amp;controlled[i]instanceof<sp/>Swiper&amp;&amp;setControlledTranslate(controlled[i]);else<sp/>controlled<sp/>instanceof<sp/>Swiper&amp;&amp;byController!==controlled&amp;&amp;setControlledTranslate(controlled)},setTransition:function(duration,byController){function<sp/>setControlledTransition(c){c.setWrapperTransition(duration,s),0!==duration&amp;&amp;(c.onTransitionStart(),c.wrapper.transitionEnd(function(){controlled&amp;&amp;c.onTransitionEnd()}))}var<sp/>i,controlled=s.params.control;if(s.isArray(controlled))for(i=0;i&lt;controlled.length;i++)controlled[i]!==byController&amp;&amp;controlled[i]instanceof<sp/>Swiper&amp;&amp;setControlledTransition(controlled[i]);else<sp/>controlled<sp/>instanceof<sp/>Swiper&amp;&amp;byController!==controlled&amp;&amp;setControlledTransition(controlled)}},s.hashnav={init:function(){if(s.params.hashnav){s.hashnav.initialized=!0;var<sp/>hash=document.location.hash.replace(&quot;#&quot;,&quot;&quot;);if(hash)for(var<sp/>speed=0,i=0,length=s.slides.length;length&gt;i;i++){var<sp/>slide=s.slides.eq(i),slideHash=slide.attr(&quot;data-hash&quot;);if(slideHash===hash&amp;&amp;!slide.hasClass(s.params.slideDuplicateClass)){var<sp/>index=slide.index();s.slideTo(index,speed,s.params.runCallbacksOnInit,!0)}}}},setHash:function(){s.hashnav.initialized&amp;&amp;s.params.hashnav&amp;&amp;(document.location.hash=s.slides.eq(s.activeIndex).attr(&quot;data-hash&quot;)||&quot;&quot;)}},s.disableKeyboardControl=function(){$(document).off(&quot;keydown&quot;,handleKeyboard)},s.enableKeyboardControl=function(){$(document).on(&quot;keydown&quot;,handleKeyboard)},s._wheelEvent=!1,s._lastWheelScrollTime=(new<sp/>window.Date).getTime(),s.params.mousewheelControl){if(void<sp/>0!==document.onmousewheel&amp;&amp;(s._wheelEvent=&quot;mousewheel&quot;),!s._wheelEvent)try{new<sp/>window.WheelEvent(&quot;wheel&quot;),s._wheelEvent=&quot;wheel&quot;}catch(e){}s._wheelEvent||(s._wheelEvent=&quot;DOMMouseScroll&quot;)}s.disableMousewheelControl=function(){return<sp/>s._wheelEvent?(s.container.off(s._wheelEvent,handleMousewheel),!0):!1},s.enableMousewheelControl=function(){return<sp/>s._wheelEvent?(s.container.on(s._wheelEvent,handleMousewheel),!0):!1},s.parallax={setTranslate:function(){s.container.children(&quot;[data-swiper-parallax],<sp/>[data-swiper-parallax-x],<sp/>[data-swiper-parallax-y]&quot;).each(function(){setParallaxTransform(this,s.progress)}),s.slides.each(function(){var<sp/>slide=$(this);slide.find(&quot;[data-swiper-parallax],<sp/>[data-swiper-parallax-x],<sp/>[data-swiper-parallax-y]&quot;).each(function(){var<sp/>progress=Math.min(Math.max(slide[0].progress,-1),1);setParallaxTransform(this,progress)})})},setTransition:function(duration){&quot;undefined&quot;==typeof<sp/>duration&amp;&amp;(duration=s.params.speed),s.container.find(&quot;[data-swiper-parallax],<sp/>[data-swiper-parallax-x],<sp/>[data-swiper-parallax-y]&quot;).each(function(){var<sp/>el=$(this),parallaxDuration=parseInt(el.attr(&quot;data-swiper-parallax-duration&quot;),10)||duration;0===duration&amp;&amp;(parallaxDuration=0),el.transition(parallaxDuration)})}},s._plugins=[];for(var<sp/>plugin<sp/>in<sp/>s.plugins){var<sp/>p=s.plugins[plugin](s,s.params[plugin]);p&amp;&amp;s._plugins.push(p)}return<sp/>s.callPlugins=function(eventName){for(var<sp/>i=0;i&lt;s._plugins.length;i++)eventName<sp/>in<sp/>s._plugins[i]&amp;&amp;s._plugins[i][eventName](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5])},s.emitterEventListeners={},s.emit=function(eventName){s.params[eventName]&amp;&amp;s.params[eventName](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);var<sp/>i;if(s.emitterEventListeners[eventName])for(i=0;i&lt;s.emitterEventListeners[eventName].length;i++)s.emitterEventListeners[eventName][i](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);s.callPlugins&amp;&amp;s.callPlugins(eventName,arguments[1],arguments[2],arguments[3],arguments[4],arguments[5])},s.on=function(eventName,handler){return<sp/>eventName=normalizeEventName(eventName),s.emitterEventListeners[eventName]||(s.emitterEventListeners[eventName]=[]),s.emitterEventListeners[eventName].push(handler),s},s.off=function(eventName,handler){var<sp/>i;if(eventName=normalizeEventName(eventName),&quot;undefined&quot;==typeof<sp/>handler)return<sp/>s.emitterEventListeners[eventName]=[],s;if(s.emitterEventListeners[eventName]&amp;&amp;0!==s.emitterEventListeners[eventName].length){for(i=0;i&lt;s.emitterEventListeners[eventName].length;i++)s.emitterEventListeners[eventName][i]===handler&amp;&amp;s.emitterEventListeners[eventName].splice(i,1);return<sp/>s}},s.once=function(eventName,handler){eventName=normalizeEventName(eventName);var<sp/>_handler=function(){handler(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]),s.off(eventName,_handler)};return<sp/>s.on(eventName,_handler),s},s.a11y={makeFocusable:function($el){return<sp/>$el[0].tabIndex=&quot;0&quot;,$el},addRole:function($el,role){return<sp/>$el.attr(&quot;role&quot;,role),$el},addLabel:function($el,label){return<sp/>$el.attr(&quot;aria-label&quot;,label),$el},disable:function($el){return<sp/>$el.attr(&quot;aria-disabled&quot;,!0),$el},enable:function($el){return<sp/>$el.attr(&quot;aria-disabled&quot;,!1),$el},onEnterKey:function(event){13===event.keyCode&amp;&amp;($(event.target).is(s.params.nextButton)?(s.onClickNext(event),s.isEnd?s.a11y.notify(s.params.lastSlideMsg):s.a11y.notify(s.params.nextSlideMsg)):$(event.target).is(s.params.prevButton)&amp;&amp;(s.onClickPrev(event),s.isBeginning?s.a11y.notify(s.params.firstSlideMsg):s.a11y.notify(s.params.prevSlideMsg)))},liveRegion:$(&apos;</highlight><highlight class="normal">&lt;span<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;swiper-notification&quot;</highlight><highlight class="normal"><sp/>aria-live=</highlight><highlight class="stringliteral">&quot;assertive&quot;</highlight><highlight class="normal"><sp/>aria-atomic=</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">&gt;&lt;/span&gt;</highlight><highlight class="stringliteral">&apos;),notify:function(message){var<sp/>notification=s.a11y.liveRegion;0!==notification.length&amp;&amp;(notification.html(&quot;&quot;),notification.html(message))},init:function(){if(s.params.nextButton){var<sp/>nextButton=$(s.params.nextButton);s.a11y.makeFocusable(nextButton),s.a11y.addRole(nextButton,&quot;button&quot;),s.a11y.addLabel(nextButton,s.params.nextSlideMsg)}if(s.params.prevButton){var<sp/>prevButton=$(s.params.prevButton);s.a11y.makeFocusable(prevButton),s.a11y.addRole(prevButton,&quot;button&quot;),s.a11y.addLabel(prevButton,s.params.prevSlideMsg)}$(s.container).append(s.a11y.liveRegion)},destroy:function(){s.a11y.liveRegion&amp;&amp;s.a11y.liveRegion.length&gt;0&amp;&amp;s.a11y.liveRegion.remove()}},s.init=function(){s.params.loop&amp;&amp;s.createLoop(),s.updateContainerSize(),s.updateSlidesSize(),s.updatePagination(),s.params.scrollbar&amp;&amp;s.scrollbar&amp;&amp;s.scrollbar.set(),&quot;slide&quot;!==s.params.effect&amp;&amp;s.effects[s.params.effect]&amp;&amp;(s.params.loop||s.updateProgress(),s.effects[s.params.effect].setTranslate()),s.params.loop?s.slideTo(s.params.initialSlide+s.loopedSlides,0,s.params.runCallbacksOnInit):(s.slideTo(s.params.initialSlide,0,s.params.runCallbacksOnInit),0===s.params.initialSlide&amp;&amp;(s.parallax&amp;&amp;s.params.parallax&amp;&amp;s.parallax.setTranslate(),s.lazy&amp;&amp;s.params.lazyLoading&amp;&amp;(s.lazy.load(),s.lazy.initialImageLoaded=!0))),s.attachEvents(),s.params.observer&amp;&amp;s.support.observer&amp;&amp;s.initObservers(),s.params.preloadImages&amp;&amp;!s.params.lazyLoading&amp;&amp;s.preloadImages(),s.params.autoplay&amp;&amp;s.startAutoplay(),s.params.keyboardControl&amp;&amp;s.enableKeyboardControl&amp;&amp;s.enableKeyboardControl(),s.params.mousewheelControl&amp;&amp;s.enableMousewheelControl&amp;&amp;s.enableMousewheelControl(),s.params.hashnav&amp;&amp;s.hashnav&amp;&amp;s.hashnav.init(),s.params.a11y&amp;&amp;s.a11y&amp;&amp;s.a11y.init(),s.emit(&quot;onInit&quot;,s)},s.cleanupStyles=function(){s.container.removeClass(s.classNames.join(&quot;<sp/>&quot;)).removeAttr(&quot;style&quot;),s.wrapper.removeAttr(&quot;style&quot;),s.slides&amp;&amp;s.slides.length&amp;&amp;s.slides.removeClass([s.params.slideVisibleClass,s.params.slideActiveClass,s.params.slideNextClass,s.params.slidePrevClass].join(&quot;<sp/>&quot;)).removeAttr(&quot;style&quot;).removeAttr(&quot;data-swiper-column&quot;).removeAttr(&quot;data-swiper-row&quot;),s.paginationContainer&amp;&amp;s.paginationContainer.length&amp;&amp;s.paginationContainer.removeClass(s.params.paginationHiddenClass),s.bullets&amp;&amp;s.bullets.length&amp;&amp;s.bullets.removeClass(s.params.bulletActiveClass),s.params.prevButton&amp;&amp;$(s.params.prevButton).removeClass(s.params.buttonDisabledClass),s.params.nextButton&amp;&amp;$(s.params.nextButton).removeClass(s.params.buttonDisabledClass),s.params.scrollbar&amp;&amp;s.scrollbar&amp;&amp;(s.scrollbar.track&amp;&amp;s.scrollbar.track.length&amp;&amp;s.scrollbar.track.removeAttr(&quot;style&quot;),s.scrollbar.drag&amp;&amp;s.scrollbar.drag.length&amp;&amp;s.scrollbar.drag.removeAttr(&quot;style&quot;))},s.destroy=function(deleteInstance,cleanupStyles){s.detachEvents(),s.stopAutoplay(),s.params.loop&amp;&amp;s.destroyLoop(),cleanupStyles&amp;&amp;s.cleanupStyles(),s.disconnectObservers(),s.params.keyboardControl&amp;&amp;s.disableKeyboardControl&amp;&amp;s.disableKeyboardControl(),s.params.mousewheelControl&amp;&amp;s.disableMousewheelControl&amp;&amp;s.disableMousewheelControl(),s.params.a11y&amp;&amp;s.a11y&amp;&amp;s.a11y.destroy(),s.emit(&quot;onDestroy&quot;),deleteInstance!==!1&amp;&amp;(s=null)},s.init(),s}};Swiper.prototype={isSafari:function(){var<sp/>ua=navigator.userAgent.toLowerCase();return<sp/>ua.indexOf(&quot;safari&quot;)&gt;=0&amp;&amp;ua.indexOf(&quot;chrome&quot;)&lt;0&amp;&amp;ua.indexOf(&quot;android&quot;)&lt;0}(),isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),isArray:function(arr){return&quot;[object<sp/>Array]&quot;===Object.prototype.toString.apply(arr)},browser:{ie:window.navigator.pointerEnabled||window.navigator.msPointerEnabled,ieTouch:window.navigator.msPointerEnabled&amp;&amp;window.navigator.msMaxTouchPoints&gt;1||window.navigator.pointerEnabled&amp;&amp;window.navigator.maxTouchPoints&gt;1},device:function(){var<sp/>ua=navigator.userAgent,android=ua.match(/(Android);?[\s\/]+([\d.]+)?/),ipad=ua.match(/(iPad).*OS\s([\d_]+)/),iphone=(ua.match(/(iPod)(.*OS\s([\d_]+))?/),!ipad&amp;&amp;ua.match(/(iPhone\sOS)\s([\d_]+)/));return{ios:ipad||iphone||ipad,android:android}}(),support:{touch:window.Modernizr&amp;&amp;Modernizr.touch===!0||function(){return!!(&quot;ontouchstart&quot;in<sp/>window||window.DocumentTouch&amp;&amp;document<sp/>instanceof<sp/>DocumentTouch)}(),transforms3d:window.Modernizr&amp;&amp;Modernizr.csstransforms3d===!0||function(){var<sp/>div=document.createElement(&quot;div&quot;).style;return&quot;webkitPerspective&quot;in<sp/>div||&quot;MozPerspective&quot;in<sp/>div||&quot;OPerspective&quot;in<sp/>div||&quot;MsPerspective&quot;in<sp/>div||&quot;perspective&quot;in<sp/>div}(),flexbox:function(){for(var<sp/>div=document.createElement(&quot;div&quot;).style,styles=&quot;alignItems<sp/>webkitAlignItems<sp/>webkitBoxAlign<sp/>msFlexAlign<sp/>mozBoxAlign<sp/>webkitFlexDirection<sp/>msFlexDirection<sp/>mozBoxDirection<sp/>mozBoxOrient<sp/>webkitBoxDirection<sp/>webkitBoxOrient&quot;.split(&quot;<sp/>&quot;),i=0;i&lt;styles.length;i++)if(styles[i]in<sp/>div)return!0}(),observer:function(){return&quot;MutationObserver&quot;in<sp/>window||&quot;WebkitMutationObserver&quot;in<sp/>window}()},plugins:{}};for(var<sp/>Dom7=(function(){var<sp/>Dom7=function(arr){var<sp/>_this=this,i=0;for(i=0;i&lt;arr.length;i++)_this[i]=arr[i];return<sp/>_this.length=arr.length,this},$=function(selector,context){var<sp/>arr=[],i=0;if(selector&amp;&amp;!context&amp;&amp;selector<sp/>instanceof<sp/>Dom7)return<sp/>selector;if(selector)if(&quot;string&quot;==typeof<sp/>selector){var<sp/>els,tempParent,html=selector.trim();if(html.indexOf(&quot;&lt;&quot;)&gt;=0&amp;&amp;html.indexOf(&quot;&gt;&quot;)&gt;=0){var<sp/>toCreate=&quot;div&quot;;for(0===html.indexOf(&quot;&lt;li&quot;)&amp;&amp;(toCreate=&quot;ul&quot;),0===html.indexOf(&quot;&lt;tr&quot;)&amp;&amp;(toCreate=&quot;tbody&quot;),(0===html.indexOf(&quot;&lt;td&quot;)||0===html.indexOf(&quot;&lt;th&quot;))&amp;&amp;(toCreate=&quot;tr&quot;),0===html.indexOf(&quot;&lt;tbody&quot;)&amp;&amp;(toCreate=&quot;table&quot;),0===html.indexOf(&quot;&lt;option&quot;)&amp;&amp;(toCreate=&quot;select&quot;),tempParent=document.createElement(toCreate),tempParent.innerHTML=selector,i=0;i&lt;tempParent.childNodes.length;i++)arr.push(tempParent.childNodes[i])}else<sp/>for(els=context||&quot;#&quot;!==selector[0]||selector.match(/[<sp/>.&lt;&gt;:~]/)?(context||document).querySelectorAll(selector):[document.getElementById(selector.split(&quot;#&quot;)[1])],i=0;i&lt;els.length;i++)els[i]&amp;&amp;arr.push(els[i])}else<sp/>if(selector.nodeType||selector===window||selector===document)arr.push(selector);else<sp/>if(selector.length&gt;0&amp;&amp;selector[0].nodeType)for(i=0;i&lt;selector.length;i++)arr.push(selector[i]);return<sp/>new<sp/>Dom7(arr)};return<sp/>Dom7.prototype={addClass:function(className){if(&quot;undefined&quot;==typeof<sp/>className)return<sp/>this;for(var<sp/>classes=className.split(&quot;<sp/>&quot;),i=0;i&lt;classes.length;i++)for(var<sp/>j=0;j&lt;this.length;j++)this[j].classList.add(classes[i]);return<sp/>this},removeClass:function(className){for(var<sp/>classes=className.split(&quot;<sp/>&quot;),i=0;i&lt;classes.length;i++)for(var<sp/>j=0;j&lt;this.length;j++)this[j].classList.remove(classes[i]);return<sp/>this},hasClass:function(className){return<sp/>this[0]?this[0].classList.contains(className):!1},toggleClass:function(className){for(var<sp/>classes=className.split(&quot;<sp/>&quot;),i=0;i&lt;classes.length;i++)for(var<sp/>j=0;j&lt;this.length;j++)this[j].classList.toggle(classes[i]);return<sp/>this},attr:function(attrs,value){if(1===arguments.length&amp;&amp;&quot;string&quot;==typeof<sp/>attrs)return<sp/>this[0]?this[0].getAttribute(attrs):void<sp/>0;for(var<sp/>i=0;i&lt;this.length;i++)if(2===arguments.length)this[i].setAttribute(attrs,value);else<sp/>for(var<sp/>attrName<sp/>in<sp/>attrs)this[i][attrName]=attrs[attrName],this[i].setAttribute(attrName,attrs[attrName]);return<sp/>this},removeAttr:function(attr){for(var<sp/>i=0;i&lt;this.length;i++)this[i].removeAttribute(attr);return<sp/>this},data:function(key,value){if(&quot;undefined&quot;==typeof<sp/>value){if(this[0]){var<sp/>dataKey=this[0].getAttribute(&quot;data-&quot;+key);return<sp/>dataKey?dataKey:this[0].dom7ElementDataStorage&amp;&amp;key<sp/>in<sp/>this[0].dom7ElementDataStorage?this[0].dom7ElementDataStorage[key]:void<sp/>0}return<sp/>void<sp/>0}for(var<sp/>i=0;i&lt;this.length;i++){var<sp/>el=this[i];el.dom7ElementDataStorage||(el.dom7ElementDataStorage={}),el.dom7ElementDataStorage[key]=value}return<sp/>this},transform:function(transform){for(var<sp/>i=0;i&lt;this.length;i++){var<sp/>elStyle=this[i].style;elStyle.webkitTransform=elStyle.MsTransform=elStyle.msTransform=elStyle.MozTransform=elStyle.OTransform=elStyle.transform=transform}return<sp/>this},transition:function(duration){&quot;string&quot;!=typeof<sp/>duration&amp;&amp;(duration+=&quot;ms&quot;);for(var<sp/>i=0;i&lt;this.length;i++){var<sp/>elStyle=this[i].style;elStyle.webkitTransitionDuration=elStyle.MsTransitionDuration=elStyle.msTransitionDuration=elStyle.MozTransitionDuration=elStyle.OTransitionDuration=elStyle.transitionDuration=duration}return<sp/>this},on:function(eventName,targetSelector,listener,capture){function<sp/>handleLiveEvent(e){var<sp/>target=e.target;if($(target).is(targetSelector))listener.call(target,e);else<sp/>for(var<sp/>parents=$(target).parents(),k=0;k&lt;parents.length;k++)$(parents[k]).is(targetSelector)&amp;&amp;listener.call(parents[k],e)}var<sp/>i,j,events=eventName.split(&quot;<sp/>&quot;);for(i=0;i&lt;this.length;i++)if(&quot;function&quot;==typeof<sp/>targetSelector||targetSelector===!1)for(&quot;function&quot;==typeof<sp/>targetSelector&amp;&amp;(listener=arguments[1],capture=arguments[2]||!1),j=0;j&lt;events.length;j++)this[i].addEventListener(events[j],listener,capture);else<sp/>for(j=0;j&lt;events.length;j++)this[i].dom7LiveListeners||(this[i].dom7LiveListeners=[]),this[i].dom7LiveListeners.push({listener:listener,liveListener:handleLiveEvent}),this[i].addEventListener(events[j],handleLiveEvent,capture);return<sp/>this},off:function(eventName,targetSelector,listener,capture){for(var<sp/>events=eventName.split(&quot;<sp/>&quot;),i=0;i&lt;events.length;i++)for(var<sp/>j=0;j&lt;this.length;j++)if(&quot;function&quot;==typeof<sp/>targetSelector||targetSelector===!1)&quot;function&quot;==typeof<sp/>targetSelector&amp;&amp;(listener=arguments[1],capture=arguments[2]||!1),this[j].removeEventListener(events[i],listener,capture);else<sp/>if(this[j].dom7LiveListeners)for(var<sp/>k=0;k&lt;this[j].dom7LiveListeners.length;k++)this[j].dom7LiveListeners[k].listener===listener&amp;&amp;this[j].removeEventListener(events[i],this[j].dom7LiveListeners[k].liveListener,capture);return<sp/>this},once:function(eventName,targetSelector,listener,capture){function<sp/>proxy(e){listener(e),dom.off(eventName,targetSelector,proxy,capture)}var<sp/>dom=this;&quot;function&quot;==typeof<sp/>targetSelector&amp;&amp;(targetSelector=!1,listener=arguments[1],capture=arguments[2]),dom.on(eventName,targetSelector,proxy,capture)},trigger:function(eventName,eventData){for(var<sp/>i=0;i&lt;this.length;i++){var<sp/>evt;try{evt=new<sp/>window.CustomEvent(eventName,{detail:eventData,bubbles:!0,cancelable:!0})}catch(e){evt=document.createEvent(&quot;Event&quot;),evt.initEvent(eventName,!0,!0),evt.detail=eventData}this[i].dispatchEvent(evt)}return<sp/>this},transitionEnd:function(callback){function<sp/>fireCallBack(e){if(e.target===this)for(callback.call(this,e),i=0;i&lt;events.length;i++)dom.off(events[i],fireCallBack)}var<sp/>i,events=[&quot;webkitTransitionEnd&quot;,&quot;transitionend&quot;,&quot;oTransitionEnd&quot;,&quot;MSTransitionEnd&quot;,&quot;msTransitionEnd&quot;],dom=this;if(callback)for(i=0;i&lt;events.length;i++)dom.on(events[i],fireCallBack);return<sp/>this},width:function(){return<sp/>this[0]===window?window.innerWidth:this.length&gt;0?parseFloat(this.css(&quot;width&quot;)):null},outerWidth:function(includeMargins){return<sp/>this.length&gt;0?includeMargins?this[0].offsetWidth+parseFloat(this.css(&quot;margin-right&quot;))+parseFloat(this.css(&quot;margin-left&quot;)):this[0].offsetWidth:null},height:function(){return<sp/>this[0]===window?window.innerHeight:this.length&gt;0?parseFloat(this.css(&quot;height&quot;)):null},outerHeight:function(includeMargins){return<sp/>this.length&gt;0?includeMargins?this[0].offsetHeight+parseFloat(this.css(&quot;margin-top&quot;))+parseFloat(this.css(&quot;margin-bottom&quot;)):this[0].offsetHeight:null},offset:function(){if(this.length&gt;0){var<sp/>el=this[0],box=el.getBoundingClientRect(),body=document.body,clientTop=el.clientTop||body.clientTop||0,clientLeft=el.clientLeft||body.clientLeft||0,scrollTop=window.pageYOffset||el.scrollTop,scrollLeft=window.pageXOffset||el.scrollLeft;return{top:box.top+scrollTop-clientTop,left:box.left+scrollLeft-clientLeft}}return<sp/>null},css:function(props,value){var<sp/>i;if(1===arguments.length){if(&quot;string&quot;!=typeof<sp/>props){for(i=0;i&lt;this.length;i++)for(var<sp/>prop<sp/>in<sp/>props)this[i].style[prop]=props[prop];return<sp/>this}if(this[0])return<sp/>window.getComputedStyle(this[0],null).getPropertyValue(props)}if(2===arguments.length&amp;&amp;&quot;string&quot;==typeof<sp/>props){for(i=0;i&lt;this.length;i++)this[i].style[props]=value;return<sp/>this}return<sp/>this},each:function(callback){for(var<sp/>i=0;i&lt;this.length;i++)callback.call(this[i],i,this[i]);return<sp/>this},html:function(html){if(&quot;undefined&quot;==typeof<sp/>html)return<sp/>this[0]?this[0].innerHTML:void<sp/>0;for(var<sp/>i=0;i&lt;this.length;i++)this[i].innerHTML=html;return<sp/>this},is:function(selector){if(!this[0])return!1;var<sp/>compareWith,i;if(&quot;string&quot;==typeof<sp/>selector){var<sp/>el=this[0];if(el===document)return<sp/>selector===document;if(el===window)return<sp/>selector===window;if(el.matches)return<sp/>el.matches(selector);if(el.webkitMatchesSelector)return<sp/>el.webkitMatchesSelector(selector);if(el.mozMatchesSelector)return<sp/>el.mozMatchesSelector(selector);if(el.msMatchesSelector)return<sp/>el.msMatchesSelector(selector);for(compareWith=$(selector),i=0;i&lt;compareWith.length;i++)if(compareWith[i]===this[0])return!0;return!1}if(selector===document)return<sp/>this[0]===document;if(selector===window)return<sp/>this[0]===window;if(selector.nodeType||selector<sp/>instanceof<sp/>Dom7){for(compareWith=selector.nodeType?[selector]:selector,i=0;i&lt;compareWith.length;i++)if(compareWith[i]===this[0])return!0;return!1}return!1},index:function(){if(this[0]){for(var<sp/>child=this[0],i=0;null!==(child=child.previousSibling);)1===child.nodeType&amp;&amp;i++;return<sp/>i}return<sp/>void<sp/>0},eq:function(index){if(&quot;undefined&quot;==typeof<sp/>index)return<sp/>this;var<sp/>returnIndex,length=this.length;return<sp/>index&gt;length-1?new<sp/>Dom7([]):0&gt;index?(returnIndex=length+index,new<sp/>Dom7(0&gt;returnIndex?[]:[this[returnIndex]])):new<sp/>Dom7([this[index]])},append:function(newChild){var<sp/>i,j;for(i=0;i&lt;this.length;i++)if(&quot;string&quot;==typeof<sp/>newChild){var<sp/>tempDiv=document.createElement(&quot;div&quot;);for(tempDiv.innerHTML=newChild;tempDiv.firstChild;)this[i].appendChild(tempDiv.firstChild)}else<sp/>if(newChild<sp/>instanceof<sp/>Dom7)for(j=0;j&lt;newChild.length;j++)this[i].appendChild(newChild[j]);else<sp/>this[i].appendChild(newChild);return<sp/>this},prepend:function(newChild){var<sp/>i,j;for(i=0;i&lt;this.length;i++)if(&quot;string&quot;==typeof<sp/>newChild){var<sp/>tempDiv=document.createElement(&quot;div&quot;);for(tempDiv.innerHTML=newChild,j=tempDiv.childNodes.length-1;j&gt;=0;j--)this[i].insertBefore(tempDiv.childNodes[j],this[i].childNodes[0])}else<sp/>if(newChild<sp/>instanceof<sp/>Dom7)for(j=0;j&lt;newChild.length;j++)this[i].insertBefore(newChild[j],this[i].childNodes[0]);else<sp/>this[i].insertBefore(newChild,this[i].childNodes[0]);return<sp/>this},insertBefore:function(selector){for(var<sp/>before=$(selector),i=0;i&lt;this.length;i++)if(1===before.length)before[0].parentNode.insertBefore(this[i],before[0]);else<sp/>if(before.length&gt;1)for(var<sp/>j=0;j&lt;before.length;j++)before[j].parentNode.insertBefore(this[i].cloneNode(!0),before[j])},insertAfter:function(selector){for(var<sp/>after=$(selector),i=0;i&lt;this.length;i++)if(1===after.length)after[0].parentNode.insertBefore(this[i],after[0].nextSibling);else<sp/>if(after.length&gt;1)for(var<sp/>j=0;j&lt;after.length;j++)after[j].parentNode.insertBefore(this[i].cloneNode(!0),after[j].nextSibling)},next:function(selector){return<sp/>new<sp/>Dom7(this.length&gt;0?selector?this[0].nextElementSibling&amp;&amp;$(this[0].nextElementSibling).is(selector)?[this[0].nextElementSibling]:[]:this[0].nextElementSibling?[this[0].nextElementSibling]:[]:[])},nextAll:function(selector){var<sp/>nextEls=[],el=this[0];if(!el)return<sp/>new<sp/>Dom7([]);for(;el.nextElementSibling;){var<sp/>next=el.nextElementSibling;selector?$(next).is(selector)&amp;&amp;nextEls.push(next):nextEls.push(next),el=next}return<sp/>new<sp/>Dom7(nextEls)},prev:function(selector){return<sp/>new<sp/>Dom7(this.length&gt;0?selector?this[0].previousElementSibling&amp;&amp;$(this[0].previousElementSibling).is(selector)?[this[0].previousElementSibling]:[]:this[0].previousElementSibling?[this[0].previousElementSibling]:[]:[])},prevAll:function(selector){var<sp/>prevEls=[],el=this[0];if(!el)return<sp/>new<sp/>Dom7([]);for(;el.previousElementSibling;){var<sp/>prev=el.previousElementSibling;selector?$(prev).is(selector)&amp;&amp;prevEls.push(prev):prevEls.push(prev),el=prev}return<sp/>new<sp/>Dom7(prevEls)},parent:function(selector){for(var<sp/>parents=[],i=0;i&lt;this.length;i++)selector?$(this[i].parentNode).is(selector)&amp;&amp;parents.push(this[i].parentNode):parents.push(this[i].parentNode);return<sp/>$($.unique(parents))},parents:function(selector){for(var<sp/>parents=[],i=0;i&lt;this.length;i++)for(var<sp/>parent=this[i].parentNode;parent;)selector?$(parent).is(selector)&amp;&amp;parents.push(parent):parents.push(parent),parent=parent.parentNode;return<sp/>$($.unique(parents))},find:function(selector){for(var<sp/>foundElements=[],i=0;i&lt;this.length;i++)for(var<sp/>found=this[i].querySelectorAll(selector),j=0;j&lt;found.length;j++)foundElements.push(found[j]);return<sp/>new<sp/>Dom7(foundElements)},children:function(selector){for(var<sp/>children=[],i=0;i&lt;this.length;i++)for(var<sp/>childNodes=this[i].childNodes,j=0;j&lt;childNodes.length;j++)selector?1===childNodes[j].nodeType&amp;&amp;$(childNodes[j]).is(selector)&amp;&amp;children.push(childNodes[j]):1===childNodes[j].nodeType&amp;&amp;children.push(childNodes[j]);return<sp/>new<sp/>Dom7($.unique(children))},remove:function(){for(var<sp/>i=0;i&lt;this.length;i++)this[i].parentNode&amp;&amp;this[i].parentNode.removeChild(this[i]);return<sp/>this},add:function(){var<sp/>i,j,dom=this;for(i=0;i&lt;arguments.length;i++){var<sp/>toAdd=$(arguments[i]);for(j=0;j&lt;toAdd.length;j++)dom[dom.length]=toAdd[j],dom.length++}return<sp/>dom}},$.fn=Dom7.prototype,$.unique=function(arr){for(var<sp/>unique=[],i=0;i&lt;arr.length;i++)-1===unique.indexOf(arr[i])&amp;&amp;unique.push(arr[i]);return<sp/>unique},$}()),swiperDomPlugins=[&quot;jQuery&quot;,&quot;Zepto&quot;,&quot;Dom7&quot;],i=0;i&lt;swiperDomPlugins.length;i++)window[swiperDomPlugins[i]]&amp;&amp;addLibraryPlugin(window[swiperDomPlugins[i]]);var<sp/>domLib;domLib=&quot;undefined&quot;==typeof<sp/>Dom7?window.Dom7||window.Zepto||window.jQuery:Dom7,domLib&amp;&amp;(&quot;transitionEnd&quot;in<sp/>domLib.fn||(domLib.fn.transitionEnd=function(callback){function<sp/>fireCallBack(e){if(e.target===this)for(callback.call(this,e),i=0;i&lt;events.length;i++)dom.off(events[i],fireCallBack)}var<sp/>i,events=[&quot;webkitTransitionEnd&quot;,&quot;transitionend&quot;,&quot;oTransitionEnd&quot;,&quot;MSTransitionEnd&quot;,&quot;msTransitionEnd&quot;],dom=this;if(callback)for(i=0;i&lt;events.length;i++)dom.on(events[i],fireCallBack);return<sp/>this}),&quot;transform&quot;in<sp/>domLib.fn||(domLib.fn.transform=function(transform){for(var<sp/>i=0;i&lt;this.length;i++){var<sp/>elStyle=this[i].style;elStyle.webkitTransform=elStyle.MsTransform=elStyle.msTransform=elStyle.MozTransform=elStyle.OTransform=elStyle.transform=transform}return<sp/>this}),&quot;transition&quot;in<sp/>domLib.fn||(domLib.fn.transition=function(duration){&quot;string&quot;!=typeof<sp/>duration&amp;&amp;(duration+=&quot;ms&quot;);for(var<sp/>i=0;i&lt;this.length;i++){var<sp/>elStyle=this[i].style;elStyle.webkitTransitionDuration=elStyle.MsTransitionDuration=elStyle.msTransitionDuration=elStyle.MozTransitionDuration=elStyle.OTransitionDuration=elStyle.transitionDuration=duration}return<sp/>this})),window.Swiper=Swiper}(),&quot;undefined&quot;!=typeof<sp/>module?module.exports=window.Swiper:&quot;function&quot;==typeof<sp/>define&amp;&amp;define.amd&amp;&amp;define([],function(){&quot;use<sp/>strict&quot;;return<sp/>window.Swiper});var<sp/>Base64Binary={_keyStr:&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;,decodeArrayBuffer:function(a){var<sp/>b=a.length/4*3,c=new<sp/>ArrayBuffer(b);return<sp/>this.decode(a,c),c},decode:function(a,b){var<sp/>c=this._keyStr.indexOf(a.charAt(a.length-1)),d=this._keyStr.indexOf(a.charAt(a.length-2)),e=a.length/4*3;64==c&amp;&amp;e--,64==d&amp;&amp;e--;var<sp/>f,g,h,i,j,k,l,m,n=0,o=0;for(f=new<sp/>Uint8Array(b?b:e),a=a.replace(/[^A-Za-z0-9\+\/\=]/g,&quot;&quot;),n=0;e&gt;n;n+=3)j=this._keyStr.indexOf(a.charAt(o++)),k=this._keyStr.indexOf(a.charAt(o++)),l=this._keyStr.indexOf(a.charAt(o++)),m=this._keyStr.indexOf(a.charAt(o++)),g=j&lt;&lt;2|k&gt;&gt;4,h=(15&amp;k)&lt;&lt;4|l&gt;&gt;2,i=(3&amp;l)&lt;&lt;6|m,f[n]=g,64!=l&amp;&amp;(f[n+1]=h),64!=m&amp;&amp;(f[n+2]=i);return<sp/>f}},JSONP=function(){function<sp/>a(a,b){var<sp/>c=document.createElement(&quot;script&quot;),d=!1;c.src=a,c.async=!0;var<sp/>f=b||h.error;&quot;function&quot;==typeof<sp/>f&amp;&amp;(c.onerror=function(b){f({url:a,event:b})}),c.onload=c.onreadystatechange=function(){d||this.readyState&amp;&amp;&quot;loaded&quot;!==this.readyState&amp;&amp;&quot;complete&quot;!==this.readyState||(d=!0,c.onload=c.onreadystatechange=null,c&amp;&amp;c.parentNode&amp;&amp;c.parentNode.removeChild(c))},e||(e=document.getElementsByTagName(&quot;head&quot;)[0]),e.appendChild(c)}function<sp/>b(a){return<sp/>encodeURIComponent(a)}function<sp/>c(c,d,e,i){var<sp/>j,k=-1===(c||&quot;&quot;).indexOf(&quot;?&quot;)?&quot;?&quot;:&quot;&amp;&quot;;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">i=i||h.callbackName||&quot;callback&quot;;var<sp/>l=i+&quot;_json&quot;+<sp/>++f;d=d||{};for(j<sp/>in<sp/>d)d.hasOwnProperty(j)&amp;&amp;(k+=b(j)+&quot;=&quot;+b(d[j])+&quot;&amp;&quot;);return<sp/>g[l]=function(a){e(a);try{delete<sp/>g[l]}catch(b){}g[l]=null},a(c+k+i+&quot;=&quot;+l),l}function<sp/>d(a){h=a}var<sp/>e,f=0,g=this,h={};return{get:c,init:d}}();void<sp/>0===XMLHttpRequest.prototype.sendAsBinary&amp;&amp;(XMLHttpRequest.prototype.sendAsBinary=function(a){var<sp/>b=Array.prototype.map.call(a,function(a){return<sp/>255&amp;a.charCodeAt(0)});this.send(new<sp/>Uint8Array(b).buffer)});var<sp/>SERVER_URL=&quot;http://lab.layerframe.com/postcard/scripts/&quot;;OrderedMap.prototype.assert=function(a){if(!(a<sp/>in<sp/>this.map))throw<sp/>new<sp/>Error(&apos;</highlight><highlight class="normal">key:<sp/></highlight><highlight class="stringliteral">&quot;&apos;+a+&apos;&quot;</highlight><highlight class="normal"><sp/>does<sp/>not<sp/>exist</highlight><highlight class="stringliteral">&apos;)},OrderedMap.prototype.length=function(){return<sp/>this._karray.length},OrderedMap.prototype.findFirst=function(a){var<sp/>b=0;for(b;b&lt;this._zarray.length;b++)if(this._zarray[b]&gt;a)return<sp/>b;return<sp/>b},OrderedMap.prototype.add=function(a,b,c){if(this.exists(a))throw<sp/>new<sp/>Error(&quot;key<sp/>already<sp/>exists&quot;);if(0&gt;b)throw<sp/>new<sp/>Error(&quot;z-index<sp/>can&apos;</highlight><highlight class="normal">t<sp/>be<sp/>less<sp/>than<sp/>0</highlight><highlight class="stringliteral">&quot;);var<sp/>d=this.findFirst(b);this._karray.splice(d,0,a),this._zarray.splice(d,0,b),this.map[a]=c},OrderedMap.prototype.remove=function(a){this.assert(a);var<sp/>b=this._karray.indexOf(a);this._karray.splice(b,1),this._zarray.splice(b,1),delete<sp/>this.map[a]},OrderedMap.prototype.exists=function(a){return<sp/>a<sp/>in<sp/>this.map?!0:!1},OrderedMap.prototype.get=function(a){return<sp/>this.assert(a),this.map[a]},OrderedMap.prototype.getZindex=function(a){this.assert(a);var<sp/>b=this._karray.indexOf(a);return<sp/>this._zarray[b]},OrderedMap.prototype.updateValue=function(a,b){this.assert(a),this.map[a]=b},OrderedMap.prototype.changeOrder=function(a,b){if(0&gt;b)throw<sp/>new<sp/>Error(&quot;</highlight><highlight class="normal">z-index<sp/>can</highlight><highlight class="stringliteral">&apos;t<sp/>be<sp/>less<sp/>than<sp/>0&quot;);var<sp/>c=this.get(a);this.remove(a),this.add(a,b,c)},OrderedMap.prototype.toStart=function(a){var<sp/>b=this.get(a);this.remove(a),this._karray.splice(0,0,a),this._zarray.splice(0,0,0),this.map[a]=b},OrderedMap.prototype.toEnd=function(a){var<sp/>b=this._zarray[this._zarray.length-1];this.changeOrder(a,b)},OrderedMap.prototype.forEach=function(a){for(var<sp/>b,c,d,e=0;e&lt;this._karray.length;e++)b=this._karray[e],d=this._zarray[e],c=this.map[b],a(b,d,c)},OrderedMap.prototype.filter=function(a){var<sp/>b=[];return<sp/>this.forEach(function(c,d,e){a.apply(null,[c,d,e])&amp;&amp;b.push(e)}),b},PostcardObject.prototype.draw=function(){this.ctx.save(),this.ctx.fillStyle=this.opts.fill,this.globalAlpha=this.opts.opacity,this.ctx.fillRect(this.x,this.y,this.w,this.h),this.ctx.restore()},PostcardObject.prototype.contains=function(a,b){return<sp/>this.x&lt;=a&amp;&amp;this.x+this.w&gt;=a&amp;&amp;this.y&lt;=b&amp;&amp;this.y+this.h&gt;=b},PostcardObject.prototype.update=function(a){this.opts=_extend({},this.opts,a),this.x=parseInt(this.opts.x,10),this.y=parseInt(this.opts.y,10),this.w=parseInt(this.opts.w,10),this.h=parseInt(this.opts.h,10),_triggerEvent(this.ctx.canvas,&quot;forcerender&quot;)},PostcardObject.prototype.show=function(){this.opts.opacity=1,_triggerEvent(this.ctx.canvas,&quot;forcerender&quot;)},PostcardObject.prototype.hide=function(){this.opts.opacity=0,_triggerEvent(this.ctx.canvas,&quot;forcerender&quot;)},PostcardImageObject.prototype=new<sp/>PostcardObject,PostcardImageObject.prototype.constructor=PostcardImageObject,PostcardImageObject.prototype.draw=function(){if(this.imageloaded){var<sp/>a=this.x,b=this.y;this.ctx.save(),this.opts.rotation&gt;0&amp;&amp;(this.ctx.translate(this.x+this.w/2,this.y+this.h/2),this.ctx.rotate(this.opts.rotation*Math.PI/180),a=-this.w/2,b=-this.h/2),this.ctx.globalAlpha=this.opts.opacity,this.opts.crop?this.ctx.drawImage(this.imgElm,cropX,cropY,cropW,cropH,a,b,this.w,this.h):this.ctx.drawImage(this.imgElm,a,b,this.w,this.h),this.ctx.restore()}},PostcardImageObject.prototype.revert=function(){if(!this.opts.keepOriginal)throw<sp/>new<sp/>Error(&quot;original<sp/>image<sp/>wasn&apos;</highlight><highlight class="normal">t<sp/>preserved</highlight><highlight class="stringliteral">&quot;);this._ctx.putImageData(this.origImgData,0,0),this.imgElm.src=this._canvas.toDataURL()},PostcardImageObject.prototype.getOriginalImageData=function(){if(this.imageloaded&amp;&amp;this.opts.keepOriginal){var<sp/>a=this._ctx.createImageData(this.origImgData.width,this.origImgData.height);return<sp/>a.data.set(this.origImgData.data),a}throw<sp/>new<sp/>Error(&quot;</highlight><highlight class="normal">image<sp/>not<sp/>loaded/not<sp/>saving<sp/>original</highlight><highlight class="stringliteral">&quot;)},PostcardImageObject.prototype.getCurrentImageData=function(){if(this.imageloaded)return<sp/>this._ctx.getImageData(0,0,this._canvas.width,this._canvas.height);throw<sp/>new<sp/>Error(&quot;</highlight><highlight class="normal">image<sp/>not<sp/>loaded</highlight><highlight class="stringliteral">&quot;)},PostcardImageObject.prototype.setImageData=function(a){this._ctx.putImageData(a,0,0),this.imgElm.src=this._canvas.toDataURL()},PostcardImageObject.prototype.getRotation=function(){return<sp/>this.opts.rotation},PostcardImageObject.prototype.setRotation=function(a){this.opts.rotation=a%360,_triggerEvent(this.ctx.canvas,&quot;</highlight><highlight class="normal">forcerender</highlight><highlight class="stringliteral">&quot;)},PostcardImageObject.prototype.onImageLoaded=function(a){this.userImageLoaded=a},PostcardTextObject.prototype=new<sp/>PostcardObject,PostcardTextObject.prototype.constructor=PostcardTextObject,PostcardTextObject.prototype.draw=function(){this.ctx.save(),this.ctx.fillStyle=this.opts.fill,this.ctx.font=this.getFont(),this.ctx.fillText(this.text,this.x,this.y),this.ctx.restore()},PostcardTextObject.prototype.update=function(a){this.opts=_extend({},this.opts,a),this.x=parseInt(this.opts.x,10),this.y=parseInt(this.opts.y,10),this.w=this.opts.w=this._ctx.measureText(this.text).width,this.h=parseInt(this.opts.h,10)},PostcardTextObject.prototype.contains=function(a,b){return<sp/>this.x&lt;=a&amp;&amp;this.x+this.w&gt;=a&amp;&amp;this.y&gt;=b&amp;&amp;this.y-this.h&lt;=b},PostcardTextObject.prototype.changeText=function(a){this.text=a,this.w=this.opts.w=this._ctx.measureText(this.text).width,_triggerEvent(this.ctx.canvas,&quot;</highlight><highlight class="normal">forcerender</highlight><highlight class="stringliteral">&quot;)},PostcardTextObject.prototype.getFont=function(){return<sp/>this.opts.style+&quot;</highlight><highlight class="normal"><sp/>normal<sp/></highlight><highlight class="stringliteral">&quot;+this.opts.weight+&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+this.opts.size+&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;+this.opts.family},PostcardTextObject.prototype.setFont=function(a){var<sp/>b=a.split(&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;,4),c=a.slice(a.indexOf(&quot;</highlight><highlight class="normal">px</highlight><highlight class="stringliteral">&quot;)+3);this.opts.fill=b[0],this.opts.style=b[1],this.opts.weight=b[2],this.opts.size=b[3],this.opts.family=c,this._ctx.font=this.getFont(),this.w=this.opts.w=this._ctx.measureText(this.text).width,this.h=this.opts.h=parseInt(this.opts.size,10),_triggerEvent(this.ctx.canvas,&quot;</highlight><highlight class="normal">forcerender</highlight><highlight class="stringliteral">&quot;)},Postcard.prototype.clear=function(){this.ctx.clearRect(0,0,this.width,this.height)},Postcard.prototype.triggerRefresh=function(){this.valid=!1},Postcard.prototype.render=function(){if(!this.valid){if(this.clear(),this.renderingStack.forEach(function(a,b,c){c.draw()}),null!=this.selection){this.ctx.strokeStyle=&quot;</highlight><highlight class="normal">#CC0000</highlight><highlight class="stringliteral">&quot;,this.ctx.lineWidth=&quot;</highlight><highlight class="normal">2</highlight><highlight class="stringliteral">&quot;;var<sp/>a=this.selection;&quot;</highlight><highlight class="normal">text</highlight><highlight class="stringliteral">&quot;==a.type?this.ctx.strokeRect(a.x,a.y-a.h,a.w,a.h):this.ctx.strokeRect(a.x,a.y,a.w,a.h)}this.valid=!0}},Postcard.prototype.get=function(a){return<sp/>this.renderingStack.get(a)},Postcard.prototype.remove=function(a){return<sp/>this.renderingStack.remove(a)},Postcard.prototype.getSome=function(a){return<sp/>this.renderingStack.filter(a)},Postcard.prototype.getSelection=function(){return<sp/>this.selection},Postcard.prototype.addObject=function(a,b,c){var<sp/>d=a,e=this.startingZindex,f={};arguments.length&gt;2?(e=arguments[1],f=arguments[2]):2==arguments.length&amp;&amp;(&quot;</highlight><highlight class="normal">number</highlight><highlight class="stringliteral">&quot;==typeof<sp/>arguments[1]?e=arguments[1]:f=arguments[1]);var<sp/>g=new<sp/>PostcardObject(&quot;</highlight><highlight class="normal">shape</highlight><highlight class="stringliteral">&quot;,this.ctx,f);return<sp/>this.renderingStack.add(d,e,g),g},Postcard.prototype.addImage=function(a,b,c,d){var<sp/>e=a,f=b,g=this.startingZindex,h={};if(&quot;</highlight><highlight class="keywordtype">string</highlight><highlight class="stringliteral">&quot;!=typeof<sp/>arguments[1])throw<sp/>new<sp/>Error(&quot;</highlight><highlight class="normal">no<sp/>url<sp/>specified?<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;+e);arguments.length&gt;3?(g=arguments[2],h=arguments[3]):3===arguments.length&amp;&amp;(&quot;</highlight><highlight class="normal">number</highlight><highlight class="stringliteral">&quot;==typeof<sp/>arguments[2]?g=arguments[2]:h=arguments[2]);var<sp/>i=new<sp/>PostcardImageObject(f,this.ctx,h);return<sp/>this.renderingStack.add(e,g,i),i},Postcard.prototype.addText=function(a,b,c,d){var<sp/>e=a,f=b,g=this.startingZindex,h={family:this.opts.fontFamily,size:this.opts.fontSize,fill:this.opts.fontColor,style:this.opts.fontStyle,weight:this.opts.fontWeight};if(&quot;</highlight><highlight class="keywordtype">string</highlight><highlight class="stringliteral">&quot;!=typeof<sp/>arguments[1])throw<sp/>new<sp/>Error(&quot;</highlight><highlight class="normal">no<sp/>text<sp/>specified?<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;+e);arguments.length&gt;3?(g=arguments[2],h=_extend({},h,arguments[3])):3===arguments.length&amp;&amp;(&quot;</highlight><highlight class="normal">number</highlight><highlight class="stringliteral">&quot;==typeof<sp/>arguments[2]?g=arguments[2]:h=h=_extend({},h,arguments[2]));var<sp/>i=new<sp/>PostcardTextObject(f,this.ctx,h);return<sp/>this.renderingStack.add(e,g,i),i},Postcard.prototype.save=function(a){(this.browser.isSafari||this.browser.isIE)&amp;&amp;(alert(&quot;</highlight><highlight class="normal">opening<sp/>a<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>tab,<sp/>just<sp/>gotta<sp/>[right<sp/>click<sp/>&gt;<sp/>save]<sp/>the<sp/>image.<sp/>not<sp/>ideal.</highlight><highlight class="stringliteral">&quot;),a.target.setAttribute(&quot;</highlight><highlight class="normal">target</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">_blank</highlight><highlight class="stringliteral">&quot;)),a.target.href=this.elm.toDataURL(),a.target.download=this.opts.filename},Postcard.prototype[&quot;</highlight><highlight class="normal">export</highlight><highlight class="stringliteral">&quot;]=function(){return<sp/>this.elm.toDataURL()},angular.module(&quot;</highlight><highlight class="normal">ash</highlight><highlight class="stringliteral">&quot;,[]).directive(&quot;</highlight><highlight class="normal">ngInfiniteScroll</highlight><highlight class="stringliteral">&quot;,[&quot;</highlight><highlight class="normal">$timeout</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Data</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">Resource</highlight><highlight class="stringliteral">&quot;,function($timeout,Data,Resource){return{restrict:&quot;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&quot;,scope:{options:&quot;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;,items:&quot;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;},link:function($scope,element){$scope.lastRemain=void<sp/>0,$scope.offset=0,$scope.inProcess=!1,$scope.options=angular.extend({limit:10,threshold:50,data:[]},$scope.options),$scope.hasItems=!0,$scope.options.resource||Array.isArray($scope.options.data)||($scope.options.data=[$scope.options.data]),$scope.strategy=$scope.options.resource?Resource:Data,$scope.strategy.addItems($scope),element.bind(&quot;</highlight><highlight class="normal">scroll</highlight><highlight class="stringliteral">&quot;,function(){var<sp/>remain=element[0].scrollHeight-(element[0].clientHeight+element[0].scrollTop);remain&lt;$scope.options.threshold&amp;&amp;(!$scope.lastRemain||remain-$scope.lastRemain&lt;0)&amp;&amp;$scope.hasItems&amp;&amp;!$scope.inProcess&amp;&amp;$scope.$apply(function(){$scope.strategy.addItems($scope)}),$scope.lastRemain=remain})}}}]),app.factory(&quot;</highlight><highlight class="normal">Data</highlight><highlight class="stringliteral">&quot;,function(){return{addItems:function($scope){$scope.inProcess=!0;var<sp/>from=$scope.offset*$scope.options.limit;if(from&lt;$scope.options.data.length){var<sp/>to=from+$scope.options.limit;to=to&gt;$scope.options.data.length?$scope.options.data.length:to;for(var<sp/>i=from;to&gt;i;i++)$scope.items=$scope.items.concat($scope.options.data[i]);$scope.offset++}else<sp/>$scope.hasItems=!1;$scope.inProcess=!1}}}),app.factory(&quot;</highlight><highlight class="normal">Resource</highlight><highlight class="stringliteral">&quot;,function(){return{addItems:function($scope){$scope.inProcess=!0,$scope.options.resource.query({offset:$scope.offset*$scope.options.limit,limit:$scope.options.limit},function(data){if(0==data.models.length)$scope.hasItems=!1;else<sp/>for(var<sp/>i=0;i&lt;data.models.length;i++)$scope.items=$scope.items.concat(data.models[i]);$scope.inProcess=!1})}}}),angular.module(&quot;</highlight><highlight class="normal">ngProgress.provider</highlight><highlight class="stringliteral">&quot;,[&quot;</highlight><highlight class="normal">ngProgress.directive</highlight><highlight class="stringliteral">&quot;]).provider(&quot;</highlight><highlight class="normal">ngProgress</highlight><highlight class="stringliteral">&quot;,function(){&quot;</highlight><highlight class="normal">use<sp/>strict</highlight><highlight class="stringliteral">&quot;;this.autoStyle=!0,this.count=0,this.height=&quot;</highlight><highlight class="normal">2px</highlight><highlight class="stringliteral">&quot;,this.color=&quot;</highlight><highlight class="normal">firebrick</highlight><highlight class="stringliteral">&quot;,this.$get=[&quot;</highlight><highlight class="normal">$document</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$window</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$compile</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$rootScope</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$timeout</highlight><highlight class="stringliteral">&quot;,function($document,$window,$compile,$rootScope,$timeout){var<sp/>count=this.count,height=this.height,color=this.color,$scope=$rootScope,parent=$document.find(&quot;</highlight><highlight class="normal">body</highlight><highlight class="stringliteral">&quot;)[0],progressbarEl=$compile(&quot;</highlight><highlight class="normal">&lt;ng-progress&gt;&lt;/ng-progress&gt;</highlight><highlight class="stringliteral">&quot;)($scope);parent.appendChild(progressbarEl[0]),$scope.count=count,void<sp/>0!==height&amp;&amp;progressbarEl.eq(0).children().css(&quot;</highlight><highlight class="normal">height</highlight><highlight class="stringliteral">&quot;,height),void<sp/>0!==color&amp;&amp;(progressbarEl.eq(0).children().css(&quot;</highlight><highlight class="normal">background-color</highlight><highlight class="stringliteral">&quot;,color),progressbarEl.eq(0).children().css(&quot;</highlight><highlight class="normal">color</highlight><highlight class="stringliteral">&quot;,color));var<sp/>animation,intervalCounterId=0;return{start:function(){this.show();var<sp/>self=this;clearInterval(intervalCounterId),intervalCounterId=setInterval(function(){if(isNaN(count))clearInterval(intervalCounterId),count=0,self.hide();else{var<sp/>remaining=100-count;count+=.15*Math.pow(1-Math.sqrt(remaining),2),self.updateCount(count)}},200)},updateCount:function(new_count){$scope.count=new_count,$scope.$$phase||$scope.$apply()},height:function(new_height){return<sp/>void<sp/>0!==new_height&amp;&amp;(height=new_height,$scope.height=height,$scope.$$phase||$scope.$apply()),height},color:function(new_color){return<sp/>void<sp/>0!==new_color&amp;&amp;(color=new_color,$scope.color=color,$scope.$$phase||$scope.$apply()),color},hide:function(){progressbarEl.children().css(&quot;</highlight><highlight class="normal">opacity</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">0</highlight><highlight class="stringliteral">&quot;);var<sp/>self=this;self.animate(function(){progressbarEl.children().css(&quot;</highlight><highlight class="normal">width</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">0%</highlight><highlight class="stringliteral">&quot;),self.animate(function(){self.show()},500)},500)},show:function(){var<sp/>self=this;self.animate(function(){progressbarEl.children().css(&quot;</highlight><highlight class="normal">opacity</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">1</highlight><highlight class="stringliteral">&quot;)},100)},animate:function(fn,time){animation&amp;&amp;$timeout.cancel(animation),animation=$timeout(fn,time)},status:function(){return<sp/>count},stop:function(){clearInterval(intervalCounterId)},set:function(new_count){return<sp/>this.show(),this.updateCount(new_count),count=new_count,clearInterval(intervalCounterId),count},css:function(args){return<sp/>progressbarEl.children().css(args)},reset:function(){return<sp/>clearInterval(intervalCounterId),count=0,this.updateCount(count),0},complete:function(){count=100,this.updateCount(count);var<sp/>self=this;return<sp/>clearInterval(intervalCounterId),$timeout(function(){self.hide(),$timeout(function(){count=0,self.updateCount(count)},500)},1e3),count},setParent:function(newParent){if(null===newParent||void<sp/>0===newParent)throw<sp/>new<sp/>Error(&quot;</highlight><highlight class="normal">Provide<sp/>a<sp/>valid<sp/>parent<sp/>of<sp/>type<sp/>HTMLElement</highlight><highlight class="stringliteral">&quot;);null!==parent&amp;&amp;void<sp/>0!==parent&amp;&amp;parent.removeChild(progressbarEl[0]),parent=newParent,parent.appendChild(progressbarEl[0])},getDomElement:function(){return<sp/>progressbarEl}}}],this.setColor=function(color){return<sp/>void<sp/>0!==color&amp;&amp;(this.color=color),this.color},this.setHeight=function(height){return<sp/>void<sp/>0!==height&amp;&amp;(this.height=height),this.height}}),angular.module(&quot;</highlight><highlight class="normal">ngProgress.directive</highlight><highlight class="stringliteral">&quot;,[]).directive(&quot;</highlight><highlight class="normal">ngProgress</highlight><highlight class="stringliteral">&quot;,[&quot;</highlight><highlight class="normal">$window</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">$rootScope</highlight><highlight class="stringliteral">&quot;,function($window,$rootScope){var<sp/>directiveObj={replace:!0,restrict:&quot;</highlight><highlight class="normal">E</highlight><highlight class="stringliteral">&quot;,link:function($scope,$element,$attrs,$controller){$rootScope.$watch(&quot;</highlight><highlight class="normal">count</highlight><highlight class="stringliteral">&quot;,function(newVal){(void<sp/>0!==newVal||null!==newVal)&amp;&amp;($scope.counter=newVal,$element.eq(0).children().css(&quot;</highlight><highlight class="normal">width</highlight><highlight class="stringliteral">&quot;,newVal+&quot;</highlight><highlight class="normal">%</highlight><highlight class="stringliteral">&quot;))}),$rootScope.$watch(&quot;</highlight><highlight class="normal">color</highlight><highlight class="stringliteral">&quot;,function(newVal){(void<sp/>0!==newVal||null!==newVal)&amp;&amp;($scope.color=newVal,$element.eq(0).children().css(&quot;</highlight><highlight class="normal">background-color</highlight><highlight class="stringliteral">&quot;,newVal),$element.eq(0).children().css(&quot;</highlight><highlight class="normal">color</highlight><highlight class="stringliteral">&quot;,newVal))}),$rootScope.$watch(&quot;</highlight><highlight class="normal">height</highlight><highlight class="stringliteral">&quot;,function(newVal){(void<sp/>0!==newVal||null!==newVal)&amp;&amp;($scope.height=newVal,$element.eq(0).children().css(&quot;</highlight><highlight class="normal">height</highlight><highlight class="stringliteral">&quot;,newVal))})},template:&apos;&lt;div<sp/>id=&quot;</highlight><highlight class="normal">ngProgress-container</highlight><highlight class="stringliteral">&quot;&gt;&lt;div<sp/>id=&quot;</highlight><highlight class="normal">ngProgress</highlight><highlight class="stringliteral">&quot;&gt;&lt;/div&gt;&lt;/div&gt;&apos;};return<sp/>directiveObj}]),angular.module(&quot;</highlight><highlight class="normal">ngProgress</highlight><highlight class="stringliteral">&quot;,[&quot;</highlight><highlight class="normal">ngProgress.directive</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">ngProgress.provider</highlight><highlight class="stringliteral">&quot;]);</highlight></codeline>
    </programlisting>
    <location file="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/scripts/vendor.js"/>
  </compounddef>
</doxygen>
