<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="jasmine-html_8js" kind="file" language="Javascript">
    <compoundname>jasmine-html.js</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="jasmine-html_8js_1a1c030cd108cb70e97a84387285e56f19" prot="public" static="no" mutable="no">
        <type>jasmineRequire</type>
        <definition>jasmineRequire html</definition>
        <argsstring></argsstring>
        <name>html</name>
        <initializer>= function(j$) {
  j$.ResultsNode = jasmineRequire.ResultsNode();
  j$.HtmlReporter = jasmineRequire.HtmlReporter(j$);
  j$.QueryString = jasmineRequire.QueryString();
  j$.HtmlSpecFilter = jasmineRequire.HtmlSpecFilter();
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/jasmine/lib/jasmine-2.3.4/jasmine-html.js" line="23" column="1" bodyfile="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/jasmine/lib/jasmine-2.3.4/jasmine-html.js" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Copyright<sp/>(c)<sp/>2008-2015<sp/>Pivotal<sp/>Labs</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="5"><highlight class="comment">a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="6"><highlight class="comment">&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="7"><highlight class="comment">without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="8"><highlight class="comment">distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment">permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="10"><highlight class="comment">the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="13"><highlight class="comment">included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="17"><highlight class="comment">MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="18"><highlight class="comment">NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE</highlight></codeline>
<codeline lineno="19"><highlight class="comment">LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION</highlight></codeline>
<codeline lineno="20"><highlight class="comment">OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="21"><highlight class="comment">WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">jasmineRequire.html<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(j$)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>j$.ResultsNode<sp/>=<sp/>jasmineRequire.ResultsNode();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>j$.HtmlReporter<sp/>=<sp/>jasmineRequire.HtmlReporter(j$);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>j$.QueryString<sp/>=<sp/>jasmineRequire.QueryString();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>j$.HtmlSpecFilter<sp/>=<sp/>jasmineRequire.HtmlSpecFilter();</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">jasmineRequire.HtmlReporter<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(j$)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>var<sp/>noopTimer<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>start:<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">()<sp/>{},</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>elapsed:<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>HtmlReporter(options)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>env<sp/>=<sp/>options.env<sp/>||<sp/>{},</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getContainer<sp/>=<sp/>options.getContainer,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>createElement<sp/>=<sp/>options.createElement,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>createTextNode<sp/>=<sp/>options.createTextNode,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>onRaiseExceptionsClick<sp/>=<sp/>options.onRaiseExceptionsClick<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">()<sp/>{},</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>onThrowExpectationsClick<sp/>=<sp/>options.onThrowExpectationsClick<sp/>||<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">()<sp/>{},</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addToExistingQueryString<sp/>=<sp/>options.addToExistingQueryString<sp/>||<sp/>defaultQueryString,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timer<sp/>=<sp/>options.timer<sp/>||<sp/>noopTimer,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>results<sp/>=<sp/>[],</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specsExecuted<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failureCount<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pendingSpecCount<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>htmlReporterMain,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symbols,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failedSuites<sp/>=<sp/>[];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>this.initialize<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clearPrior();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>htmlReporterMain<sp/>=<sp/>createDom(</highlight><highlight class="stringliteral">&apos;div&apos;</highlight><highlight class="normal">,<sp/>{className:<sp/></highlight><highlight class="stringliteral">&apos;jasmine_html-reporter&apos;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(</highlight><highlight class="stringliteral">&apos;div&apos;</highlight><highlight class="normal">,<sp/>{className:<sp/></highlight><highlight class="stringliteral">&apos;banner&apos;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>{className:<sp/></highlight><highlight class="stringliteral">&apos;title&apos;</highlight><highlight class="normal">,<sp/>href:<sp/></highlight><highlight class="stringliteral">&apos;http://jasmine.github.io/&apos;</highlight><highlight class="normal">,<sp/>target:<sp/></highlight><highlight class="stringliteral">&apos;_blank&apos;</highlight><highlight class="normal">}),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(</highlight><highlight class="stringliteral">&apos;span&apos;</highlight><highlight class="normal">,<sp/>{className:<sp/></highlight><highlight class="stringliteral">&apos;version&apos;</highlight><highlight class="normal">},<sp/>j$.version)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(</highlight><highlight class="stringliteral">&apos;ul&apos;</highlight><highlight class="normal">,<sp/>{className:<sp/></highlight><highlight class="stringliteral">&apos;symbol-summary&apos;</highlight><highlight class="normal">}),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(</highlight><highlight class="stringliteral">&apos;div&apos;</highlight><highlight class="normal">,<sp/>{className:<sp/></highlight><highlight class="stringliteral">&apos;alert&apos;</highlight><highlight class="normal">}),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(</highlight><highlight class="stringliteral">&apos;div&apos;</highlight><highlight class="normal">,<sp/>{className:<sp/></highlight><highlight class="stringliteral">&apos;results&apos;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(</highlight><highlight class="stringliteral">&apos;div&apos;</highlight><highlight class="normal">,<sp/>{className:<sp/></highlight><highlight class="stringliteral">&apos;failures&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getContainer().appendChild(htmlReporterMain);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symbols<sp/>=<sp/>find(</highlight><highlight class="stringliteral">&apos;.symbol-summary&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>totalSpecsDefined;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>this.jasmineStarted<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(options)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalSpecsDefined<sp/>=<sp/>options.totalSpecsDefined<sp/>||<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timer.start();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>summary<sp/>=<sp/>createDom(</highlight><highlight class="stringliteral">&apos;div&apos;</highlight><highlight class="normal">,<sp/>{className:<sp/></highlight><highlight class="stringliteral">&apos;summary&apos;</highlight><highlight class="normal">});</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>topResults<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>j$.ResultsNode({},<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>null),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentParent<sp/>=<sp/>topResults;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>this.suiteStarted<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(result)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentParent.addChild(result,<sp/></highlight><highlight class="stringliteral">&apos;suite&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentParent<sp/>=<sp/>currentParent.last();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>this.suiteDone<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(result)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.status<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;failed&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failedSuites.push(result);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentParent<sp/>==<sp/>topResults)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentParent<sp/>=<sp/>currentParent.parent;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>this.specStarted<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(result)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentParent.addChild(result,<sp/></highlight><highlight class="stringliteral">&apos;spec&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>failures<sp/>=<sp/>[];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>this.specDone<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(result)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(noExpectations(result)<sp/>&amp;&amp;<sp/>typeof<sp/>console<sp/>!==<sp/></highlight><highlight class="stringliteral">&apos;undefined&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>typeof<sp/>console.error<sp/>!==<sp/></highlight><highlight class="stringliteral">&apos;undefined&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console.error(</highlight><highlight class="stringliteral">&apos;Spec<sp/>\&apos;&apos;</highlight><highlight class="normal"><sp/>+<sp/>result.fullName<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\&apos;</highlight><highlight class="normal"><sp/>has<sp/>no<sp/>expectations.</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(result.status<sp/>!=<sp/>&apos;</highlight><highlight class="normal">disabled</highlight><highlight class="stringliteral">&apos;)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specsExecuted++;</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>symbols.appendChild(createDom(&apos;</highlight><highlight class="normal">li</highlight><highlight class="stringliteral">&apos;,<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>className:<sp/>noExpectations(result)<sp/>?<sp/>&apos;</highlight><highlight class="normal">empty</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>result.status,</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id:<sp/>&apos;</highlight><highlight class="normal">spec_</highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>result.id,</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title:<sp/>result.fullName</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(result.status<sp/>==<sp/>&apos;</highlight><highlight class="normal">failed</highlight><highlight class="stringliteral">&apos;)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failureCount++;</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>failure<sp/>=</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">div</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">spec-detail<sp/>failed</highlight><highlight class="stringliteral">&apos;},</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">div</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">description</highlight><highlight class="stringliteral">&apos;},</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&apos;,<sp/>{title:<sp/>result.fullName,<sp/>href:<sp/>specHref(result)},<sp/>result.fullName)</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">div</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">messages</highlight><highlight class="stringliteral">&apos;})</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>messages<sp/>=<sp/>failure.childNodes[1];</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(var<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>result.failedExpectations.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>expectation<sp/>=<sp/>result.failedExpectations[i];</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>messages.appendChild(createDom(&apos;</highlight><highlight class="normal">div</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">result-message</highlight><highlight class="stringliteral">&apos;},<sp/>expectation.message));</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>messages.appendChild(createDom(&apos;</highlight><highlight class="normal">div</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">stack-trace</highlight><highlight class="stringliteral">&apos;},<sp/>expectation.stack));</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failures.push(failure);</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(result.status<sp/>==<sp/>&apos;</highlight><highlight class="normal">pending</highlight><highlight class="stringliteral">&apos;)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pendingSpecCount++;</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this.jasmineDone<sp/>=<sp/>function()<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>banner<sp/>=<sp/>find(&apos;</highlight><highlight class="normal">.banner</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>alert<sp/>=<sp/>find(&apos;</highlight><highlight class="normal">.alert</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>alert.appendChild(createDom(&apos;</highlight><highlight class="normal">span</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">duration</highlight><highlight class="stringliteral">&apos;},<sp/>&apos;</highlight><highlight class="normal">finished<sp/>in<sp/></highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>timer.elapsed()<sp/>/<sp/>1000<sp/>+<sp/>&apos;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&apos;));</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>banner.appendChild(</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">div</highlight><highlight class="stringliteral">&apos;,<sp/>{<sp/>className:<sp/>&apos;</highlight><highlight class="normal">run-options</highlight><highlight class="stringliteral">&apos;<sp/>},</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">span</highlight><highlight class="stringliteral">&apos;,<sp/>{<sp/>className:<sp/>&apos;</highlight><highlight class="normal">trigger</highlight><highlight class="stringliteral">&apos;<sp/>},<sp/>&apos;</highlight><highlight class="normal">Options</highlight><highlight class="stringliteral">&apos;),</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">div</highlight><highlight class="stringliteral">&apos;,<sp/>{<sp/>className:<sp/>&apos;</highlight><highlight class="normal">payload</highlight><highlight class="stringliteral">&apos;<sp/>},</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">div</highlight><highlight class="stringliteral">&apos;,<sp/>{<sp/>className:<sp/>&apos;</highlight><highlight class="normal">exceptions</highlight><highlight class="stringliteral">&apos;<sp/>},</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">input</highlight><highlight class="stringliteral">&apos;,<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>className:<sp/>&apos;</highlight><highlight class="keyword">raise</highlight><highlight class="stringliteral">&apos;,</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id:<sp/>&apos;</highlight><highlight class="keyword">raise</highlight><highlight class="normal">-exceptions</highlight><highlight class="stringliteral">&apos;,</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type:<sp/>&apos;</highlight><highlight class="normal">checkbox</highlight><highlight class="stringliteral">&apos;</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">label</highlight><highlight class="stringliteral">&apos;,<sp/>{<sp/>className:<sp/>&apos;</highlight><highlight class="normal">label</highlight><highlight class="stringliteral">&apos;,<sp/>&apos;</highlight><highlight class="keywordflow">for</highlight><highlight class="stringliteral">&apos;:<sp/>&apos;</highlight><highlight class="keyword">raise</highlight><highlight class="normal">-exceptions</highlight><highlight class="stringliteral">&apos;<sp/>},<sp/>&apos;</highlight><highlight class="keyword">raise</highlight><highlight class="normal"><sp/>exceptions</highlight><highlight class="stringliteral">&apos;)),</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">div</highlight><highlight class="stringliteral">&apos;,<sp/>{<sp/>className:<sp/>&apos;</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">-failures</highlight><highlight class="stringliteral">&apos;<sp/>},</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">input</highlight><highlight class="stringliteral">&apos;,<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>className:<sp/>&apos;</highlight><highlight class="keywordflow">throw</highlight><highlight class="stringliteral">&apos;,</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id:<sp/>&apos;</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">-failures</highlight><highlight class="stringliteral">&apos;,</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type:<sp/>&apos;</highlight><highlight class="normal">checkbox</highlight><highlight class="stringliteral">&apos;</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">label</highlight><highlight class="stringliteral">&apos;,<sp/>{<sp/>className:<sp/>&apos;</highlight><highlight class="normal">label</highlight><highlight class="stringliteral">&apos;,<sp/>&apos;</highlight><highlight class="keywordflow">for</highlight><highlight class="stringliteral">&apos;:<sp/>&apos;</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">-failures</highlight><highlight class="stringliteral">&apos;<sp/>},<sp/>&apos;</highlight><highlight class="normal">stop<sp/>spec<sp/>on<sp/>expectation<sp/>failure</highlight><highlight class="stringliteral">&apos;))</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>raiseCheckbox<sp/>=<sp/>find(&apos;</highlight><highlight class="normal">#</highlight><highlight class="keyword">raise</highlight><highlight class="normal">-exceptions</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>raiseCheckbox.checked<sp/>=<sp/>!env.catchingExceptions();</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>raiseCheckbox.onclick<sp/>=<sp/>onRaiseExceptionsClick;</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>throwCheckbox<sp/>=<sp/>find(&apos;</highlight><highlight class="normal">#</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">-failures</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>throwCheckbox.checked<sp/>=<sp/>env.throwingExpectationFailures();</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>throwCheckbox.onclick<sp/>=<sp/>onThrowExpectationsClick;</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>optionsMenu<sp/>=<sp/>find(&apos;</highlight><highlight class="normal">.run-options</highlight><highlight class="stringliteral">&apos;),</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionsTrigger<sp/>=<sp/>optionsMenu.querySelector(&apos;</highlight><highlight class="normal">.trigger</highlight><highlight class="stringliteral">&apos;),</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionsPayload<sp/>=<sp/>optionsMenu.querySelector(&apos;</highlight><highlight class="normal">.payload</highlight><highlight class="stringliteral">&apos;),</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isOpen<sp/>=<sp/>/\bopen\b/;</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>optionsTrigger.onclick<sp/>=<sp/>function()<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isOpen.test(optionsPayload.className))<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionsPayload.className<sp/>=<sp/>optionsPayload.className.replace(isOpen,<sp/>&apos;</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionsPayload.className<sp/>+=<sp/>&apos;</highlight><highlight class="normal"><sp/>open</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(specsExecuted<sp/>&lt;<sp/>totalSpecsDefined)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>skippedMessage<sp/>=<sp/>&apos;</highlight><highlight class="normal">Ran<sp/></highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>specsExecuted<sp/>+<sp/>&apos;</highlight><highlight class="normal"><sp/>of<sp/></highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>totalSpecsDefined<sp/>+<sp/>&apos;</highlight><highlight class="normal"><sp/>specs<sp/>-<sp/>run<sp/>all</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alert.appendChild(</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">span</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">bar<sp/>skipped</highlight><highlight class="stringliteral">&apos;},</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&apos;,<sp/>{href:<sp/>&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&apos;,<sp/>title:<sp/>&apos;</highlight><highlight class="normal">Run<sp/>all<sp/>specs</highlight><highlight class="stringliteral">&apos;},<sp/>skippedMessage)</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>statusBarMessage<sp/>=<sp/>&apos;</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>statusBarClassName<sp/>=<sp/>&apos;</highlight><highlight class="normal">bar<sp/></highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(totalSpecsDefined<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statusBarMessage<sp/>+=<sp/>pluralize(&apos;</highlight><highlight class="normal">spec</highlight><highlight class="stringliteral">&apos;,<sp/>specsExecuted)<sp/>+<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>pluralize(&apos;</highlight><highlight class="normal">failure</highlight><highlight class="stringliteral">&apos;,<sp/>failureCount);</highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(pendingSpecCount)<sp/>{<sp/>statusBarMessage<sp/>+=<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>pluralize(&apos;</highlight><highlight class="normal">pending<sp/>spec</highlight><highlight class="stringliteral">&apos;,<sp/>pendingSpecCount);<sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statusBarClassName<sp/>+=<sp/>(failureCount<sp/>&gt;<sp/>0)<sp/>?<sp/>&apos;</highlight><highlight class="normal">failed</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>&apos;</highlight><highlight class="normal">passed</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statusBarClassName<sp/>+=<sp/>&apos;</highlight><highlight class="normal">skipped</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statusBarMessage<sp/>+=<sp/>&apos;</highlight><highlight class="normal">No<sp/>specs<sp/>found</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>alert.appendChild(createDom(&apos;</highlight><highlight class="normal">span</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>statusBarClassName},<sp/>statusBarMessage));</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>for(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>failedSuites.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>failedSuite<sp/>=<sp/>failedSuites[i];</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(var<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>failedSuite.failedExpectations.length;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>errorBarMessage<sp/>=<sp/>&apos;</highlight><highlight class="normal">AfterAll<sp/></highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>failedSuite.failedExpectations[j].message;</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>errorBarClassName<sp/>=<sp/>&apos;</highlight><highlight class="normal">bar<sp/>errored</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alert.appendChild(createDom(&apos;</highlight><highlight class="normal">span</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>errorBarClassName},<sp/>errorBarMessage));</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>results<sp/>=<sp/>find(&apos;</highlight><highlight class="normal">.results</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>results.appendChild(summary);</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>summaryList(topResults,<sp/>summary);</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>summaryList(resultsTree,<sp/>domParent)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>specListNode;</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(var<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>resultsTree.children.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>resultNode<sp/>=<sp/>resultsTree.children[i];</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(resultNode.type<sp/>==<sp/>&apos;</highlight><highlight class="normal">suite</highlight><highlight class="stringliteral">&apos;)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>suiteListNode<sp/>=<sp/>createDom(&apos;</highlight><highlight class="normal">ul</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">suite</highlight><highlight class="stringliteral">&apos;,<sp/>id:<sp/>&apos;</highlight><highlight class="normal">suite-</highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>resultNode.result.id},</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">li</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">suite-detail</highlight><highlight class="stringliteral">&apos;},</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&apos;,<sp/>{href:<sp/>specHref(resultNode.result)},<sp/>resultNode.result.description)</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summaryList(resultNode,<sp/>suiteListNode);</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domParent.appendChild(suiteListNode);</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(resultNode.type<sp/>==<sp/>&apos;</highlight><highlight class="normal">spec</highlight><highlight class="stringliteral">&apos;)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(domParent.getAttribute(&apos;</highlight><highlight class="keyword">class</highlight><highlight class="stringliteral">&apos;)<sp/>!=<sp/>&apos;</highlight><highlight class="normal">specs</highlight><highlight class="stringliteral">&apos;)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specListNode<sp/>=<sp/>createDom(&apos;</highlight><highlight class="normal">ul</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">specs</highlight><highlight class="stringliteral">&apos;});</highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domParent.appendChild(specListNode);</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>specDescription<sp/>=<sp/>resultNode.result.description;</highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(noExpectations(resultNode.result))<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specDescription<sp/>=<sp/>&apos;</highlight><highlight class="normal">SPEC<sp/>HAS<sp/>NO<sp/>EXPECTATIONS<sp/></highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>specDescription;</highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(resultNode.result.status<sp/>===<sp/>&apos;</highlight><highlight class="normal">pending</highlight><highlight class="stringliteral">&apos;<sp/>&amp;&amp;<sp/>resultNode.result.pendingReason<sp/>!==<sp/>&apos;</highlight><highlight class="stringliteral">&apos;)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specDescription<sp/>=<sp/>specDescription<sp/>+<sp/>&apos;</highlight><highlight class="normal"><sp/>PENDING<sp/>WITH<sp/>MESSAGE:<sp/></highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>resultNode.result.pendingReason;</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specListNode.appendChild(</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">li</highlight><highlight class="stringliteral">&apos;,<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>className:<sp/>resultNode.result.status,</highlight></codeline>
<codeline lineno="260"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id:<sp/>&apos;</highlight><highlight class="normal">spec-</highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>resultNode.result.id</highlight></codeline>
<codeline lineno="261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&apos;,<sp/>{href:<sp/>specHref(resultNode.result)},<sp/>specDescription)</highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(failures.length)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alert.appendChild(</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">span</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">menu<sp/>bar<sp/>spec-list</highlight><highlight class="stringliteral">&apos;},</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">span</highlight><highlight class="stringliteral">&apos;,<sp/>{},<sp/>&apos;</highlight><highlight class="normal">Spec<sp/>List<sp/>|<sp/></highlight><highlight class="stringliteral">&apos;),</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">failures-menu</highlight><highlight class="stringliteral">&apos;,<sp/>href:<sp/>&apos;</highlight><highlight class="normal">#</highlight><highlight class="stringliteral">&apos;},<sp/>&apos;</highlight><highlight class="normal">Failures</highlight><highlight class="stringliteral">&apos;)));</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alert.appendChild(</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">span</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">menu<sp/>bar<sp/>failure-list</highlight><highlight class="stringliteral">&apos;},</highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&apos;,<sp/>{className:<sp/>&apos;</highlight><highlight class="normal">spec-list-menu</highlight><highlight class="stringliteral">&apos;,<sp/>href:<sp/>&apos;</highlight><highlight class="normal">#</highlight><highlight class="stringliteral">&apos;},<sp/>&apos;</highlight><highlight class="normal">Spec<sp/>List</highlight><highlight class="stringliteral">&apos;),</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createDom(&apos;</highlight><highlight class="normal">span</highlight><highlight class="stringliteral">&apos;,<sp/>{},<sp/>&apos;</highlight><highlight class="normal"><sp/>|<sp/>Failures<sp/></highlight><highlight class="stringliteral">&apos;)));</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>find(&apos;</highlight><highlight class="normal">.failures-menu</highlight><highlight class="stringliteral">&apos;).onclick<sp/>=<sp/>function()<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setMenuModeTo(&apos;</highlight><highlight class="normal">failure-list</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="281"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="282"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>find(&apos;</highlight><highlight class="normal">.spec-list-menu</highlight><highlight class="stringliteral">&apos;).onclick<sp/>=<sp/>function()<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setMenuModeTo(&apos;</highlight><highlight class="normal">spec-list</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setMenuModeTo(&apos;</highlight><highlight class="normal">failure-list</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>failureNode<sp/>=<sp/>find(&apos;</highlight><highlight class="normal">.failures</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(var<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>failures.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failureNode.appendChild(failures[i]);</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>return<sp/>this;</highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>find(selector)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>getContainer().querySelector(&apos;</highlight><highlight class="normal">.jasmine_html-reporter<sp/></highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>selector);</highlight></codeline>
<codeline lineno="299"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>clearPrior()<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>return<sp/>the<sp/>reporter</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>oldReporter<sp/>=<sp/>find(&apos;</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="304"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if(oldReporter)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getContainer().removeChild(oldReporter);</highlight></codeline>
<codeline lineno="307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>createDom(type,<sp/>attrs,<sp/>childrenVarArgs)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>el<sp/>=<sp/>createElement(type);</highlight></codeline>
<codeline lineno="312"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(var<sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>arguments.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>child<sp/>=<sp/>arguments[i];</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(typeof<sp/>child<sp/>===<sp/>&apos;</highlight><highlight class="keywordtype">string</highlight><highlight class="stringliteral">&apos;)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el.appendChild(createTextNode(child));</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(child)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el.appendChild(child);</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(var<sp/>attr<sp/>in<sp/>attrs)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(attr<sp/>==<sp/>&apos;</highlight><highlight class="normal">className</highlight><highlight class="stringliteral">&apos;)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el[attr]<sp/>=<sp/>attrs[attr];</highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el.setAttribute(attr,<sp/>attrs[attr]);</highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="333"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>el;</highlight></codeline>
<codeline lineno="334"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="336"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>pluralize(singular,<sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>word<sp/>=<sp/>(count<sp/>==<sp/>1<sp/>?<sp/>singular<sp/>:<sp/>singular<sp/>+<sp/>&apos;</highlight><highlight class="normal">s</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>&apos;</highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>count<sp/>+<sp/>&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>word;</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>specHref(result)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>addToExistingQueryString(&apos;</highlight><highlight class="normal">spec</highlight><highlight class="stringliteral">&apos;,<sp/>result.fullName);</highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>defaultQueryString(key,<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>key<sp/>+<sp/>&apos;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>value;</highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="350"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>setMenuModeTo(mode)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>htmlReporterMain.setAttribute(&apos;</highlight><highlight class="keyword">class</highlight><highlight class="stringliteral">&apos;,<sp/>&apos;</highlight><highlight class="normal">jasmine_html-reporter<sp/></highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>mode);</highlight></codeline>
<codeline lineno="352"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="354"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>noExpectations(result)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(result.failedExpectations.length<sp/>+<sp/>result.passedExpectations.length)<sp/>===<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="356"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.status<sp/>===<sp/>&apos;</highlight><highlight class="normal">passed</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="357"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="360"><highlight class="stringliteral"><sp/><sp/>return<sp/>HtmlReporter;</highlight></codeline>
<codeline lineno="361"><highlight class="stringliteral">};</highlight></codeline>
<codeline lineno="362"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="363"><highlight class="stringliteral">jasmineRequire.HtmlSpecFilter<sp/>=<sp/>function()<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="stringliteral"><sp/><sp/>function<sp/>HtmlSpecFilter(options)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>var<sp/>filterString<sp/>=<sp/>options<sp/>&amp;&amp;<sp/>options.filterString()<sp/>&amp;&amp;<sp/>options.filterString().replace(/[-[\]{}()*+?.,\\^$|#\s]/g,<sp/>&apos;</highlight><highlight class="normal">\\$&amp;</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="366"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>var<sp/>filterPattern<sp/>=<sp/>new<sp/>RegExp(filterString);</highlight></codeline>
<codeline lineno="367"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="368"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this.matches<sp/>=<sp/>function(specName)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>filterPattern.test(specName);</highlight></codeline>
<codeline lineno="370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"><sp/><sp/>return<sp/>HtmlSpecFilter;</highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral">};</highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral">jasmineRequire.ResultsNode<sp/>=<sp/>function()<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/>function<sp/>ResultsNode(result,<sp/>type,<sp/>parent)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this.result<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this.type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this.parent<sp/>=<sp/>parent;</highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this.children<sp/>=<sp/>[];</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this.addChild<sp/>=<sp/>function(result,<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>this.children.push(new<sp/>ResultsNode(result,<sp/>type,<sp/>this));</highlight></codeline>
<codeline lineno="386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="387"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this.last<sp/>=<sp/>function()<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>this.children[this.children.length<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="390"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="391"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="393"><highlight class="stringliteral"><sp/><sp/>return<sp/>ResultsNode;</highlight></codeline>
<codeline lineno="394"><highlight class="stringliteral">};</highlight></codeline>
<codeline lineno="395"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="396"><highlight class="stringliteral">jasmineRequire.QueryString<sp/>=<sp/>function()<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="stringliteral"><sp/><sp/>function<sp/>QueryString(options)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="399"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this.navigateWithNewParam<sp/>=<sp/>function(key,<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>options.getWindowLocation().search<sp/>=<sp/>this.fullStringWithNewParam(key,<sp/>value);</highlight></codeline>
<codeline lineno="401"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="402"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this.fullStringWithNewParam<sp/>=<sp/>function(key,<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>paramMap<sp/>=<sp/>queryStringToParamMap();</highlight></codeline>
<codeline lineno="405"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>paramMap[key]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="406"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>toQueryString(paramMap);</highlight></codeline>
<codeline lineno="407"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="408"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="409"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>this.getParam<sp/>=<sp/>function(key)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>queryStringToParamMap()[key];</highlight></codeline>
<codeline lineno="411"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="412"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="413"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>return<sp/>this;</highlight></codeline>
<codeline lineno="414"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="415"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>toQueryString(paramMap)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>qStrPairs<sp/>=<sp/>[];</highlight></codeline>
<codeline lineno="417"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(var<sp/>prop<sp/>in<sp/>paramMap)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qStrPairs.push(encodeURIComponent(prop)<sp/>+<sp/>&apos;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>encodeURIComponent(paramMap[prop]));</highlight></codeline>
<codeline lineno="419"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&apos;<sp/>+<sp/>qStrPairs.join(&apos;</highlight><highlight class="normal">&amp;</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="421"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="423"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>queryStringToParamMap()<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>paramStr<sp/>=<sp/>options.getWindowLocation().search.substring(1),</highlight></codeline>
<codeline lineno="425"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params<sp/>=<sp/>[],</highlight></codeline>
<codeline lineno="426"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paramMap<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="427"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="428"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(paramStr.length<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params<sp/>=<sp/>paramStr.split(&apos;</highlight><highlight class="normal">&amp;</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="430"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(var<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>params.length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>p<sp/>=<sp/>params[i].split(&apos;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&apos;);</highlight></codeline>
<codeline lineno="432"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>value<sp/>=<sp/>decodeURIComponent(p[1]);</highlight></codeline>
<codeline lineno="433"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(value<sp/>===<sp/>&apos;</highlight><highlight class="keyword">true</highlight><highlight class="stringliteral">&apos;<sp/>||<sp/>value<sp/>===<sp/>&apos;</highlight><highlight class="keyword">false</highlight><highlight class="stringliteral">&apos;)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>JSON.parse(value);</highlight></codeline>
<codeline lineno="435"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paramMap[decodeURIComponent(p[0])]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="437"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="440"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>paramMap;</highlight></codeline>
<codeline lineno="441"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="443"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="445"><highlight class="stringliteral"><sp/><sp/>return<sp/>QueryString;</highlight></codeline>
<codeline lineno="446"><highlight class="stringliteral">};</highlight></codeline>
    </programlisting>
    <location file="/home/leif/Dropbox/Software3308-Group1/FinalSubmission/GeoReport/jasmine/lib/jasmine-2.3.4/jasmine-html.js"/>
  </compounddef>
</doxygen>
